#pragma checksum "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_port_information.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "3c8294da89a26cbf861170f84ea10af8d571ae53"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_csat_report_report_port_information), @"mvc.1.0.view", @"/Views/csat_report/report_port_information.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/csat_report/report_port_information.cshtml", typeof(AspNetCore.Views_csat_report_report_port_information))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\_ViewImports.cshtml"
using OwnYITCSAT;

#line default
#line hidden
#line 2 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\_ViewImports.cshtml"
using OwnYITCSAT.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3c8294da89a26cbf861170f84ea10af8d571ae53", @"/Views/csat_report/report_port_information.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fbc54f8cb37d807092c8e3ca3f38d3620e0913e8", @"/Views/_ViewImports.cshtml")]
    public class Views_csat_report_report_port_information : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "-1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.SingleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "T.etimestamp", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "T.protocol", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "T.local_port", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "T.remote_ip", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "T.remote_port", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "T.status", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("frm_portinfrm_report"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("frm_portinfrm_report"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "T.pid", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "T.process", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "T.local_ip", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "T.stimestamp", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("port_process_form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("port_process_form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("port_Authentication_form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_18 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("port_Authentication_form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_19 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("add_port_form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_20 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("add_port_form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_port_information.cshtml"
  
    ViewData["Title"] = "report_port_information";
    Layout = "~/Views/Shared/ownyit_main_page.cshtml";

#line default
#line hidden
            BeginContext(117, 2569, true);
            WriteLiteral(@"
<script type=""text/javascript"">
    $(document).ready(function () {
        $(""#port_process_up"").click(function () {
            $(""#port_process_form"").toggle();
        });
    });

    $(document).ready(function () {
        $(""#port_Authentication_up"").click(function () {
            $(""#port_Authentication_form"").toggle();

        });
    });
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
            && (charCode < 48 || charCode > 57))
            return false;
        return true;
    }

    function validate() {
        var $valid = $('#add_port_form').valid();
        if (!$valid) {
            $validatorform.focusInvalid();
            return false;
        }
        //if (document.add_port_form.portnumber.value == """") {
        //    alert(""Please provide Port Number!"");
        //    document.add_port_form.portnumber.focus();
        //    return false;
        //}
       ");
            WriteLiteral(@" //if (document.add_port_form.portname.value == """") {
        //    alert(""Please provide Port Name!"");
        //    document.add_port_form.portname.focus();
        //    return false;
        //}
        else {
            fun_portauthorize();
            return (true);
        }
    }
    $(document).ready(function () {
        $('.port_simple_table').DataTable({
            paging: false,
            order: [],
            columnDefs: [{ orderable: false }],
            searching: false,
            info: false,
            responsive: false,
        });
        $("".table"").css({ ""width"": ""100%"" });
        $("".dataTables_scrollHeadInner "").css({ ""width"": ""100%"" });
    });

    var now = new Date();
    var day = (""0"" + now.getDate()).slice(-2);
    var month = (""0"" + (now.getMonth() + 1)).slice(-2);
    var today = now.getFullYear() + ""-"" + (month) + ""-"" + (day);
</script>

<div class=""row"">

    <div class=""ibox float-e-margins "">
        <div class=""ibox-content"" style");
            WriteLiteral(@"=""padding:4px;"">
            <div class=""pull-right form_label btn_top_margin"">
                <button class=""btn btn-primary btn-md day"" data-toggle=""modal"" data-target=""#port_Authentication_popup"">Port Authentication Report</button>
                <button class=""btn btn-primary btn-md day"" data-toggle=""modal"" data-target=""#port_process_popup"">Port Wise Process Informations</button>
            </div>

            <ul class=""breadcrumb"" style=""margin-bottom:0px;"">
                <li>
                    ");
            EndContext();
            BeginContext(2687, 69, false);
#line 79 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_port_information.cshtml"
               Write(Html.ActionLink("Reports", "report_agent_information", "csat_report"));

#line default
#line hidden
            EndContext();
            BeginContext(2756, 347, true);
            WriteLiteral(@"
                    <i class=""icon-angle-right""></i>
                </li>
                <li> Port Information  </li>
            </ul>
        </div>
    </div>

    <!--side menu-->
    <div class=""col-sm-2 col-md-2 col-lg-2 no_padding"">
        <div class=""ibox float-e-margins "">
            <div class=""ibox-content sidemenu"">
");
            EndContext();
            BeginContext(3144, 32, false);
#line 92 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_port_information.cshtml"
               Write(Html.Partial("csat_report_menu"));

#line default
#line hidden
            EndContext();
#line 92 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_port_information.cshtml"
                                                     ;
                

#line default
#line hidden
            BeginContext(3198, 468, true);
            WriteLiteral(@"            </div>
        </div>
    </div>
    <!--side menu end-->

    <div class=""col-sm-10 col-md-10 col-lg-10"">
        <div class=""ibox float-e-margins"" style=""margin-bottom: 10px;"">
            <div class=""ibox-content"">
                <div class=""row"">
                    <div class=""col-sm-12 col-md-12 col-lg-12"">

                        <div class=""row"">
                            <div class=""col-xs-12"">
                                ");
            EndContext();
            BeginContext(3666, 541, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4e34b46120fa499fb0f1ff5f799c987f", async() => {
                BeginContext(3710, 490, true);
                WriteLiteral(@"
                                    <div class=""form-group"">
                                        <label for=""nameField"" style=""margin-top: -5px;background-color: #fff;text-align: center;color: #3D93C8;width: 120px;"" class=""col-xs-2 form_label"">&nbsp;&nbsp;Advance Search&nbsp;&nbsp;</label>
                                        <div class=""col-xs-10"">
                                        </div>
                                    </div>

                                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(4207, 228, true);
            WriteLiteral("\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-xs-12\">\r\n                        ");
            EndContext();
            BeginContext(4435, 4622, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d2cbb2fb5a954d9a8bbe5bf6a3fb8a5a", async() => {
                BeginContext(4533, 729, true);
                WriteLiteral(@"
                            <div class=""form-group"">
                                <label for=""nameField"" class=""col-xs-1 form_label"">Branch/ Unit</label>
                                <div class=""col-xs-4"">
                                    <select class=""form-control col-sm-3 col-lg-3 col-md-3"" name=""Branch/Unit"" id=""drpou""></select>
                                </div>
                                <label for=""nameField"" class=""col-xs-1 form_label"">System Name</label>
                                <div class=""col-xs-2"" id=""selectsys2"">
                                    <select class=""form-control col-sm-3 col-lg-3 col-md-3"" name=""Device"" id=""drpDevice"">
                                        ");
                EndContext();
                BeginContext(5262, 46, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e162977bd0514c0eaea971088214106d", async() => {
                    BeginContext(5281, 18, true);
                    WriteLiteral("Select System Name");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(5308, 944, true);
                WriteLiteral(@"
                                    </select>
                                </div>
                                <div class=""col-xs-2"" id=""inputsystemname2"">
                                    <input type=""text"" class=""form-control col-sm-3 col-lg-3 col-md-3"" name=""add_systemname2"" id=""add_systemname2"">
                                </div>
                                <div class=""col-xs-1"">
                                    <input type=""checkbox"" class=""form-check-input"" id=""add_system_chk2"" name=""add_system_chk2"" style=""width:20px;height:25px;"">
                                </div>
                                <label for=""nameField"" class=""col-xs-1 form_label"" style=""margin-left:-48px;"">IP Address</label>
                                <div class=""col-xs-2"">
                                    <input type=""text"" class=""form-control col-sm-3 col-lg-3 col-md-3"" placeholder="""" name=""drpip"" id=""drpip"">
");
                EndContext();
                BeginContext(6513, 780, true);
                WriteLiteral(@"                                </div>
                            </div>


                            <div class=""form-group"">
                                <label for=""nameField"" class=""col-xs-1 form_label"">Date Range</label>
                                <div class=""col-xs-3"">
                                    <input type=""text"" name=""datefilter"" class=""form-control"" placeholder=""DD/MM/YYYY -  DD/MM/YYYY "" id=""date"">
                                </div>
                                <label for=""nameField"" class=""col-xs-1"">Search</label>
                                <div class=""col-xs-2"">
                                    <select class=""form-control col-sm-2 col-lg-2 col-md-2"" name=""type"" id=""Stype"">
                                        ");
                EndContext();
                BeginContext(7293, 39, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8f1ae43161b747319fc56dc6f2ab382a", async() => {
                    BeginContext(7312, 11, true);
                    WriteLiteral("Select Type");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(7332, 42, true);
                WriteLiteral("\r\n                                        ");
                EndContext();
                BeginContext(7374, 47, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bb8101cf03b14d38a39d48151a60a71c", async() => {
                    BeginContext(7403, 9, true);
                    WriteLiteral("Timestamp");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(7421, 42, true);
                WriteLiteral("\r\n                                        ");
                EndContext();
                BeginContext(7463, 44, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "df6fc52ba3f8428d9b527efd74958806", async() => {
                    BeginContext(7490, 8, true);
                    WriteLiteral("Protocol");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(7507, 42, true);
                WriteLiteral("\r\n                                        ");
                EndContext();
                BeginContext(7549, 49, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "63a79af226904c3d830cb0d01fe70a08", async() => {
                    BeginContext(7578, 11, true);
                    WriteLiteral("Local Port ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(7598, 42, true);
                WriteLiteral("\r\n                                        ");
                EndContext();
                BeginContext(7640, 47, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed736d50807840978156a0fbc9c813dc", async() => {
                    BeginContext(7668, 10, true);
                    WriteLiteral("Remote IP ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_6.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(7687, 42, true);
                WriteLiteral("\r\n                                        ");
                EndContext();
                BeginContext(7729, 50, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b2b68dfd47d6487e8b9ba16b93d85571", async() => {
                    BeginContext(7759, 11, true);
                    WriteLiteral("Remote Port");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_7.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(7779, 42, true);
                WriteLiteral("\r\n                                        ");
                EndContext();
                BeginContext(7821, 40, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6c258a571b004669835ec68307cf3196", async() => {
                    BeginContext(7846, 6, true);
                    WriteLiteral("Status");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(7861, 1189, true);
                WriteLiteral(@"

                                    </select>
                                </div>
                                <div class=""col-xs-3"">
                                    <div class=""input-group"">
                                        <input type=""search"" class=""form-control"" placeholder=""Search"" id=""Svalue"" name=""Svalue"">
                                        <div class=""input-group-btn"">
                                            <button class=""btn btn-default"" type=""button"" onclick=""portdatabind()"">
                                                <i class=""glyphicon glyphicon-search""></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                <div class=""pull-left col-xs-1"">
                                    <input type=""button"" class=""btn btn-primary"" value=""Show"" onclick=""portdatabind()"">
                             ");
                WriteLiteral("   </div>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n\r\n\r\n                            </div>\r\n                        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(9057, 448, true);
            WriteLiteral(@"

                    </div>
                </div>
            </div>

        </div>

        <!--form  content end-->
        <!--port  info  form end-->
        <!--port  info Datatable start-->
        <div class=""row ibox2"">
            <div class=""col-sm-12 col-md-12 col-lg-12 ibox2-content"" id=""divportinfo_div"">
                <table id=""divportinfo"" class=""table table-striped table-bordered display nowrap"" width=""100%"">
");
            EndContext();
            BeginContext(9899, 1292, true);
            WriteLiteral(@"                </table>
            </div>
        </div>
        <!--port  info Datatable end-->
    </div>
    <div class=""space_bottom"">&nbsp;</div>
</div>

<!-- port process info pop-up model box  Content-->
<div class=""modal fade"" id=""port_process_popup"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"" data-backdrop=""static"" data-keyboard=""false"">
    <div class=""modal-dialog  modal-lg"" style=""margin-top: 82px;"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true"" onclick=""cleardata()"">&times;</button>
                <h6 class="" modal-title"">
                    Port Process Information Report
                </h6>
            </div>
            <div class=""modal-body model_body_scroll"">
                <div class=""row"">
                    <div class=""col-sm-12 col-md-12 col-lg-12"">

                        <!--form  content-->
         ");
            WriteLiteral(@"               <div class=""row"">
                            <i id=""port_process_up"" class=""pull-right glyphicon glyphicon-chevron-down"" style=""color:#74b1f4;font-size: 12px;""></i>
                            <div class=""col-xs-10"">
                                ");
            EndContext();
            BeginContext(11191, 5364, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2cadfcb33e7a49fd99a1b51d11506e7b", async() => {
                BeginContext(11283, 803, true);
                WriteLiteral(@"
                                    <div class=""form-group"">
                                        <label for=""nameField"" class=""col-xs-1 form_label"">Branch/ Unit</label>
                                        <div class=""col-xs-4"">
                                            <select class=""form-control col-sm-3 col-lg-3 col-md-3"" name=""Branch/Unit"" id=""drpou1""></select>
                                        </div>
                                        <label for=""nameField"" class=""col-xs-1 form_label"">System Name</label>
                                        <div class=""col-xs-2"" id=""selectsys1"">
                                            <select class=""form-control col-sm-3 col-lg-3 col-md-3"" name=""Device"" id=""drpDevice1"">
                                                ");
                EndContext();
                BeginContext(12086, 46, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "622860db6d934ee48fd503488154d4b1", async() => {
                    BeginContext(12105, 18, true);
                    WriteLiteral("Select System Name");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(12132, 1007, true);
                WriteLiteral(@"
                                            </select>
                                        </div>
                                        <div class=""col-xs-2"" id=""inputsystemname1"">
                                            <input type=""text"" class=""form-control col-sm-3 col-lg-3 col-md-3"" name=""add_systemname1"" id=""add_systemname1"">
                                        </div>
                                        <div class=""col-xs-1"">
                                            <input type=""checkbox"" class=""form-check-input"" id=""add_system_chk1"" name=""add_system_chk1"" style=""width:20px;height:25px;"">
                                        </div>
                                        <label for=""nameField"" class=""col-xs-1 form_label"">IP Address</label>
                                        <div class=""col-xs-2"">
                                            <input type=""text"" class=""form-control col-sm-3 col-lg-3 col-md-3"" placeholder="""" name=""drpip1"" id=""drpip1"">
");
                EndContext();
                BeginContext(13425, 883, true);
                WriteLiteral(@"                                        </div>
                                    </div>


                                    <div class=""form-group"">
                                        <label for=""nameField"" class=""col-xs-1 form_label"">Date Range</label>
                                        <div class=""col-xs-3"">
                                            <input type=""text"" name=""datefilter1"" class=""form-control"" placeholder=""DD/MM/YYYY -  DD/MM/YYYY "" id=""date1"">
                                        </div>
                                        <label for=""nameField"" class=""col-xs-1 form_label "">Search</label>
                                        <div class=""col-xs-2"">
                                            <select class=""form-control col-sm-2 col-lg-2 col-md-2"" name=""type"" id=""Stype1"">
                                                ");
                EndContext();
                BeginContext(14308, 39, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "23889606bde64bcdbb8ee4a1e82dd710", async() => {
                    BeginContext(14327, 11, true);
                    WriteLiteral("Select Type");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(14347, 50, true);
                WriteLiteral("\r\n                                                ");
                EndContext();
                BeginContext(14397, 41, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b82dd803181444609f05accca1e2a768", async() => {
                    BeginContext(14419, 10, true);
                    WriteLiteral("Process ID");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_11.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_11);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(14438, 50, true);
                WriteLiteral("\r\n                                                ");
                EndContext();
                BeginContext(14488, 42, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4ad24bd05bee4e6fb0cd3fae80c60c58", async() => {
                    BeginContext(14514, 7, true);
                    WriteLiteral("Process");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_12.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_12);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(14530, 50, true);
                WriteLiteral("\r\n                                                ");
                EndContext();
                BeginContext(14580, 44, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7e2e3306bbb24ef49e651016cd84768f", async() => {
                    BeginContext(14607, 8, true);
                    WriteLiteral("Protocol");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(14624, 50, true);
                WriteLiteral("\r\n                                                ");
                EndContext();
                BeginContext(14674, 45, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b3736fe0a30347c18b97c6e8c60161c9", async() => {
                    BeginContext(14701, 9, true);
                    WriteLiteral("Local IP ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_13.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(14719, 50, true);
                WriteLiteral("\r\n                                                ");
                EndContext();
                BeginContext(14769, 48, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3b25b94598244b478e82dfc41e53e7be", async() => {
                    BeginContext(14798, 10, true);
                    WriteLiteral("Local Port");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(14817, 50, true);
                WriteLiteral("\r\n                                                ");
                EndContext();
                BeginContext(14867, 47, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3ee524a2c2b4432798dba8334883c147", async() => {
                    BeginContext(14895, 10, true);
                    WriteLiteral("Remote IP ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_6.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(14914, 50, true);
                WriteLiteral("\r\n                                                ");
                EndContext();
                BeginContext(14964, 50, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a292577083024f45a0e239242ff6ad0c", async() => {
                    BeginContext(14994, 11, true);
                    WriteLiteral("Remote Port");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_7.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(15014, 50, true);
                WriteLiteral("\r\n                                                ");
                EndContext();
                BeginContext(15064, 48, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4d6eb4cf2e4f409ba52b270c11de5846", async() => {
                    BeginContext(15093, 10, true);
                    WriteLiteral("Start Date");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_14.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_14);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(15112, 50, true);
                WriteLiteral("\r\n                                                ");
                EndContext();
                BeginContext(15162, 47, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "952f55ae41ac4e25871358b06cfba514", async() => {
                    BeginContext(15191, 9, true);
                    WriteLiteral("End Date ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(15209, 50, true);
                WriteLiteral("\r\n                                                ");
                EndContext();
                BeginContext(15259, 40, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed883300334b4f938a1bf6ba07a3f8a6", async() => {
                    BeginContext(15284, 6, true);
                    WriteLiteral("status");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(15299, 1249, true);
                WriteLiteral(@"

                                            </select>
                                        </div>
                                        <div class=""col-xs-3"">
                                            <div class=""input-group"">
                                                <input type=""search"" class=""form-control"" placeholder=""Search"" id=""Svalue1"" name=""Svalue1"">
                                                <div class=""input-group-btn"">
                                                    <button class=""btn btn-default"" type=""button"" onclick=""portProcessdatabind()"">
                                                        <i class=""glyphicon glyphicon-search""></i>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                        <div class=""pull-left col-xs-1"">
                                     ");
                WriteLiteral("       <input type=\"button\" class=\"btn btn-primary\" value=\"Show\" onclick=\"portProcessdatabind()\">\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(16555, 2329, true);
            WriteLiteral(@"

                            </div>
                        </div>
                        <!--End form  content-->

                    </div>
                </div>

                <!--port process info Datatable start-->
                <div class=""row"">
                    <div class=""col-sm-12 col-md-12 col-lg-12 "" id=""divportprocess_div"">
                        <table id=""divportprocess"" class=""table table-striped table-bordered display nowrap"" width=""100%""></table>
                    </div>
                </div>
                <!--port process info Datatable end-->
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-primary"" data-dismiss=""modal"" onclick=""cleardata()"">Close</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>
<!-- End port process info  pop-up model box Content -->
<!-- start port Authentication Report pop-up model box Content -->
<div class=""m");
            WriteLiteral(@"odal fade"" id=""port_Authentication_popup"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"" data-backdrop=""static"" data-keyboard=""false"">
    <div class=""modal-dialog  modal-lg"" style=""margin-top: 100px;"">
        <div class=""modal-content"">
            <div class=""modal-header"" style=""padding: 8px 5px 15px 15px;"">
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true"" onclick=""cleardata()"">&times;</button>
                <button class=""btn btn-primary btn-md day"" data-toggle=""modal"" data-target=""#port_Autentic_Setting_popup"" onclick=""funcportauthenticationsetting()"">Port Authentication Setting</button>
                <h6 class="" modal-title"">
                    Port Authentication Report
                </h6>
            </div>
            <div class=""modal-body model_body_scroll"">
                <div class=""row"">
                    <div class=""col-sm-12 col-md-12 col-lg-12"">

                        <!--form  content-->
   ");
            WriteLiteral(@"                     <div class=""row"">
                            <i id=""port_Authentication_up"" class=""pull-right glyphicon glyphicon-chevron-down"" style=""color:#74b1f4;font-size: 12px;""></i>
                            <div class=""col-xs-10"">
                                ");
            EndContext();
            BeginContext(18884, 5153, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "01e65d0bb15e481993eab5f8595b99c3", async() => {
                BeginContext(18990, 802, true);
                WriteLiteral(@"
                                    <div class=""form-group"">
                                        <label for=""nameField"" class=""col-xs-1 form_label"">Branch/ Unit</label>
                                        <div class=""col-xs-3"">
                                            <select class=""form-control col-sm-3 col-lg-3 col-md-3"" name=""Branch/Unit"" id=""drpou2""></select>
                                        </div>
                                        <label for=""nameField"" class=""col-xs-1 form_label"">System Name</label>
                                        <div class=""col-xs-2"" id=""selectsys"">
                                            <select class=""form-control col-sm-3 col-lg-3 col-md-3"" name=""Device"" id=""drpDevice2"">
                                                ");
                EndContext();
                BeginContext(19792, 46, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "64de843b4de546b09f33638248338bd8", async() => {
                    BeginContext(19811, 18, true);
                    WriteLiteral("Select System Name");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(19838, 1002, true);
                WriteLiteral(@"
                                            </select>
                                        </div>
                                        <div class=""col-xs-2"" id=""inputsystemname"">
                                            <input type=""text"" class=""form-control col-sm-3 col-lg-3 col-md-3"" name=""add_systemname"" id=""add_systemname"">
                                        </div>
                                        <div class=""col-xs-1"">
                                            <input type=""checkbox"" class=""form-check-input"" id=""add_system_chk"" name=""add_system_chk"" style=""width:20px;height:25px;"">
                                        </div>
                                        <label for=""nameField"" class=""col-xs-1 form_label"">IP Address</label>
                                        <div class=""col-xs-2"">
                                            <input type=""text"" class=""form-control col-sm-3 col-lg-3 col-md-3"" placeholder="""" name=""drpip2"" id=""drpip2"">
");
                EndContext();
                BeginContext(21126, 881, true);
                WriteLiteral(@"                                        </div>
                                    </div>

                                    <div class=""form-group"">
                                        <label for=""nameField"" class=""col-xs-1 form_label"">Date Range</label>
                                        <div class=""col-xs-3"">
                                            <input type=""text"" name=""datefilter2"" class=""form-control"" placeholder=""DD/MM/YYYY -  DD/MM/YYYY "" id=""date2"">
                                        </div>
                                        <label for=""nameField"" class=""col-xs-1 form_label "">Search</label>
                                        <div class=""col-xs-2"">
                                            <select class=""form-control col-sm-2 col-lg-2 col-md-2"" name=""type"" id=""Stype2"">
                                                ");
                EndContext();
                BeginContext(22007, 39, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6409922235c94cb59319313b65c774fb", async() => {
                    BeginContext(22026, 11, true);
                    WriteLiteral("Select Type");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(22046, 50, true);
                WriteLiteral("\r\n                                                ");
                EndContext();
                BeginContext(22096, 44, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0076425afd0a4675a94591cc20c8f205", async() => {
                    BeginContext(22123, 8, true);
                    WriteLiteral("Protocol");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(22140, 50, true);
                WriteLiteral("\r\n                                                ");
                EndContext();
                BeginContext(22190, 45, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c0aa6884750849b2a75874981f38420c", async() => {
                    BeginContext(22217, 9, true);
                    WriteLiteral("Local IP ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_13.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(22235, 50, true);
                WriteLiteral("\r\n                                                ");
                EndContext();
                BeginContext(22285, 48, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a9df49b43c764cdcb332fb40284ecf5d", async() => {
                    BeginContext(22314, 10, true);
                    WriteLiteral("Local Port");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(22333, 50, true);
                WriteLiteral("\r\n                                                ");
                EndContext();
                BeginContext(22383, 47, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3ed51de1ee1944bbbdb3c0df5333e5a1", async() => {
                    BeginContext(22411, 10, true);
                    WriteLiteral("Remote IP ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_6.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(22430, 50, true);
                WriteLiteral("\r\n                                                ");
                EndContext();
                BeginContext(22480, 50, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2550bdff8eb64aca9ba9d1418b0d15b5", async() => {
                    BeginContext(22510, 11, true);
                    WriteLiteral("Remote Port");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_7.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(22530, 50, true);
                WriteLiteral("\r\n                                                ");
                EndContext();
                BeginContext(22580, 48, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4d3c7e0e447d4d7db2d49d8d7cab3a7a", async() => {
                    BeginContext(22609, 10, true);
                    WriteLiteral("Start Date");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_14.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_14);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(22628, 50, true);
                WriteLiteral("\r\n                                                ");
                EndContext();
                BeginContext(22678, 47, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "41e8d5b231d24230b65ab08348bf2da6", async() => {
                    BeginContext(22707, 9, true);
                    WriteLiteral("End Date ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(22725, 50, true);
                WriteLiteral("\r\n                                                ");
                EndContext();
                BeginContext(22775, 40, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8e9d1527b49c4acd9f7c654417dc7851", async() => {
                    BeginContext(22800, 6, true);
                    WriteLiteral("status");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(22815, 1215, true);
                WriteLiteral(@"
                                            </select>
                                        </div>
                                        <div class=""col-xs-3"">
                                            <div class=""input-group"">
                                                <input type=""search"" class=""form-control"" placeholder=""Search"" id=""Svalue2"" name=""Svalue2"">
                                                <div class=""input-group-btn"">
                                                    <button class=""btn btn-default"" type=""submit"">
                                                        <i class=""glyphicon glyphicon-search""></i>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                        <div class=""pull-left col-xs-1"">
                                            <input type=""button"" class=");
                WriteLiteral("\"btn btn-primary\" value=\"Show\" onclick=\"portauthorizereport()\">\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(24037, 3196, true);
            WriteLiteral(@"

                            </div>
                        </div>
                        <!--End form  content-->

                    </div>
                </div>

                <!--port process Authentication reprot Datatable start-->
                <div class=""row"">
                    <div class=""col-sm-12 col-md-12 col-lg-12 "" id=""divportauthorizereport_div"">
                        <table id=""divportauthorizereport"" class=""table table-striped table-bordered display nowrap"" width=""100%""></table>
                    </div>
                </div>
                <!--port process Authentication report Datatable end-->
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>
<!-- End port Authentication Report pop-up model box Content -->
<!-- start port port_Autentic_Setting_popup  model box Content -->
<div class=""modal fade"" id=""port_Autentic_Setting_popup"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"" d");
            WriteLiteral(@"ata-backdrop=""static"" data-keyboard=""false"">
    <div class=""modal-dialog  modal-lg"" style=""margin-top: 100px;"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true"">&times;</button>
                <h6 class="" modal-title"">
                    Port Authorized/Unauthorized Port
                </h6>
            </div>
            <div class=""ibox float-e-margins"" style=""margin:0px;"">
                <div class=""ibox-content"">
                    <div class=""row"">
                        <div class=""col-sm-12 col-md-12 col-lg-12"">
                            <button class="" pull-right btn btn-primary btn-md day"" data-toggle=""modal"" data-target=""#Add_port_popup"" style=""margin-bottom:5px;padding:0px 4px;"">Add New Port <b style=""font-weight:bolder;"">+</b></button>
                        </div>
                    </div>
                    <div class=""row"">
                        <d");
            WriteLiteral(@"iv class=""col-sm-12 col-md-12 col-lg-12"">
                            <div class=""table-responsive div_portauthsetting"">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>
<!-- End port port_Autentic_Setting_popup  model box Content -->
<!-- start port Add_port_popup  model box Content -->
<div class=""modal fade"" id=""Add_port_popup"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"" data-backdrop=""static"" data-keyboard=""false"">
    <div class=""modal-dialog  modal-small"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true"" onclick=""cleardata()"">&times;</button>
                <h6 class="" modal-title"">
                    Add Port
                </h6>
            </div>
            <div c");
            WriteLiteral("lass=\"modal-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-xs-12\">\r\n                        ");
            EndContext();
            BeginContext(27233, 2682, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "84c09bd684e0445192fef67a0c68744b", async() => {
                BeginContext(27317, 2174, true);
                WriteLiteral(@"
                            <div class=""form-group"">
                                <label for=""nameField"" class=""col-xs-4"">Port Number</label>
                                <div class=""col-xs-8"">
                                    <input class=""form-control"" type=""text"" placeholder=""Enter Port Number"" onkeypress=""return isNumberKey(event)"" maxlength=""5"" id=""portnumber"" name=""portnumber"" />
                                </div>
                            </div>
                            <div class=""form-group"">
                                <label for=""nameField"" class=""col-xs-4"">Port Name</label>
                                <div class=""col-xs-8"">
                                    <input class=""form-control"" type=""text"" placeholder=""Enter Port Name"" id=""portname"" name=""portname"" />
                                </div>
                            </div>
                            <div class=""form-group"">
                                <label for=""nameField"" class=""col-xs-4 co");
                WriteLiteral(@"l-lg-4 col-md-4"">Status</label>
                                <div class=""col-xs-3 col-md-3 col-lg-3"" style=""padding-top:2px;"">
                                    <div class=""radio"">
                                        <label> <input id=""authorize"" type=""radio"" name=""authorize"" value=""1"" checked> Authorized </label>
                                    </div>
                                </div>
                                <div class=""col-xs-3 col-md-3 col-lg-3"" style=""padding-top:2px;"">
                                    <div class=""radio"">
                                        <label> <input id=""unauthorize"" type=""radio"" name=""authorize"" value=""0""> Unauthorized </label>
                                    </div>
                                </div>
                            </div>
                            <div class=""form-group"">
                                <label for=""nameField"" class=""col-xs-4""></label>
                                <div class=""col-xs-6"">
       ");
                WriteLiteral("                             <input type=\"button\" class=\"btn btn-primary\" name=\"save\" value=\"Submit\" onclick=\"validate()\" />\r\n");
                EndContext();
                BeginContext(29637, 271, true);
                WriteLiteral(@"                                    <input type=""button"" data-dismiss=""modal"" class=""btn btn-primary"" name=""close"" value=""Cancel"" id=""btncancle"" onclick=""cleardata()"" />
                                </div>
                            </div>
                        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_19);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_20);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(29915, 929, true);
            WriteLiteral(@"
                    </div>
                </div>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>
<!-- End port Add_port_popup  model box Content -->
<!-- start delete_port_popup  model box Content -->
<div class=""modal fade"" id=""delete_port_popup"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"" data-backdrop=""static"" data-keyboard=""false"">
    <div class=""modal-dialog  modal-small"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true"">&times;</button>
                <h6 class="" modal-title"">
                    Conformation
                </h6>
            </div>
            <div class=""modal-body"">
                <div class=""row"">
                    <div class=""col-xs-10"">
                        ");
            EndContext();
            BeginContext(30844, 1047, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a4a8387cee314964ae5c0f9bb2d662e2", async() => {
                BeginContext(30888, 996, true);
                WriteLiteral(@"
                            <div class=""form-group"">

                                <label for=""nameField"" class=""col-xs-12"">
                                    <i class=""glyphicon glyphicon-exclamation-sign delete_msg""></i>
                                    <span style=""font-weight:normal;margin-left:30px;"">Are you sure you want to delete this record?</span>
                                </label>

                            </div>
                            <div class=""form-group"">
                                <label for=""nameField"" class=""col-xs-4""></label>
                                <div class=""col-xs-6"">
                                    <input type=""button"" class=""btn btn-primary"" name=""yes"" id=""btndelete"" value=""Yes"" />
                                    <input type=""button"" class=""btn btn-default"" name=""no"" value=""No"" id=""btndeletecancle"" />
                                </div>
                            </div>
                        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(31891, 2378, true);
            WriteLiteral(@"
                    </div>
                </div>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>
<!-- End delete_port_popup  model box Content -->
<script>

    $(document).ready(function () {
        validateSingleForm(""#frm_portinfrm_report"");
        validateSingleForm(""#port_process_form"");
        validateSingleForm(""#port_Authentication_form"");
        validateSingleForm(""#add_port_form"");


    });
</script>
<script>
    $("".parent"").each(function (index) {
        var group = $(this).data(""group"");
        var parent = $(this);

        parent.change(function () {  //""select all"" change
            $(group).prop('checked', parent.prop(""checked""));
        });
        $(group).change(function () {
            parent.prop('checked', false);
            if ($(group + ':checked').length == $(group).length) {
                parent.prop('checked', true);
            }
        });
    });
    $('.tree-toggle').click(funct");
            WriteLiteral(@"ion () {
        $(this).parent().children('ul.tree').toggle(200);
    });
    $(function () {
        $('.tree-toggle').parent().children('ul.tree').toggle(200);
    })
</script>
<!--date-time picker-->
<script type=""text/javascript"">
	var sdate="""";
var edate="""";
        $(function () {
            $('input[name=""datefilter""]').daterangepicker({
               // opens: 'left',
                autoUpdateInput: true,
                startDate: moment().startOf('hour').add(-24, 'hour'),
                endDate: moment().startOf('hour'),
                locale: {
                    format: 'DD/MM/YYYY',
                    cancelLabel: 'Clear',

                }
            });

            $('input[name=""datefilter""]').on('apply.daterangepicker', function (ev, picker) {
                $(this).val(picker.startDate.format('DD/MM/YYYY') + ' - ' + picker.endDate.format('DD/MM/YYYY '));
				 sdate=picker.startDate.format('DD/MM/YYYY');
				edate=picker.endDate.format('DD/MM/YYYY');

");
            WriteLiteral(@"            });

            $('input[name=""datefilter""]').on('cancel.daterangepicker', function (ev, picker) {
                $(this).val('');
            });
            $(window).bind('scroll', function () {
                $("".daterangepicker"").hide();
            });

        });

    var oudata = """";
		$.get('");
            EndContext();
            BeginContext(34270, 35, false);
#line 613 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_port_information.cshtml"
          Write(Url.Content("~/csat_report/GetOU/"));

#line default
#line hidden
            EndContext();
            BeginContext(34305, 185, true);
            WriteLiteral("\', null, DataBind)\r\n    function DataBind(data) {\r\n        var tmpOUID = \"\";\r\n        $(\"#overlay\").show();\r\n        $(\"#overlay\").fadeIn(300);\r\n        //debugger;\r\n        var url = \'");
            EndContext();
            BeginContext(34491, 35, false);
#line 619 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_port_information.cshtml"
              Write(Url.Content("~/csat_report/GetOU/"));

#line default
#line hidden
            EndContext();
            BeginContext(34526, 940, true);
            WriteLiteral(@"';
        $.ajax({
            type: ""POST"",
            url: url,
            success: function (data) {
                //debugger;
            var SetData = $('#drpou');
            jQuery('#drpou').html('');
            oudata = """";
            for (var i = 0; i < data.ou.length; i++) {
                oudata += ""<option value='"" + data.ou[i].ouid + ""'>"" + data.ou[i].ouname + ""</option>"";
                if (i == 0)
                    tmpOUID = data.ou[i].ouid;
                }
               SetData.append(oudata);
              getsystemlist(tmpOUID);
            }
        }).done(function () {
            setTimeout(function () {
                $(""#overlay"").fadeOut(300);
            }, 500);
        });
    }



$(""#drpou"").change(function () {
    ouidvalue = this.value;
    getsystemlist(ouidvalue);
});
    function getsystemlist(ouidvalue) {
        //debugger;
        var url = '");
            EndContext();
            BeginContext(35467, 52, false);
#line 651 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_port_information.cshtml"
              Write(Url.Content("~/csat_report/Get_syatemname_ip?ouid="));

#line default
#line hidden
            EndContext();
            BeginContext(35519, 2142, true);
            WriteLiteral(@"' + ouidvalue;
        $.ajax({
        type: ""POST"",
        url: url,
        success: function (data) {
        // debugger;
        var SetDatadevice = $('#drpDevice');
        //var SetDataip = $('#drpip');

        jQuery('#drpDevice').html('');
        //jQuery('#drpip').html('');

        var devicedata = ""<option value='-1'>Select System Name</option>"";
        //var ipdata = ""<option value='-1'>Select IP Address</option>"";

        for (var i = 0; i < data.systemip.length; i++) {
           devicedata+=""<option value='""+ data.systemip[i].device_name +""'>""+ data.systemip[i].device_name +""</option>"";
           //ipdata+=""<option value='""+ data.systemip[i].ip +""'>""+ data.systemip[i].ip +""</option>"";
            }

            SetDatadevice.append(devicedata);
            //SetDataip.append(ipdata);

        }

        });
    }
	var ouidvalue="""";
    var systemvalue="""";
    var ipvalue = """";
    //$(""#drpou"").change(function () {
    //    ouidvalue = this.value;
    //");
            WriteLiteral(@"});

    $(""#drpDevice"").change(function () {
        systemvalue = this.value;

    });
    //$(""#drpip"").change(function () {
    //    ipvalue = this.value;

    //});

function portdatabind()
{
    var $valid = $('#frm_portinfrm_report').valid();
    if (!$valid) {
        $validatorform.focusInvalid();
        return false;
    } else {
        $(""#overlay"").show();
        $(""#overlay"").fadeIn(300);
        //debugger;
        sdate = $('#date').data('daterangepicker').startDate.format('DD/MM/YYYY');
        edate = $('#date').data('daterangepicker').endDate.format('DD/MM/YYYY');
        var varserch = document.getElementById(""Stype"").value;
        var varvalue = document.getElementById(""Svalue"").value;
        var ipvalue = document.getElementById(""drpip"").value;
        var systemvalue = document.getElementById('add_systemname2').value;
        if (systemvalue == """") {
            systemvalue = document.getElementById(""drpDevice"").value;
        }
        if (ouidvalue =");
            WriteLiteral("= \'\')\r\n            ouidvalue = document.getElementById(\"drpou\").value;\r\n\r\n        var url1 = \'");
            EndContext();
            BeginContext(37662, 53, false);
#line 716 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_port_information.cshtml"
               Write(Url.Content("~/csat_report/Get_Port_information?IP="));

#line default
#line hidden
            EndContext();
            BeginContext(37715, 8639, true);
            WriteLiteral(@"' + ipvalue + '&Device=' + systemvalue + '&ouid=' + ouidvalue + '&searching=' + varserch + '&value=' + varvalue + '&startdate=' + sdate + '&enddate=' + edate;
        $.ajax({
            type: ""POST"",
            url: url1,
            success: function (response) {
                //debugger;
                document.getElementById(""Svalue"").value = '';
                var dataclear = document.getElementById('divportinfo_div');
                dataclear.innerHTML = '&nbsp;';
                $('#divportinfo_div').append(""<table id='divportinfo' class='table table-striped table-bordered' width='100%'></table>"");
                otable = document.getElementById('divportinfo');
                var out = [];
                $('#divportinfo').DataTable({
                    serverSide: true,
                    searching: false,
                    type: 'POST',
                    datatype: 'json',
                    iDisplayLength: 500,
                    ajax: function (data, callback, sett");
            WriteLiteral(@"ings) {
                        //debugger;
                        try {
                            for (var i = data.start, ien = data.start + data.length; i < ien; i++) {
                                out.push([response.data[i].ou_longname, response.data[i].stimestamp, response.data[i].systemname, response.data[i].ip, response.data[i].localport, response.data[i].remote_ip, response.data[i].remoteport, response.data[i].status]);
                            }
                        } catch (ex) {
                        }
                        setTimeout(function () {
                            callback({
                                draw: data.draw,
                                data: out,
                                recordsTotal: response.recordsTotal,
                                recordsFiltered: response.recordsFiltered
                            });
                        }, 100);
                    },
                    dom: ""<'top'lB>rt<'bottom'ip><'clear'>"", bu");
            WriteLiteral(@"ttons: [""colvis"", { text: ""PDF"", extend: ""pdfHtml5"", download: ""open"", filename: ""Port Information_"" + today, orientation: ""portrait"", pageSize: ""A4"", exportOptions: { columns: "":visible"", search: ""applied"", order: ""applied"" }, customize: function (t) { t.content.splice(0, 1); var e = new Date, n = e.getDate() + ""-"" + (e.getMonth() + 1) + ""-"" + e.getFullYear(); t.pageMargins = [20, 60, 20, 30], t.defaultStyle.fontSize = 7, t.styles.tableHeader.fontSize = 7, t.header = function () { return { columns: [{ margin: [0, -5, 30, 15], alignment: ""left"", width: 100, image: ""data:image/png;base64,"" + pdflogo }, { margin: [-10, 10, 10, 0], alignment: ""center"", width: 410, text: ""Port Information Report"", fontSize: 12 }, { alignment: ""right"", fontSize: 14, text: """" }], margin: 20 } }, t.footer = function (t, e) { return { columns: [{ alignment: ""left"", text: [""Created on: "", { text: n.toString() }] }, { alignment: ""right"", text: [""page "", { text: t.toString() }, "" of "", { text: e.toString() }] }], margin: 20 } }; var a =");
            WriteLiteral(@" { hLineWidth: function (t) { return .5 }, vLineWidth: function (t) { return .5 }, hLineColor: function (t) { return ""#aaa"" }, vLineColor: function (t) { return ""#aaa"" }, paddingLeft: function (t) { return 4 }, paddingRight: function (t) { return 4 } }; t.content[0].layout = a } }, 'excel'],
                    columnDefs: [{ type: 'ip-address', targets: 2 }],
                    columns: [{ title: ""Branch/ Unit"" },{ title: ""TimeStamp"" }, { title: ""System Name"" }, { title: ""IP Address"" }, { title: ""Local Port"" }, { title: ""Remote IP"" }, { title: ""Remote Port"" }, { title: ""Status"" }],
                    scrollY: 400,
                    scrollX: true,
                    ordering: false,
                    scrollCollapse: true,
                    scroller: true,
                    stateSave: true,
                    scroller: {
                        loadingIndicator: true,
                    },
                });
                $("".table"").css({ ""width"": ""100%"" });
                $("".d");
            WriteLiteral(@"ataTables_scrollHeadInner "").css({ ""width"": ""100%"" });
                //document.getElementById(""Svalue"").value = '';
                //var dataclear = document.getElementById('divportinfo_div');
                //dataclear.innerHTML = '&nbsp;';
                //$('#divportinfo_div').append(""<table id='divportinfo' class='table table-striped table-bordered' width='100%'></table>"");
                //otable = document.getElementById('divportinfo');
                //var data1 = [];
                //for (var i = 0; i < data.portinfodata.length; i++) {
                //    data1.push([data.portinfodata[i].stimestamp, data.portinfodata[i].systemname, data.portinfodata[i].ip, data.portinfodata[i].localport, data.portinfodata[i].remote_ip, data.portinfodata[i].remoteport, data.portinfodata[i].status, data.portinfodata[i].ou_longname]);
                //    //data1.push([data.portinfodata[i].etimestamp, data.portinfodata[i].systemname, data.portinfodata[i].ip, data.portinfodata[i].protocol, data.portin");
            WriteLiteral(@"fodata[i].localport, data.portinfodata[i].remote_ip, data.portinfodata[i].remoteport, data.portinfodata[i].status, data.portinfodata[i].ou_longname]);
                //}
                //var otable = $(""#divportinfo"").DataTable({
                //    data: data1, scrollX: !0, searching: !1, dom: ""<'top'lB>rt<'bottom'ip><'clear'>"", buttons: [""colvis"", { text: ""PDF"", extend: ""pdfHtml5"", download: ""open"", filename: ""Port Information_"" + today, orientation: ""portrait"", pageSize: ""A4"", exportOptions: { columns: "":visible"", search: ""applied"", order: ""applied"" }, customize: function (t) { t.content.splice(0, 1); var e = new Date, n = e.getDate() + ""-"" + (e.getMonth() + 1) + ""-"" + e.getFullYear(); t.pageMargins = [20, 60, 20, 30], t.defaultStyle.fontSize = 7, t.styles.tableHeader.fontSize = 7, t.header = function () { return { columns: [{ margin: [0, -5, 30, 15], alignment: ""left"", width: 100, image: ""data:image/png;base64,"" + pdflogo }, { margin: [-10, 10, 10, 0], alignment: ""center"", width: 410, text: ""Port I");
            WriteLiteral(@"nformation Report"", fontSize: 12 }, { alignment: ""right"", fontSize: 14, text: """" }], margin: 20 } }, t.footer = function (t, e) { return { columns: [{ alignment: ""left"", text: [""Created on: "", { text: n.toString() }] }, { alignment: ""right"", text: [""page "", { text: t.toString() }, "" of "", { text: e.toString() }] }], margin: 20 } }; var a = { hLineWidth: function (t) { return .5 }, vLineWidth: function (t) { return .5 }, hLineColor: function (t) { return ""#aaa"" }, vLineColor: function (t) { return ""#aaa"" }, paddingLeft: function (t) { return 4 }, paddingRight: function (t) { return 4 } }; t.content[0].layout = a } }, 'excel'],
                //    columns: [{ title: ""TimeStamp"" }, { title: ""System Name"" }, { title: ""IP Address"" }, { title: ""Local Port"" }, { title: ""Remote IP"" }, { title: ""Remote Port"" }, { title: ""Status"" }, { title: ""Branch/ Unit"" }]
                //    //columns: [{ title: ""TimeStamp"" }, { title: ""System Name"" }, { title: ""IP Address"" }, { title: ""Protocol"" }, { title: ""Local Port"" }, {");
            WriteLiteral(@" title: ""Remote IP"" }, { title: ""Remote Port"" }, { title: ""Status"" }, { title: ""Branch/ Unit"" }]
                //});
            }
        }).done(function () {
            setTimeout(function () {
                $(""#overlay"").fadeOut(300);
            }, 500);
        });
    }
}

</script>
<script type=""text/javascript"">
	var sdate1="""";
var edate1="""";
        $(function () {
            $('input[name=""datefilter1""]').daterangepicker({
               // opens: 'left',
                autoUpdateInput: true,
                startDate: moment().startOf('hour').add(-24, 'hour'),
                endDate: moment().startOf('hour'),
                locale: {
                    format: 'DD/MM/YYYY',
                    cancelLabel: 'Clear',

                }
            });

            $('input[name=""datefilter1""]').on('apply.daterangepicker', function (ev, picker) {
                $(this).val(picker.startDate.format('DD/MM/YYYY') + ' - ' + picker.endDate.format('DD/MM/YYYY '));
	");
            WriteLiteral(@"			 sdate1=picker.startDate.format('DD/MM/YYYY');
				edate1=picker.endDate.format('DD/MM/YYYY');

            });

            $('input[name=""datefilter1""]').on('cancel.daterangepicker', function (ev, picker) {
                $(this).val('');
            });
            $("".model_body_scroll"").bind('scroll', function () {
                $("".daterangepicker"").hide();
            });

        });

    var oudata = """";
		$.get('");
            EndContext();
            BeginContext(46355, 35, false);
#line 824 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_port_information.cshtml"
          Write(Url.Content("~/csat_report/GetOU/"));

#line default
#line hidden
            EndContext();
            BeginContext(46390, 118, true);
            WriteLiteral("\', null, DataBind)\r\n    function DataBind(data) {\r\n        var tmpOUID = \"\";\r\n       // debugger;\r\n        var url = \'");
            EndContext();
            BeginContext(46509, 35, false);
#line 828 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_port_information.cshtml"
              Write(Url.Content("~/csat_report/GetOU/"));

#line default
#line hidden
            EndContext();
            BeginContext(46544, 793, true);
            WriteLiteral(@"';
        $.ajax({
            type: ""POST"",
            url: url,
            success: function (data) {
                var SetData = $('#drpou1');
                jQuery('#drpou1').html('');

                oudata = """";
                for (var i = 0; i < data.ou.length; i++) {
                    oudata += ""<option value='"" + data.ou[i].ouid + ""'>"" + data.ou[i].ouname + ""</option>"";
                    if (i == 0)
                        tmpOUID = data.ou[i].ouid;
                }
                SetData.append(oudata);
                getsystemlist1(tmpOUID);
            }
        });
    }



$(""#drpou1"").change(function () {
    ouidvalue = this.value;
    getsystemlist1(ouidvalue);
});
    function getsystemlist1(ouidvalue) {
        var url = '");
            EndContext();
            BeginContext(47338, 52, false);
#line 855 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_port_information.cshtml"
              Write(Url.Content("~/csat_report/Get_syatemname_ip?ouid="));

#line default
#line hidden
            EndContext();
            BeginContext(47390, 2077, true);
            WriteLiteral(@"' + ouidvalue;
        $.ajax({
        type: ""POST"",
        url: url,
        success: function (data) {
        // debugger;
        var SetDatadevice = $('#drpDevice1');
        //var SetDataip = $('#drpip1');

        jQuery('#drpDevice1').html('');
        //jQuery('#drpip1').html('');

        var devicedata = ""<option value='-1'>Select System Name</option>"";
        //var ipdata = ""<option value='-1'>Select IP Address</option>"";

        for (var i = 0; i < data.systemip.length; i++) {
           devicedata+=""<option value='""+ data.systemip[i].device_name +""'>""+ data.systemip[i].device_name +""</option>"";
           //ipdata+=""<option value='""+ data.systemip[i].ip +""'>""+ data.systemip[i].ip +""</option>"";
            }

            SetDatadevice.append(devicedata);
            //SetDataip.append(ipdata);

        }

        });
    }
	var ouidvalue1="""";
    var systemvalue1="""";
    var ipvalue1 = """";
    $(""#drpou1"").change(function () {
        ouidvalue1 = this.value;
 ");
            WriteLiteral(@"   });

    $(""#drpDevice1"").change(function () {
        systemvalue1 = this.value;

    });
    //$(""#drpip1"").change(function () {
    //    ipvalue1 = this.value;

    //});

function portProcessdatabind()
{
    var $valid = $('#port_process_form').valid();
    if (!$valid) {
        $validatorform.focusInvalid();
        return false;
    } else {
        sdate1 = $('#date1').data('daterangepicker').startDate.format('DD/MM/YYYY');
        edate1 = $('#date1').data('daterangepicker').endDate.format('DD/MM/YYYY');
        var varserch1 = document.getElementById(""Stype1"").value;
        var varvalue1 = document.getElementById(""Svalue1"").value;
        var ipvalue1 = document.getElementById(""drpip1"").value;
        if (ouidvalue == '')
            ouidvalue = document.getElementById(""drpou"").value;
        var systemvalue1 = document.getElementById('add_systemname1').value;
        if (systemvalue1 == """") {
            systemvalue1 = document.getElementById(""drpDevice1"").value;
  ");
            WriteLiteral("      }\r\n        var url1 = \'");
            EndContext();
            BeginContext(49468, 61, false);
#line 916 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_port_information.cshtml"
               Write(Url.Content("~/csat_report/Get_Port_process_information?IP="));

#line default
#line hidden
            EndContext();
            BeginContext(49529, 9763, true);
            WriteLiteral(@"' + ipvalue1 + '&Device=' + systemvalue1 + '&ouid=' + ouidvalue1 + '&searching=' + varserch1 + '&value=' + varvalue1 + '&startdate=' + sdate1 + '&enddate=' + edate1;
        $.ajax({
            type: ""POST"",
            url: url1,
            success: function (response) {
                document.getElementById(""Svalue1"").value = '';
                var dataclear = document.getElementById('divportprocess_div');
                dataclear.innerHTML = '&nbsp;';
                $('#divportprocess_div').append(""<table id='divportprocess' class='table table-striped table-bordered' width='100%'></table>"");
                otable = document.getElementById('divportprocess');
                var data = response.portprocessinfodata;
                console.log('data we get', data);
                $('#divportprocess').DataTable({
                    serverSide: true,
                    searching: false,
                    type: 'POST',
                    datatype: 'json',
                    iDispl");
            WriteLiteral(@"ayLength: 500,
                    ajax: function (data, callback, settings) {
                        console.log(data, 'function data');
                        // debugger;
                        var out = [];
                        if (response.portprocessinfodata.length > 0) {
                           var ien = data.start + data.length;
                            try {
                                for (var i = data.start; i < ien; i++) {
                                    out.push([response.portprocessinfodata[i].ou_longname, response.portprocessinfodata[i].systemname, response.portprocessinfodata[i].ip, response.portprocessinfodata[i].pid, response.portprocessinfodata[i].process, response.portprocessinfodata[i].protocol, response.portprocessinfodata[i].local_ip, response.portprocessinfodata[i].localport, response.portprocessinfodata[i].remote_ip, response.portprocessinfodata[i].remoteport, response.portprocessinfodata[i].stimestamp, response.portprocessinfodata[i].etimestamp, response.");
            WriteLiteral(@"portprocessinfodata[i].status]);
                                }
                            } catch (ex) { }
                        }
                        //alert(111);                        
                        setTimeout(function () {
                            callback({
                                draw: data.draw,
                                data: out,
                                recordsTotal: response.portprocessinfodata.length,
                                recordsFiltered: response.portprocessinfodata.length
                                //recordsTotal: response.recordsTotal,
                                //recordsFiltered: response.recordsFiltered
                            });
                        }, 1);
                        //alert(out.length);
                    },
                    dom: ""<'top'lB>rt<'bottom'ip><'clear'>"", buttons: [""colvis"", { text: ""PDF"", extend: ""pdfHtml5"", download: ""open"", filename: ""Port Process Information_"" + today, ");
            WriteLiteral(@"orientation: ""portrait"", pageSize: ""A4"", exportOptions: { columns: "":visible"", search: ""applied"", order: ""applied"" }, customize: function (t) { t.content.splice(0, 1); var e = new Date, n = e.getDate() + ""-"" + (e.getMonth() + 1) + ""-"" + e.getFullYear(); t.pageMargins = [20, 60, 20, 30], t.defaultStyle.fontSize = 7, t.styles.tableHeader.fontSize = 7, t.header = function () { return { columns: [{ margin: [0, -5, 30, 15], alignment: ""left"", width: 100, image: ""data:image/png;base64,"" + pdflogo }, { margin: [-10, 10, 10, 0], alignment: ""center"", width: 410, text: ""Port Process Information Report"", fontSize: 12 }, { alignment: ""right"", fontSize: 14, text: """" }], margin: 20 } }, t.footer = function (t, e) { return { columns: [{ alignment: ""left"", text: [""Created on: "", { text: n.toString() }] }, { alignment: ""right"", text: [""page "", { text: t.toString() }, "" of "", { text: e.toString() }] }], margin: 20 } }; var a = { hLineWidth: function (t) { return .5 }, vLineWidth: function (t) { return .5 }, hLineColor: functio");
            WriteLiteral(@"n (t) { return ""#aaa"" }, vLineColor: function (t) { return ""#aaa"" }, paddingLeft: function (t) { return 4 }, paddingRight: function (t) { return 4 } }; t.content[0].layout = a } }, 'excel'],
                    columnDefs: [{ type: 'ip-address', targets: 1 }],
                    columns: [{ title: ""Branch/ Unit"" },{ title: ""System Name"" }, { title: ""IP Address"" }, { title: ""Process ID"" }, { title: ""Process"" }, { title: ""Protocol"" }, { title: ""Local IP"" }, { title: ""Local Port"" }, { title: ""Remote IP"" }, { title: ""Remote Port"" }, { title: ""Start Date"" }, { title: ""End Date"" }, { title: ""Status"" }],
                    scrollY: 380,
                    scrollX: true,
                    ordering: false,
                    scrollCollapse: true,
                    scroller: true,
                    stateSave: true,
                    scroller: {
                        loadingIndicator: true,
                    },
                });
                $("".table"").css({ ""width"": ""100%"" });
      ");
            WriteLiteral(@"          $("".dataTables_scrollHeadInner "").css({ ""width"": ""100%"" });

                //var data1 = [];
                //for (var i = 0; i < data.portprocessinfodata.length; i++) {
                //    data1.push([data.portprocessinfodata[i].systemname, data.portprocessinfodata[i].ip, data.portprocessinfodata[i].pid, data.portprocessinfodata[i].process, data.portprocessinfodata[i].local_ip, data.portprocessinfodata[i].localport, data.portprocessinfodata[i].remote_ip, data.portprocessinfodata[i].remoteport, data.portprocessinfodata[i].stimestamp, data.portprocessinfodata[i].etimestamp, data.portprocessinfodata[i].status, data.portprocessinfodata[i].ou_longname]);
                //    //data1.push([data.portprocessinfodata[i].systemname, data.portprocessinfodata[i].ip, data.portprocessinfodata[i].pid, data.portprocessinfodata[i].process, data.portprocessinfodata[i].protocol, data.portprocessinfodata[i].local_ip, data.portprocessinfodata[i].localport, data.portprocessinfodata[i].remote_ip, data.portproc");
            WriteLiteral(@"essinfodata[i].remoteport, data.portprocessinfodata[i].stimestamp, data.portprocessinfodata[i].etimestamp, data.portprocessinfodata[i].status, data.portprocessinfodata[i].ou_longname]);
                //}
                //var otable = $(""#divportprocess"").DataTable({
                //    data: data1, scrollX: !0, searching: !1, dom: ""<'top'lB>rt<'bottom'ip><'clear'>"", buttons: [""colvis"", { text: ""PDF"", extend: ""pdfHtml5"", download: ""open"", filename: ""Port Process Information_"" + today, orientation: ""portrait"", pageSize: ""A4"", exportOptions: { columns: "":visible"", search: ""applied"", order: ""applied"" }, customize: function (t) { t.content.splice(0, 1); var e = new Date, n = e.getDate() + ""-"" + (e.getMonth() + 1) + ""-"" + e.getFullYear(); t.pageMargins = [20, 60, 20, 30], t.defaultStyle.fontSize = 7, t.styles.tableHeader.fontSize = 7, t.header = function () { return { columns: [{ margin: [0, -5, 30, 15], alignment: ""left"", width: 100, image: ""data:image/png;base64,"" + pdflogo }, { margin: [-10, 10, 10, 0], ");
            WriteLiteral(@"alignment: ""center"", width: 410, text: ""Port Process Information Report"", fontSize: 12 }, { alignment: ""right"", fontSize: 14, text: """" }], margin: 20 } }, t.footer = function (t, e) { return { columns: [{ alignment: ""left"", text: [""Created on: "", { text: n.toString() }] }, { alignment: ""right"", text: [""page "", { text: t.toString() }, "" of "", { text: e.toString() }] }], margin: 20 } }; var a = { hLineWidth: function (t) { return .5 }, vLineWidth: function (t) { return .5 }, hLineColor: function (t) { return ""#aaa"" }, vLineColor: function (t) { return ""#aaa"" }, paddingLeft: function (t) { return 4 }, paddingRight: function (t) { return 4 } }; t.content[0].layout = a } }, 'excel'],
                //    columns: [{ title: ""System Name"" }, { title: ""IP Address"" }, { title: ""Process ID"" }, { title: ""Process"" },{ title: ""Local IP"" }, { title: ""Local Port"" }, { title: ""Remote IP"" }, { title: ""Remote Port"" }, { title: ""Start Date"" }, { title: ""End Date"" }, { title: ""Status"" }, { title: ""Branch/ Unit"" }]
           ");
            WriteLiteral(@"     //    //columns: [{ title: ""System Name"" }, { title: ""IP Address"" }, { title: ""Process ID"" }, { title: ""Process"" }, { title: ""Protocol"" }, { title: ""Local IP"" }, { title: ""Local Port"" }, { title: ""Remote IP"" }, { title: ""Remote Port"" }, { title: ""Start Date"" }, { title: ""End Date"" }, { title: ""Status"" }, { title: ""Branch/ Unit"" }]
                //});
            }
        });
    }
}

</script>
<script type=""text/javascript"">
	var sdate2="""";
    var edate2="""";
        $(function () {
            $('input[name=""datefilter2""]').daterangepicker({
               // opens: 'left',
                autoUpdateInput: true,
                startDate: moment().startOf('hour').add(-24, 'hour'),
                endDate: moment().startOf('hour'),
                locale: {
                    format: 'DD/MM/YYYY',
                    cancelLabel: 'Clear',

                }
            });

            $('input[name=""datefilter2""]').on('apply.daterangepicker', function (ev, picker) {
        ");
            WriteLiteral(@"        $(this).val(picker.startDate.format('DD/MM/YYYY') + ' - ' + picker.endDate.format('DD/MM/YYYY '));
                sdate2=picker.startDate.format('DD/MM/YYYY');
				edate2=picker.endDate.format('DD/MM/YYYY');

            });

            $('input[name=""datefilter2""]').on('cancel.daterangepicker', function (ev, picker) {
                $(this).val('');
            });
            $("".model_body_scroll"").bind('scroll', function () {
                $("".daterangepicker"").hide();
            });

        });


		$.get('");
            EndContext();
            BeginContext(59293, 35, false);
#line 1024 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_port_information.cshtml"
          Write(Url.Content("~/csat_report/GetOU/"));

#line default
#line hidden
            EndContext();
            BeginContext(59328, 93, true);
            WriteLiteral("\', null, DataBind)\r\n    function DataBind(data) {\r\n\r\n       // debugger;\r\n        var url = \'");
            EndContext();
            BeginContext(59422, 35, false);
#line 1028 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_port_information.cshtml"
              Write(Url.Content("~/csat_report/GetOU/"));

#line default
#line hidden
            EndContext();
            BeginContext(59457, 644, true);
            WriteLiteral(@"';
        $.ajax({
            type: ""POST"",
            url: url,
            success: function (data) {
                var SetData = $('#drpou2');
                jQuery('#drpou2').html('');

                var oudata = ""<option value='-1'>Select Branch/ Unit</option>"";
                for (var i = 0; i < data.ou.length; i++) {
                    oudata += ""<option value='"" + data.ou[i].ouid + ""'>"" + data.ou[i].ouname + ""</option>"";
                }
                SetData.append(oudata);
            }
        });
    }



$(""#drpou2"").change(function () {

        ouidvalue = this.value;
        var url = '");
            EndContext();
            BeginContext(60102, 52, false);
#line 1050 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_port_information.cshtml"
              Write(Url.Content("~/csat_report/Get_syatemname_ip?ouid="));

#line default
#line hidden
            EndContext();
            BeginContext(60154, 2112, true);
            WriteLiteral(@"' + this.value;
        $.ajax({
        type: ""POST"",
        url: url,
        success: function (data) {
        // debugger;
        var SetDatadevice = $('#drpDevice2');
        //var SetDataip = $('#drpip2');

        jQuery('#drpDevice2').html('');
        //jQuery('#drpip2').html('');

        var devicedata = ""<option value='-1'>Select System Name</option>"";
        //var ipdata = ""<option value='-1'>Select IP Address</option>"";

        for (var i = 0; i < data.systemip.length; i++) {
           devicedata+=""<option value='""+ data.systemip[i].device_name +""'>""+ data.systemip[i].device_name +""</option>"";
           //ipdata+=""<option value='""+ data.systemip[i].ip +""'>""+ data.systemip[i].ip +""</option>"";
            }

            SetDatadevice.append(devicedata);
            //SetDataip.append(ipdata);

        }

        });

    });
	var ouidvalue2="""";
    var systemvalue2="""";
    //var ipvalue2 = """";
    $(""#drpou2"").change(function () {
        ouidvalue2 = this.va");
            WriteLiteral(@"lue;
    });

    $(""#drpDevice2"").change(function () {
        systemvalue2 = this.value;

    });
    //$(""#drpip2"").change(function () {
    //    ipvalue2 = this.value;

    //});

function portauthorizereport()
{
    var $valid = $('#port_Authentication_form').valid();
    if (!$valid) {
        $validatorform.focusInvalid();
        return false;
    } else {
        //debugger;
        sdate2 = $('#date2').data('daterangepicker').startDate.format('DD/MM/YYYY');
        edate2 = $('#date2').data('daterangepicker').endDate.format('DD/MM/YYYY');
        var varserch2 = document.getElementById(""Stype2"").value;
        var varvalue2 = document.getElementById(""Svalue2"").value;
        var ipvalue2 = document.getElementById(""drpip2"").value;
        if (ouidvalue == '')
            ouidvalue = document.getElementById(""drpou2"").value;
        var systemvalue2 = document.getElementById('add_systemname').value;
        if (systemvalue2 == """") {
            systemvalue2 = document.getE");
            WriteLiteral("lementById(\"drpDevice2\").value;\r\n        }\r\n        var url1 = \'");
            EndContext();
            BeginContext(62267, 63, false);
#line 1113 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_port_information.cshtml"
               Write(Url.Content("~/csat_report/get_port_authentication_report?IP="));

#line default
#line hidden
            EndContext();
            BeginContext(62330, 4248, true);
            WriteLiteral(@"' + ipvalue2 + '&Device=' + systemvalue2 + '&ouid=' + ouidvalue2 + '&searching=' + varserch2 + '&value=' + varvalue2 + '&startdate=' + sdate2 + '&enddate=' + edate2;
        $.ajax({
            type: ""POST"",
            url: url1,
            success: function (data) {
                document.getElementById(""Svalue2"").value = '';
                var dataclear = document.getElementById('divportauthorizereport_div');
                dataclear.innerHTML = '&nbsp;';
                $('#divportauthorizereport_div').append(""<table id='divportauthorizereport' class='table table-striped table-bordered' width='100%'></table>"");
                otable = document.getElementById('divportauthorizereport');
                var data1 = [];
                for (var i = 0; i < data.portauthreport.length; i++) {
                    //data1.push([data.portauthreport[i].ou_longname, data.portauthreport[i].systemname, data.portauthreport[i].ip, data.portauthreport[i].protocol, data.portauthreport[i].local_ip, data.p");
            WriteLiteral(@"ortauthreport[i].localport, data.portauthreport[i].remote_ip, data.portauthreport[i].remoteport, data.portauthreport[i].stimestamp, data.portauthreport[i].etimestamp, data.portauthreport[i].status, data.portauthreport[i].localAuth, data.portauthreport[i].remoteAuth]);
                    data1.push([data.portauthreport[i].ou_longname, data.portauthreport[i].systemname, data.portauthreport[i].ip, data.portauthreport[i].local_ip, data.portauthreport[i].localport, data.portauthreport[i].remote_ip, data.portauthreport[i].remoteport, data.portauthreport[i].stimestamp, data.portauthreport[i].etimestamp, data.portauthreport[i].status, data.portauthreport[i].localAuth, data.portauthreport[i].remoteAuth]);
                }
                var otable = $(""#divportauthorizereport"").DataTable({
                    data: data1, scrollX: !0, searching: !1, dom: ""<'top'lB>rt<'bottom'ip><'clear'>"", buttons: [""colvis"", { text: ""PDF"", extend: ""pdfHtml5"", download: ""open"", filename: ""Port Authentication_"" + today, orientat");
            WriteLiteral(@"ion: ""portrait"", pageSize: ""A4"", exportOptions: { columns: "":visible"", search: ""applied"", order: ""applied"" }, customize: function (t) { t.content.splice(0, 1); var e = new Date, n = e.getDate() + ""-"" + (e.getMonth() + 1) + ""-"" + e.getFullYear(); t.pageMargins = [20, 60, 20, 30], t.defaultStyle.fontSize = 7, t.styles.tableHeader.fontSize = 7, t.header = function () { return { columns: [{ margin: [0, -5, 30, 15], alignment: ""left"", width: 100, image: ""data:image/png;base64,"" + pdflogo }, { margin: [-10, 10, 10, 0], alignment: ""center"", width: 410, text: ""Port Authentication Report"", fontSize: 12 }, { alignment: ""right"", fontSize: 14, text: """" }], margin: 20 } }, t.footer = function (t, e) { return { columns: [{ alignment: ""left"", text: [""Created on: "", { text: n.toString() }] }, { alignment: ""right"", text: [""page "", { text: t.toString() }, "" of "", { text: e.toString() }] }], margin: 20 } }; var a = { hLineWidth: function (t) { return .5 }, vLineWidth: function (t) { return .5 }, hLineColor: function (t) { retur");
            WriteLiteral(@"n ""#aaa"" }, vLineColor: function (t) { return ""#aaa"" }, paddingLeft: function (t) { return 4 }, paddingRight: function (t) { return 4 } }; t.content[0].layout = a } }, 'excel'],
                    //columns: [{ title: ""Branch/ Unit"" }, { title: ""System Name"" }, { title: ""IP Address"" }, { title: ""Protocol"" }, { title: ""Local IP"" }, { title: ""Local Port"" }, { title: ""Remote IP"" }, { title: ""Remote Port"" }, { title: ""Start Date"" }, { title: ""End Date"" }, { title: ""Status"" }, { title: ""Local Authorize"" }, { title: ""Remote Authorize"" }]
                    columns: [{ title: ""Branch/ Unit"" }, { title: ""System Name"" }, { title: ""IP Address"" }, { title: ""Local IP"" }, { title: ""Local Port"" }, { title: ""Remote IP"" }, { title: ""Remote Port"" }, { title: ""Start Date"" }, { title: ""End Date"" }, { title: ""Status"" }, { title: ""Local Authorize"" }, { title: ""Remote Authorize"" }]
                });
                $("".table"").css({ ""width"": ""100%"" });
                $("".dataTables_scrollHeadInner "").css({ ""width"": ""100%");
            WriteLiteral("\" });\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n</script>\r\n<script>\r\n    function funcportauthenticationsetting() {\r\n   //debugger;\r\n        var url1 = \'");
            EndContext();
            BeginContext(66579, 56, false);
#line 1144 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_port_information.cshtml"
               Write(Url.Content("~/csat_report/port_authentication_setting"));

#line default
#line hidden
            EndContext();
            BeginContext(66635, 3266, true);
            WriteLiteral(@"';
    $.ajax({
       type: ""POST"",
       url: url1,
        success: function (data) {
                var SetData1 = $('.div_portauthsetting');
                jQuery('.div_portauthsetting').html('');

            var nwheader = ""<table class='table table-striped table-bordered table-hover tbl_pdfexport_count'><thead><tr>"";
           nwheader +=""<th class='select noExport' data-orderable='false'><input type='checkbox' class='parent' data-group='.group2' /></th>"" +
                    ""<th class='col-sm-4' >Port Number</th>"" +
                    ""<th class='col-sm-4' >Port Name</th>"" +
                    ""<th class='col-sm-4'>Authorize/UnAuthorize</th>"" +
                   ""<th class='col-sm-4' data-orderable='false'>Delete</th></tr ></thead > <tbody>"";
                var nwrows = """";

           for (var i = 0; i < data.portauth.length; i++) {
                    nwrows += ""<tr>"";
               nwrows += ""<td class='select'><input type='checkbox' class='group2' name='check[]' id='s");
            WriteLiteral(@"electAll' value='"" + data.portauth[i].port +""' onchange='UncheckMain2()' /></td >"" +
                        ""<td>"" + data.portauth[i].port + ""</td>"" +
                        ""<td>"" + data.portauth[i].port_name + ""</td>"" +
                        ""<td>"" + data.portauth[i].authorize + ""</td>"" +
                   ""<td class='icon'><i class='glyphicon glyphicon-trash manage_icon' type='button' data-toggle='modal' data-target='#delete_port_popup' title='Delete' onclick=deletauthport('"" + data.portauth[i].port + ""');></i></td>"";
                }
                nwportauth = nwheader + nwrows + ""</tr></tbody></table>"";
            SetData1.append(nwportauth);
             reportname = ""Port Information Report"";
               datatable_pdfexport_counting(reportname);

           $("".parent"").each(function (index) {
               // debugger;
               var group = $(this).data(""group"");
               var parent = $(this);

               parent.change(function () {  //""select all"" change
 ");
            WriteLiteral(@"                  // debugger;
                   $(group).prop('checked', parent.prop(""checked""));
                   UncheckMain2();
               });
               $(group).change(function () {
                   //debugger;
                   parent.prop('checked', false);
                   if ($(group + ':checked').length == $(group).length) {
                       parent.prop('checked', true);
                   }
               });
           });
            }
        });

    }



    var port = """";
    function UncheckMain2() {
        //  debugger;
        port = """";
        var checkboxes = document.querySelectorAll('input[id=""selectAll""]');
        for (var i = 0; i < checkboxes.length; i++) {
            if (checkboxes[i].checked == true) {
                port += "","" + checkboxes[i].value;
            }
            else {

            }

        }
        //alert(crc);
    }
</script>
<script>
    // Delete authorize port
    var portid = """";
    functi");
            WriteLiteral("on deletauthport(port) {\r\n        //debugger;\r\n        portid = port;\r\n        $(\"#delete_port_popup\").modal(\'show\');\r\n    }\r\n\r\n     $(\'#btndelete\').on(\'click\',function(){\r\n         var url1 = \'");
            EndContext();
            BeginContext(69902, 51, false);
#line 1225 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_port_information.cshtml"
                Write(Url.Content("~/csat_report/deleteAuthport?portid="));

#line default
#line hidden
            EndContext();
            BeginContext(69953, 853, true);
            WriteLiteral(@"' + portid;
	 $.ajax({
            type: ""POST"",
            url:url1,
            success: function (result) {
			alert(result);
                $('#delete_port_popup').modal('hide');
                funcportauthenticationsetting();
			}
			});

	});
	$('#btndeletecancle').on('click',function(){
        $('#delete_port_popup').modal('hide');
    });
</script>
<script>

     var authport = '';
    $('input[type=radio][name=authorize]').change(function () {

        authport = this.value;

    });
    function fun_portauthorize() {
        // debugger;

        var authport = $('input[name=authorize]:checked').val();
        var portnumber = document.getElementById(""portnumber"").value;
        var portname = document.getElementById(""portname"").value;
        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(70807, 58, false);
#line 1257 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_port_information.cshtml"
             Write(Url.Content("~/csat_report/port_authorized_add?authport="));

#line default
#line hidden
            EndContext();
            BeginContext(70865, 3895, true);
            WriteLiteral(@"' + authport + '&portnumber=' + portnumber + '&portname=' + portname,
            success: function (strreturn) {
                alert(strreturn);
                $('#Add_port_popup').modal('hide');
                funcportauthenticationsetting();

            }
        });
    }
    $('#btncancle').on('click', function () {
        $('#Add_port_popup').modal('hide');
    });

    function cleardata() {
        var SetDatadevice = $('#drpDevice1');
        //var SetDataip = $('#drpip1');
        jQuery('#drpDevice1').html('');
        //jQuery('#drpip1').html('');
        var devicedata = ""<option value='-1'>Select System Name</option>"";
        //var ipdata = ""<option value='-1'>Select IP Address</option>"";
        SetDatadevice.append(devicedata);
        //SetDataip.append(ipdata);
        document.getElementById(""drpip1"").value = '';
        document.getElementById(""drpDevice1"").value = '-1';
        document.getElementById(""drpou1"").value = '-1';
        document.getElementById(");
            WriteLiteral(@"""Stype1"").value = '-1';
        document.getElementById(""Svalue1"").value = '';
        $('#divportprocess').html('');

        document.getElementById(""portnumber"").value = '';
        document.getElementById(""portname"").value = '';
        document.getElementById(""authorize"").checked = true;
        document.getElementById(""unauthorize"").checked = false;

        var SetDatadevice = $('#drpDevice2');
        //var SetDataip = $('#drpip2');
        jQuery('#drpDevice2').html('');
        //jQuery('#drpip2').html('');
        var devicedata = ""<option value='-1'>Select System Name</option>"";
        //var ipdata = ""<option value='-1'>Select IP Address</option>"";
        SetDatadevice.append(devicedata);
        //SetDataip.append(ipdata);
        document.getElementById(""drpip2"").value = '';
        document.getElementById(""drpDevice2"").value = '-1';
        document.getElementById(""drpou2"").value = '-1';
        document.getElementById(""Stype2"").value = '-1';
        document.getElementBy");
            WriteLiteral(@"Id(""Svalue2"").value = '';
        $('#divportauthorizereport_div').html('');

        document.getElementById(""Svalue1"").value = '';
        var dataclear = document.getElementById('divportprocess_div');
        dataclear.innerHTML = '&nbsp;';
        $('#divportprocess_div').append(""<table id='divportprocess' class='table table-striped table-bordered' width='100%'></table>"");
        otable = document.getElementById('divportprocess');
    }
</script>
<script>
    //checkbox input hide & show
    $('#inputsystemname').hide();
    $('#add_system_chk').on('click', function () {
        if ($(this).is(':checked')) {
            $('#selectsys').hide();
            $('#inputsystemname').show();
        }
        else {
            $('#selectsys').show();
            $('#inputsystemname').hide();
            document.getElementById('add_systemname').value = """";
        }
    });
</script>


<script>
    //checkbox input hide & show
    $('#inputsystemname1').hide();
    $('#add_system_");
            WriteLiteral(@"chk1').on('click', function () {
        if ($(this).is(':checked')) {
            $('#selectsys1').hide();
            $('#inputsystemname1').show();
        }
        else {
            $('#selectsys1').show();
            $('#inputsystemname1').hide();
            document.getElementById('add_systemname1').value = """";
        }
    });
</script>
<script>
    //checkbox input hide & show
    $('#inputsystemname2').hide();
    $('#add_system_chk2').on('click', function () {
        if ($(this).is(':checked')) {
            $('#selectsys2').hide();
            $('#inputsystemname2').show();
        }
        else {
            $('#selectsys2').show();
            $('#inputsystemname2').hide();
            document.getElementById('add_systemname2').value = """";
        }
    });
</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591

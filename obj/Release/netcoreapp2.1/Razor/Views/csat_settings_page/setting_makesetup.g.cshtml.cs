#pragma checksum "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_settings_page\setting_makesetup.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ff2c3f0bdad79456927d977ba8491f19b1b5f3f3"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_csat_settings_page_setting_makesetup), @"mvc.1.0.view", @"/Views/csat_settings_page/setting_makesetup.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/csat_settings_page/setting_makesetup.cshtml", typeof(AspNetCore.Views_csat_settings_page_setting_makesetup))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\_ViewImports.cshtml"
using OwnYITCSAT;

#line default
#line hidden
#line 2 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\_ViewImports.cshtml"
using OwnYITCSAT.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ff2c3f0bdad79456927d977ba8491f19b1b5f3f3", @"/Views/csat_settings_page/setting_makesetup.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fbc54f8cb37d807092c8e3ca3f38d3620e0913e8", @"/Views/_ViewImports.cshtml")]
    public class Views_csat_settings_page_setting_makesetup : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("frm_setting_makeup"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("frm_setting_makeup"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("onload", new global::Microsoft.AspNetCore.Html.HtmlString("fn_loading()"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_settings_page\setting_makesetup.cshtml"
  
    ViewData["Title"] = "setting_makesetup";
    Layout = "~/Views/Shared/ownyit_main_page.cshtml";

#line default
#line hidden
            BeginContext(111, 711, true);
            WriteLiteral(@"


<script type=""text/javascript"">

    var now = new Date();
    var day = (""0"" + now.getDate()).slice(-2);
    var month = (""0"" + (now.getMonth() + 1)).slice(-2);
    var today = now.getFullYear() + ""-"" + (month) + ""-"" + (day);

    $(document).ready(function () {
        $('.makesetup_datatable').DataTable({
            paging: true,
            order: [],
            columnDefs: [{ orderable: false, targets: [] }],
            colReorder: true,
            searching: false,
            info: false,
            responsive: false,
        });
        $("".table"").css({ ""width"": ""100%"" });
        $("".dataTables_scrollHeadInner "").css({ ""width"": ""100%"" });
    });

</script>

");
            EndContext();
            BeginContext(822, 4033, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1d4732fad4384fbfa89a8aaf4859ec36", async() => {
                BeginContext(850, 249, true);
                WriteLiteral("\r\n    <div class=\"row\">\r\n        <div class=\"ibox float-e-margins \">\r\n            <div class=\"ibox-content\" style=\"padding:4px;\">\r\n                <ul class=\"breadcrumb\" style=\"margin-bottom:0px;\">\r\n                    <li>\r\n                        ");
                EndContext();
                BeginContext(1100, 74, false);
#line 38 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_settings_page\setting_makesetup.cshtml"
                   Write(Html.ActionLink("Settings", "setting_scan_ip_range", "csat_settings_page"));

#line default
#line hidden
                EndContext();
                BeginContext(1174, 378, true);
                WriteLiteral(@"
                        <i class=""icon-angle-right""></i>
                    </li>
                    <li>Make Setup</li>
                </ul>
            </div>
        </div>

        <!--side menu-->
        <div class=""col-sm-2 col-md-2 col-lg-2 no_padding"">
            <div class=""ibox float-e-margins "">
                <div class=""ibox-content sidemenu"">
");
                EndContext();
                BeginContext(1601, 39, false);
#line 51 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_settings_page\setting_makesetup.cshtml"
                   Write(Html.Partial("csat_settings_page_menu"));

#line default
#line hidden
                EndContext();
#line 51 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_settings_page\setting_makesetup.cshtml"
                                                                ;
                    

#line default
#line hidden
                BeginContext(1666, 571, true);
                WriteLiteral(@"                </div>
            </div>
        </div>
        <!--side menu end-->

        <div class=""col-sm-10 col-md-10 col-lg-10"">
            <!--BackSide Generate white form color-->
            <div class=""ibox float-e-margins"" style=""margin-bottom: 10px;"">
                <div class=""ibox-content"">
                    <div class=""row"">
                        <div class=""col-sm-12 col-md-12 col-lg-12"">

                            <div class=""row"">
                                <div class=""col-xs-12"">
                                    ");
                EndContext();
                BeginContext(2237, 566, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "538fed209e13444c8c1f5cec22d850db", async() => {
                    BeginContext(2281, 515, true);
                    WriteLiteral(@"
                                        <div class=""form-group"">
                                            <label for=""nameField"" style=""margin-top: -5px;background-color: #fff;text-align: center;color: #3D93C8;width: 120px;"" class=""col-xs-2 form_label"">&nbsp;&nbsp;Advance Setting&nbsp;&nbsp;</label>
                                            <div class=""col-xs-10"">
                                            </div>
                                        </div>

                                    ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(2803, 320, true);
                WriteLiteral(@"
                                </div>
                            </div>
                        </div>

                    </div>
                    <!--BackSide Generate white form over-->

                    <div class=""row"">
                        <div class=""col-xs-12"">
                            ");
                EndContext();
                BeginContext(3123, 1517, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a3ea83dbe5014cfe90b892839948b840", async() => {
                    BeginContext(3217, 1416, true);
                    WriteLiteral(@"
                                <div class=""form-group"">
                                    <label for=""nameField"" class=""col-xs-2 col-lg-1 col-md-1"">Server IP</label>
                                    <div class=""col-xs-4"">
                                        <input type=""text"" class=""form-control ip_address"" id=""txtServerIP"" name=""txtServerIP"" placeholder=""Enter Server IP"" />
                                    </div>
                                </div>
                                <div class=""form-group"">
                                    <label for=""nameField"" class=""col-xs-2 col-lg-1 col-md-1"">Path</label>
                                    <div class=""col-xs-4"">
                                        <input type=""text"" class=""form-control"" id=""txtFolder"" name = ""txtFolder"" placeholder=""Enter Path"" />
                                    </div>
                                </div>
                                <div class=""form-group"">
                                   ");
                    WriteLiteral(@" <label for=""nameField"" class=""col-xs-2 col-lg-1 col-md-1""></label>
                                    <div class=""pull-left col-xs-1"">
                                        <input type=""button"" class=""btn btn-primary"" value=""Create Setup"" onclick=""CrateSetup_validate();"">
                                    </div>
                                </div>
                            ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(4640, 208, true);
                WriteLiteral("\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"space_bottom\">\r\n            &nbsp;\r\n        </div>\r\n\r\n    </div>\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(4855, 1968, true);
            WriteLiteral(@" 
    <script>
        function fn_loading() {
            $(""#overlay"").show();
            $(""#overlay"").fadeIn(300);
            setTimeout(function () {
                $(""#overlay"").fadeOut(300);
            }, 2500);
        }
        $(document).ready(function () {
            validateSingleForm(""#frm_setting_makeup"");
        });
        function CrateSetup_validate() {
            //if ($(""#txtServerIP"").val() == """" && $(""#txtFolder"").val() == """") {
            //    alert(""Please enter serverip and path !"");
            //    return false;
            //}
            //if ($(""#txtServerIP"").val() == """") {
            //    alert(""Please enter serverip !"");
            //    return false;
            //}
            //if ($(""#txtFolder"").val() == """") {
            //    alert(""Please enter path !"");
            //    return false;
            //}

            var $valid = $('#frm_setting_makeup').valid();
            if (!$valid) {
                $validatorform.focusInval");
            WriteLiteral(@"id();
                return false;
            } else {
                CrateSetup();
                return (true);
            }
        }

    function CrateSetup() {
        $(""#overlay"").show();
        $(""#overlay"").fadeIn(300);
        //debugger;
        var serverip = document.getElementById('txtServerIP').value;
        var folder_path = document.getElementById('txtFolder').value;
        var ip = serverip.split(""."");
        if (ip.length != 4) {
            alert(""Please provide proper server ip range !"");
            return false;
        }
        //Check Numbers
        for (var c = 0; c < 4; c++) {
            //Perform Test
            if (!(1 / ip[c] > 0) || ip[c] > 255 || isNaN(parseFloat(ip[c])) || !isFinite(ip[c]) || ip[c].indexOf("" "") !== -1) {
                alert(""Please provide proper server ip range !"");
                return false;
            }
        }
        var url = '");
            EndContext();
            BeginContext(6824, 58, false);
#line 169 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_settings_page\setting_makesetup.cshtml"
              Write(Url.Content("~/csat_settings_page/create_setup?ServerIP="));

#line default
#line hidden
            EndContext();
            BeginContext(6882, 10075, true);
            WriteLiteral(@"' + serverip + '&FolderPath=' + folder_path;
        $.ajax({
            type: ""POST"",
            url: url,
            success: function (data) {
                alert(data);
            }
        }).done(function () {
            setTimeout(function () {
                $(""#overlay"").fadeOut(300);
            }, 500);
        });
    }


    </script>
    <script>
        (function (g) {
            ""function"" === typeof define && define.amd ? define([""jquery""], g) : g(window.jQuery || window.Zepto)
        })(function (g) {
            var y = function (a, f, d) {
                var k = this,
                    x;
                a = g(a);
                f = ""function"" === typeof f ? f(a.val(), void 0, a, d) : f;
                k.init = function () {
                    d = d || {};
                    k.byPassKeys = [9, 16, 17, 18, 36, 37, 38, 39, 40, 91];
                    k.translation = {
                        0: {
                            pattern: /\d/
     ");
            WriteLiteral(@"                   },
                        9: {
                            pattern: /\d/,
                            optional: !0
                        },
                        ""#"": {
                            pattern: /\d/,
                            recursive: !0
                        },
                        A: {
                            pattern: /[a-zA-Z0-9]/
                        },
                        S: {
                            pattern: /[a-zA-Z]/
                        }
                    };
                    k.translation = g.extend({}, k.translation, d.translation);
                    k = g.extend(!0, {}, k, d);
                    a.each(function () {
                        !1 !==
                            d.maxlength && a.attr(""maxlength"", f.length);
                        d.placeholder && a.attr(""placeholder"", d.placeholder);
                        a.attr(""autocomplete"", ""off"");
                        c.destroyEvents();
           ");
            WriteLiteral(@"             c.events();
                        var b = c.getCaret();
                        c.val(c.getMasked());
                        c.setCaret(b + c.getMaskCharactersBeforeCount(b, !0))
                    })
                };
                var c = {
                    getCaret: function () {
                        var b;
                        b = 0;
                        var e = a.get(0),
                            c = document.selection,
                            e = e.selectionStart;
                        if (c && !~navigator.appVersion.indexOf(""MSIE 10"")) b = c.createRange(), b.moveStart(""character"", a.is(""input"") ? -a.val().length : -a.text().length), b = b.text.length;
                        else if (e ||
                            ""0"" === e) b = e;
                        return b
                    },
                    setCaret: function (b) {
                        if (a.is("":focus"")) {
                            var e;
                            e ");
            WriteLiteral(@"= a.get(0);
                            e.setSelectionRange ? e.setSelectionRange(b, b) : e.createTextRange && (e = e.createTextRange(), e.collapse(!0), e.moveEnd(""character"", b), e.moveStart(""character"", b), e.select())
                        }
                    },
                    events: function () {
                        a.on(""keydown.mask"", function () {
                            x = c.val()
                        });
                        a.on(""keyup.mask"", c.behaviour);
                        a.on(""paste.mask drop.mask"", function () {
                            setTimeout(function () {
                                a.keydown().keyup()
                            }, 100)
                        });
                        a.on(""change.mask"", function () {
                            a.data(""changeCalled"", !0)
                        });
                        a.on(""blur.mask"",
                            function (b) {
                                b = g(b.target)");
            WriteLiteral(@";
                                b.prop(""defaultValue"") !== b.val() && (b.prop(""defaultValue"", b.val()), b.data(""changeCalled"") || b.trigger(""change""));
                                b.data(""changeCalled"", !1)
                            });
                        a.on(""focusout.mask"", function () {
                            d.clearIfNotMatch && c.val().length < f.length && c.val("""")
                        })
                    },
                    destroyEvents: function () {
                        a.off(""keydown.mask keyup.mask paste.mask drop.mask change.mask blur.mask focusout.mask"").removeData(""changeCalled"")
                    },
                    val: function (b) {
                        var e = a.is(""input"");
                        return 0 < arguments.length ? e ? a.val(b) : a.text(b) : e ? a.val() : a.text()
                    },
                    getMaskCharactersBeforeCount: function (b,
                        e) {
                        for (var a = 0, c = 0");
            WriteLiteral(@", d = f.length; c < d && c < b; c++) k.translation[f.charAt(c)] || (b = e ? b + 1 : b, a++);
                        return a
                    },
                    determineCaretPos: function (b, a, d, h) {
                        return k.translation[f.charAt(Math.min(b - 1, f.length - 1))] ? Math.min(b + d - a - h, d) : c.determineCaretPos(b + 1, a, d, h)
                    },
                    behaviour: function (b) {
                        b = b || window.event;
                        var a = b.keyCode || b.which;
                        if (-1 === g.inArray(a, k.byPassKeys)) {
                            var d = c.getCaret(),
                                f = c.val(),
                                n = f.length,
                                l = d < n,
                                p = c.getMasked(),
                                m = p.length,
                                q = c.getMaskCharactersBeforeCount(m - 1) - c.getMaskCharactersBeforeCount(n - 1);
           ");
            WriteLiteral(@"                 p !== f && c.val(p);
                            !l || 65 === a && b.ctrlKey || (8 !== a && 46 !== a && (d = c.determineCaretPos(d, n, m, q)), c.setCaret(d));
                            return c.callbacks(b)
                        }
                    },
                    getMasked: function (b) {
                        var a = [],
                            g = c.val(),
                            h = 0,
                            n = f.length,
                            l = 0,
                            p = g.length,
                            m = 1,
                            q = ""push"",
                            s = -1,
                            r, u;
                        d.reverse ? (q = ""unshift"", m = -1, r = 0, h = n - 1, l = p - 1, u = function () {
                            return -1 < h && -1 < l
                        }) : (r = n - 1, u = function () {
                            return h < n && l < p
                        });
          ");
            WriteLiteral(@"              for (; u();) {
                            var v = f.charAt(h),
                                w = g.charAt(l),
                                t = k.translation[v];
                            if (t) w.match(t.pattern) ? (a[q](w), t.recursive && (-1 === s ? s = h : h === r && (h = s - m), r === s && (h -= m)), h += m) : t.optional && (h += m, l -= m), l +=
                                m;
                            else {
                                if (!b) a[q](v);
                                w === v && (l += m);
                                h += m
                            }
                        }
                        b = f.charAt(r);
                        n !== p + 1 || k.translation[b] || a.push(b);
                        return a.join("""")
                    },
                    callbacks: function (b) {
                        var e = c.val(),
                            g = c.val() !== x;
                        if (!0 === g && ""function"" ==");
            WriteLiteral(@"= typeof d.onChange) d.onChange(e, b, a, d);
                        if (!0 === g && ""function"" === typeof d.onKeyPress) d.onKeyPress(e, b, a, d);
                        if (""function"" === typeof d.onComplete && e.length === f.length) d.onComplete(e, b, a, d)
                    }
                };
                k.remove = function () {
                    var a = c.getCaret(),
                        d = c.getMaskCharactersBeforeCount(a);
                    c.destroyEvents();
                    c.val(k.getCleanVal()).removeAttr(""maxlength"");
                    c.setCaret(a - d)
                };
                k.getCleanVal = function () {
                    return c.getMasked(!0)
                };
                k.init()
            };
            g.fn.mask = function (a, f) {
                //this.unmask();
                return this.each(function () {
                    g(this).data(""mask"", new y(this, a, f))
                })
            };
            //g.fn.unmask");
            WriteLiteral(@" = function () {
            //    return this.each(function () {
            //        try {
            //            g(this).data(""mask"").remove()
            //        } catch (a) { }
            //    })
            //};
            g.fn.cleanVal = function () {
                return g(this).data(""mask"").getCleanVal()
            };
            g(""*[data-mask]"").each(function () {
                var a = g(this),
                    f = {};
                ""true"" === a.attr(""data-mask-reverse"") && (f.reverse = !0);
                ""false"" === a.attr(""data-mask-maxlength"") && (f.maxlength = !1);
                ""true"" === a.attr(""data-mask-clearifnotmatch"") && (f.clearIfNotMatch = !0);
                a.mask(a.attr(""data-mask""), f)
            })
        });

        $('.ip_address').mask('099.099.099.099');
    </script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591

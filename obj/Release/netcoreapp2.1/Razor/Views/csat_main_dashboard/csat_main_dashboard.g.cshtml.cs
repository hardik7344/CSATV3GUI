#pragma checksum "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_main_dashboard\csat_main_dashboard.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a12465515c3bb6d657f97aadbbb89cd35ab33b84"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_csat_main_dashboard_csat_main_dashboard), @"mvc.1.0.view", @"/Views/csat_main_dashboard/csat_main_dashboard.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/csat_main_dashboard/csat_main_dashboard.cshtml", typeof(AspNetCore.Views_csat_main_dashboard_csat_main_dashboard))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\_ViewImports.cshtml"
using OwnYITCSAT;

#line default
#line hidden
#line 2 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\_ViewImports.cshtml"
using OwnYITCSAT.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a12465515c3bb6d657f97aadbbb89cd35ab33b84", @"/Views/csat_main_dashboard/csat_main_dashboard.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fbc54f8cb37d807092c8e3ca3f38d3620e0913e8", @"/Views/_ViewImports.cshtml")]
    public class Views_csat_main_dashboard_csat_main_dashboard : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("onload", new global::Microsoft.AspNetCore.Html.HtmlString("Dashboardcharts(\'1\');"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "-1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("frm_policy"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("frm_policy"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("frm_das_Hardware"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("frm_das_Hardware"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString(" frm_das_DataLeakage"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("frm_das_DataLeakage"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("das_PCConnectivity"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("das_PCConnectivity"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("das_details_sys"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("das_details_sys"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("das_Details_Process"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("das_Details_Process"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("das_Details_Software"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("das_Details_Software"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_18 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("das_Details_User"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_19 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("das_Details_User"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_main_dashboard\csat_main_dashboard.cshtml"
  
    ViewData["Title"] = "Dashboard";
    Layout = "~/Views/Shared/ownyit_main_page.cshtml";

#line default
#line hidden
            BeginContext(103, 602, true);
            WriteLiteral(@"
<div class=""row"">
    <div class=""ibox float-e-margins "">
        <div class=""ibox-content"" style=""padding:4px;height: 38px;"">
            <div class=""pull-right form_label"">
                <button class=""btn btn-primary btn-xs day"" id=""btn7day"" type=""button"" onclick=""Dashboardcharts('30')"">30 Day</button>
                <button class=""btn btn-primary btn-xs day"" id=""btn2day"" type=""button"" onclick=""Dashboardcharts('2')"">2 Day</button>
                <button class=""btn btn-primary btn-xs day"" id=""btn1day"" type=""button"" onclick=""Dashboardcharts('1')"">1 Day</button>
            </div>
");
            EndContext();
            BeginContext(1542, 38, true);
            WriteLiteral("        </div>\r\n    </div>\r\n</div>\r\n\r\n");
            EndContext();
            BeginContext(1580, 3087, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7643b0f30069462dac76b4c895e10514", async() => {
                BeginContext(1617, 178, true);
                WriteLiteral("\r\n    <div class=\"row\">\r\n        <div class=\"7 div_none col-sm-12 col-md-6 col-lg-4 \">\r\n            <div class=\"ibox float-e-margins\">\r\n                <div class=\"ibox-title\">\r\n");
                EndContext();
                BeginContext(1848, 2812, true);
                WriteLiteral(@"                    <h6>Violation</h6>
                </div>
                <div class=""ibox-content box_height chat_content"" id=""divpolicy"">
                    <canvas id='dashboard_policy_violation'></canvas>
                </div>
            </div>
        </div>
        <div class=""8 div_none col-sm-12 col-md-6 col-lg-4 "">
            <div class=""ibox float-e-margins"">
                <div class=""ibox-title"">
                    <h6>Change Management</h6>
                </div>
                <div class=""ibox-content box_height chat_content"" id=""divaudit"">
                    <canvas id='dashboard_audit_trail'></canvas>
                </div>
            </div>
        </div>

        <div class=""9 div_none col-sm-12 col-md-6 col-lg-4 "">
            <div class=""ibox float-e-margins"">
                <div class=""ibox-title"">
                    <h6>Most Effected Branch/ Unit</h6>
                    <div class=""day_wise"" style=""float:right;margin-top: -24px; margin-right: 5px;"">");
                WriteLiteral(@"
                    </div>
                </div>
                <div class=""ibox-content box_height chat_content"" id=""diveffectedou"">
                    <canvas id='dashboard_effected_pc_vlan'></canvas>
                </div>
            </div>
        </div>
        <div class=""10 div_none col-sm-12 col-md-6 col-lg-4 "">
            <div class=""ibox float-e-margins"">
                <div class=""ibox-title"">
                    <h6>Last Poll Time</h6>
                </div>
                <div class=""ibox-content box_height chat_content"" id=""divlastpoll"">
                    <canvas id='dashboard_poll_time'></canvas>
                </div>
            </div>
        </div>

        <div class=""11 div_none col-sm-12 col-md-6 col-lg-4 "">
            <div class=""ibox float-e-margins"">
                <div class=""ibox-title"">
                    <h6>System Connectivity</h6>
                </div>
                <div class=""ibox-content box_height chat_content"" id=""divpcconnectivity"">
");
                WriteLiteral(@"                    <canvas id='dashboard_pc_connectivity'></canvas>
                </div>
            </div>
        </div>

        <div class=""12 div_none col-sm-12 col-md-6 col-lg-4 "">
            <div class=""ibox float-e-margins"">
                <div class=""ibox-title"">
                    <h6>Auditor </h6>
                    <div class=""day_wise"" style=""float:right;margin-top: -24px; margin-right: 5px;"">
                    </div>
                </div>
                <div class=""ibox-content box_height chat_content"" id=""divcsataudit"">
                    <canvas id='dashboard_csat_audit'></canvas>
                </div>
            </div>
        </div>

        <div class=""space_bottom"">&nbsp;</div>
    </div>
    <br />
");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(4667, 525, true);
            WriteLiteral(@"
<!--Dashboard  Policy chart  and popup Start -->
<div class=""modal fade"" id=""policy_mgmt"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"" data-backdrop=""static"" data-keyboard=""false"">
    <div class=""modal-dialog  modal-lg"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <button type=""button"" class=""close"" onclick=""cleardata()"" data-dismiss=""modal"" aria-hidden=""true"">&times;</button>
                <h6 class=""modal-title"" id=""chgmgmt1"">
");
            EndContext();
            BeginContext(5237, 263, true);
            WriteLiteral(@"                    Compliance Details
                </h6>
            </div>
            <div class=""modal-body model_body_scroll"">
                <div class=""row"">
                    <div class=""col-sm-12 col-md-12 col-lg-12"">
                        ");
            EndContext();
            BeginContext(5500, 2396, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "eff5eccd3d1f4c19bbb0682da48f91e3", async() => {
                BeginContext(5578, 754, true);
                WriteLiteral(@"
                            <div class=""form-group"">
                                <label for=""nameField"" class=""col-xs-1  form_label"">Branch/ Unit</label>
                                <div class=""col-xs-3"">
                                    <select class=""form-control col-sm-3 col-lg-3 col-md-3"" name=""drpou_policy"" id=""drpou_policy""></select>
                                </div>
                                <label for=""nameField"" class=""col-xs-1 text-align-right"">System Name</label>
                                <div class=""col-xs-2"" id=""selectsys"">
                                    <select class=""form-control col-sm-3 col-lg-3 col-md-3"" name=""system_policy"" id=""system_policy"">
                                        ");
                EndContext();
                BeginContext(6332, 46, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2ebb45cad4b54df39d40dcd6303aa533", async() => {
                    BeginContext(6351, 18, true);
                    WriteLiteral("Select System Name");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(6378, 927, true);
                WriteLiteral(@"
                                    </select>
                                </div>
                                <div class=""col-xs-2"" id=""inputsystemname"">
                                    <input type=""text"" class=""form-control col-sm-3 col-lg-3 col-md-3"" name=""add_systemname"" id=""add_systemname"">
                                </div>
                                <div class=""col-xs-1"">
                                    <input type=""checkbox"" class=""form-check-input"" id=""add_system_chk"" name=""add_system_chk"" style=""width:20px;height:25px;"">
                                </div>
                                <label for=""nameField"" class=""col-xs-1 text-align-right "">IP Address</label>
                                <div class=""col-xs-2"">
                                    <input type=""text"" class=""form-control col-sm-2 col-lg-2 col-md-2"" placeholder="""" name=""ip_policy"" id=""ip_policy"">
");
                EndContext();
                BeginContext(7565, 324, true);
                WriteLiteral(@"                                </div>
                                <div class=""col-xs-1"">
                                    <input type=""button"" class=""btn btn-primary"" value=""Show"" onclick=""Funpolicy(labelvalue)"">
                                </div>
                            </div>
                        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(7896, 1473, true);
            WriteLiteral(@"
                    </div>
                </div>
                <div class=""row"">
                    <div class=""col-sm-12 col-md-12 col-lg-12 "" id=""policy_div"">
                        <table id=""tblpolicymgmt"" class=""table table-striped table-bordered display nowrap"" width=""100%""></table>
                    </div>
                </div>

            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-primary"" onclick=""cleardata()"" data-dismiss=""modal"">Close</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>
<!--Dashboard  Policy chart  and popup End -->
<!--Dashboard  Audit chart  and popup Start -->
<div class=""modal fade"" id=""change_mgmt"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"" data-backdrop=""static"" data-keyboard=""false"">
    <div class=""modal-dialog  modal-lg"">
        <div class=""modal-content"">
            <div class=""modal-header"">
  ");
            WriteLiteral(@"              <button type=""button"" class=""close"" onclick=""cleardata()"" data-dismiss=""modal"" aria-hidden=""true"">&times;</button>
                <h6 class=""modal-title"" id=""chgmgmt"">
                    Details of Hardware
                </h6>
            </div>
            <div class=""modal-body model_body_scroll"">
                <div class=""row"">
                    <div class=""col-sm-12 col-md-12 col-lg-12"">
                        ");
            EndContext();
            BeginContext(9369, 2379, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "37d74d8b1336404b8b730cd783c81db4", async() => {
                BeginContext(9459, 727, true);
                WriteLiteral(@"
                            <div class=""form-group"">
                                <label for=""nameField"" class=""col-xs-1  form_label"">Branch/ Unit</label>
                                <div class=""col-xs-3"">
                                    <select class=""form-control col-sm-3 col-lg-3 col-md-3"" name=""drpou"" id=""drpou""></select>
                                </div>
                                <label for=""nameField"" class=""col-xs-1 text-align-right"">System Name</label>
                                <div class=""col-xs-2"" id=""selectsys1"">
                                    <select class=""form-control col-sm-3 col-lg-3 col-md-3"" name=""system"" id=""system"">
                                        ");
                EndContext();
                BeginContext(10186, 46, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9bb0107702664a0fbcad4a202c7d562c", async() => {
                    BeginContext(10205, 18, true);
                    WriteLiteral("Select System Name");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(10232, 918, true);
                WriteLiteral(@"
                                    </select>
                                </div>
                                <div class=""col-xs-2"" id=""inputsystemname1"">
                                    <input type=""text"" class=""form-control col-sm-3 col-lg-3 col-md-3"" name=""add_systemname1"" id=""add_systemname1"">
                                </div>
                                <div class=""col-xs-1"">
                                    <input type=""checkbox"" class=""form-check-input"" id=""add_system_chk1"" name=""add_system_chk1"" style=""width:20px;height:25px;"">
                                </div>
                                <label for=""nameField"" class=""col-xs-1 text-align-right "">IP Address</label>
                                <div class=""col-xs-2"">
                                    <input type=""text"" class=""form-control col-sm-2 col-lg-2 col-md-2"" placeholder="""" name=""ip"" id=""ip"">
");
                EndContext();
                BeginContext(11410, 331, true);
                WriteLiteral(@"                                </div>
                                <div class=""col-xs-1"">
                                    <input type=""button"" class=""btn btn-primary"" value=""Show"" onclick=""Funchwaudittrail(labelvalue)"">
                                </div>
                            </div>
                        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(11748, 1539, true);
            WriteLiteral(@"
                    </div>
                </div>
                <div class=""row"">
                    <div class=""col-sm-12 col-md-12 col-lg-12 "" id=""changemgmt_div"">
                        <table id=""changemgmt"" class=""table table-striped table-bordered display nowrap"" width=""100%""></table>
                    </div>
                </div>

            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-primary"" onclick=""cleardata()"" data-dismiss=""modal"">Close</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>
<!--Dashboard  Audit chart  and popup End -->
<!--Dashboard  Effected pc vlan chart  and popup start -->
<div class=""modal fade"" id=""effected_vlan_popup"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"" data-backdrop=""static"" data-keyboard=""false"">
    <div class=""modal-dialog  modal-lg"">
        <div class=""modal-content"">
            <div class=");
            WriteLiteral(@"""modal-header"">
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true"" onclick=""cleardata()"">&times;</button>
                <h6 id=""dlheader"">
                    Details of Data Leakage
                </h6>
                <h6 id=""ouheader"" style=""display:none""></h6>
            </div>
            <div class=""modal-body model_body_scroll"">
                <div class=""row"">
                    <div class=""col-sm-12 col-md-12 col-lg-12"">
                        ");
            EndContext();
            BeginContext(13287, 2531, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "fc3b8424ddf341999146f86334fb9bc8", async() => {
                BeginContext(13384, 402, true);
                WriteLiteral(@"
                            <div class=""form-group"">
                                <label for=""nameField"" class=""col-xs-1 text-align-right"">System Name</label>
                                <div class=""col-xs-2"" id=""selectsys2"">
                                    <select class=""form-control col-sm-3 col-lg-3 col-md-3"" name=""dlsystem"" id=""dlsystem"">
                                        ");
                EndContext();
                BeginContext(13786, 46, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0743ebb7b66c4081bcbd542a92e97acf", async() => {
                    BeginContext(13805, 18, true);
                    WriteLiteral("Select System Name");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(13832, 922, true);
                WriteLiteral(@"
                                    </select>
                                </div>
                                <div class=""col-xs-2"" id=""inputsystemname2"">
                                    <input type=""text"" class=""form-control col-sm-3 col-lg-3 col-md-3"" name=""add_systemname2"" id=""add_systemname2"">
                                </div>
                                <div class=""col-xs-1"">
                                    <input type=""checkbox"" class=""form-check-input"" id=""add_system_chk2"" name=""add_system_chk2"" style=""width:20px;height:25px;"">
                                </div>
                                <label for=""nameField"" class=""col-xs-1 text-align-right "">IP Address</label>
                                <div class=""col-xs-2"">
                                    <input type=""text"" class=""form-control col-sm-2 col-lg-2 col-md-2"" placeholder="""" name=""dlip"" id=""dlip"">
");
                EndContext();
                BeginContext(15014, 797, true);
                WriteLiteral(@"                                </div>
                                <div id=""showprint"" style=""display:none"">
                                    <label for=""nameField"" class=""col-xs-1"">Printer wise</label>
                                    <div class=""col-xs-2"">
                                        <select class=""form-control col-sm-2 col-lg-2 col-md-2"" name=""Printer"" id=""printer""></select>
                                    </div>
                                </div>

                                <div class=""col-xs-1"">
                                    <input type=""button"" class=""btn btn-primary"" value=""Show"" onclick=""showdataleakagedata(charttype, labels)"" />
                                </div>
                            </div>
                        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(15818, 707, true);
            WriteLiteral(@"
                    </div>
                </div>
                <div class=""row"">
                    <div class=""col-sm-12 col-md-12 col-lg-12 "" id=""tbldataleakage_div"">
                        <table id=""tbldataleakage"" class=""table table-striped table-bordered display nowrap"" width=""100%""></table>
                    </div>
                </div>

            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-primary"" data-dismiss=""modal"" onclick=""cleardata()"">Close</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>
<!--Dashboard  Effected pc vlan chart  and popup End -->
");
            EndContext();
            BeginContext(16547, 478, true);
            WriteLiteral(@"<div class=""modal fade"" id=""presentlink_popup"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"" data-backdrop=""static"" data-keyboard=""false"">
    <div class=""modal-dialog  modal-lg"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true"" onclick=""cleardata()"">&times;</button>
                <h6 class=""modal-title"" id=""pctitle"">
");
            EndContext();
            BeginContext(17066, 23, true);
            WriteLiteral("                </h6>\r\n");
            EndContext();
            BeginContext(17218, 262, true);
            WriteLiteral(@"                <h6 id=""pcheader"" style=""display:none""></h6>
            </div>
            <div class=""modal-body model_body_scroll"">
                <div class=""row"">
                    <div class=""col-sm-12 col-md-12 col-lg-12"">
                        ");
            EndContext();
            BeginContext(17480, 2485, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6608167ca6684c7d9af7e4bb96fa8edb", async() => {
                BeginContext(17574, 871, true);
                WriteLiteral(@"
                            <div class=""form-group"">
                                <div id=""divdrpou4"">
                                    <label for=""nameField"" class=""col-xs-1  form_label"">Branch/ Unit</label>
                                    <div class=""col-xs-3"">
                                        <select class=""form-control col-sm-3 col-lg-3 col-md-3"" name=""dropou_linkage"" id=""dropou_linkage""></select>
                                    </div>
                                </div>
                                <label for=""nameField"" class=""col-xs-1 text-align-right"">System Name</label>
                                <div class=""col-xs-2"" id=""selectsys4"">
                                    <select class=""form-control col-sm-3 col-lg-3 col-md-3"" name=""system_linkage"" id=""system_linkage"">
                                        ");
                EndContext();
                BeginContext(18445, 46, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "fe8831dc30da409792cea399b77258fa", async() => {
                    BeginContext(18464, 18, true);
                    WriteLiteral("Select System Name");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(18491, 934, true);
                WriteLiteral(@"
                                    </select>
                                </div>
                                <div class=""col-xs-2"" id=""inputsystemname4"">
                                    <input type=""text"" class=""form-control col-sm-3 col-lg-3 col-md-3"" name=""add_systemname4"" id=""add_systemname4"">
                                </div>
                                <div class=""col-xs-1"">
                                    <input type=""checkbox"" class=""form-check-input"" id=""add_system_chk4"" name=""add_system_chk4"" style=""width:20px;height:25px;"">
                                </div>
                                <label for=""nameField"" class=""col-xs-1 text-align-right "">IP Address</label>
                                <div class=""col-xs-2"">
                                    <input type=""text"" class=""form-control col-sm-2 col-lg-2 col-md-2"" placeholder="""" name=""ip_linkage"" id=""ip_linkage"">
");
                EndContext();
                BeginContext(19637, 321, true);
                WriteLiteral(@"                                </div>
                                <div class=""col-xs-1"">
                                    <input type=""button"" class=""btn btn-primary"" value=""Show"" onclick=""PCConnectivity()"" />
                                </div>
                            </div>
                        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(19965, 655, true);
            WriteLiteral(@"
                    </div>
                </div>
                <div class=""row"">
                    <div class=""col-sm-12 col-md-12 col-lg-12 "" id=""tblpcconnectivity_div"">
                        <table id=""tblpcconnectivity"" class=""table table-striped table-bordered display nowrap"" width=""100%""></table>
                    </div>
                </div>

            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-primary"" onclick=""cleardata()"" data-dismiss=""modal"">Close</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>
");
            EndContext();
            BeginContext(20667, 809, true);
            WriteLiteral(@"<div class=""modal fade"" id=""1day_time_popup"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"" data-backdrop=""static"" data-keyboard=""false"">
    <div class=""modal-dialog  modal-lg"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true"" onclick=""cleardata()"">&times;</button>
                <h6 class="" modal-title"" id=""systemtitle"">
                    Details of System
                </h6>
                <h6 id=""systemheader"" style=""display:none""></h6>
            </div>
            <div class=""modal-body model_body_scroll"">
                <div class=""row"">
                    <div class=""col-sm-12 col-md-12 col-lg-12"">
                        ");
            EndContext();
            BeginContext(21476, 2405, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8761994c701648d6a6765963c3fd11ff", async() => {
                BeginContext(21564, 751, true);
                WriteLiteral(@"
                            <div class=""form-group"">
                                <label for=""nameField"" class=""col-xs-1  form_label"">Branch/ Unit</label>
                                <div class=""col-xs-3"">
                                    <select class=""form-control col-sm-3 col-lg-3 col-md-3"" name=""drpou_count"" id=""drpou_count""></select>
                                </div>
                                <label for=""nameField"" class=""col-xs-1 text-align-right"">System Name</label>
                                <div class=""col-xs-2"" id=""selectsys3"">
                                    <select class=""form-control col-sm-3 col-lg-3 col-md-3"" name=""system_count"" id=""system_count"">
                                        ");
                EndContext();
                BeginContext(22315, 46, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8a9567df67404432af96bc58f088d6ac", async() => {
                    BeginContext(22334, 18, true);
                    WriteLiteral("Select System Name");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(22361, 930, true);
                WriteLiteral(@"
                                    </select>
                                </div>
                                <div class=""col-xs-2"" id=""inputsystemname3"">
                                    <input type=""text"" class=""form-control col-sm-3 col-lg-3 col-md-3"" name=""add_systemname3"" id=""add_systemname3"">
                                </div>
                                <div class=""col-xs-1"">
                                    <input type=""checkbox"" class=""form-check-input"" id=""add_system_chk3"" name=""add_system_chk3"" style=""width:20px;height:25px;"">
                                </div>
                                <label for=""nameField"" class=""col-xs-1 text-align-right "">IP Address</label>
                                <div class=""col-xs-2"">
                                    <input type=""text"" class=""form-control col-sm-2 col-lg-2 col-md-2"" placeholder="""" name=""ip_count"" id=""ip_count"">
");
                EndContext();
                BeginContext(23557, 317, true);
                WriteLiteral(@"                                </div>
                                <div class=""col-xs-1"">
                                    <input type=""button"" class=""btn btn-primary"" value=""Show"" onclick=""LastPollTime()"">
                                </div>
                            </div>
                        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(23881, 653, true);
            WriteLiteral(@"
                    </div>
                </div>
                <div class=""row"">
                    <div class=""col-sm-12 col-md-12 col-lg-12 "" id=""tbllastpolltime_div"">
                        <table id=""tbllastpolltime"" class=""table table-striped table-bordered display nowrap"" width=""100%""></table>
                    </div>
                </div>


            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-primary"" data-dismiss=""modal"" onclick=""cleardata()"">Close</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>
");
            EndContext();
            BeginContext(24559, 53, true);
            WriteLiteral("<!--Dashboard CSAT Audit chart  and popup start -->\r\n");
            EndContext();
            BeginContext(32432, 817, true);
            WriteLiteral(@"<div class=""modal fade"" id=""process_authorise_popup"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"" data-backdrop=""static"" data-keyboard=""false"">
    <div class=""modal-dialog  modal-lg"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true"" onclick=""cleardata()"">&times;</button>
                <h6 class="" modal-title"" id=""processheader"">
                    Details of Process
                </h6>
                <h6 id=""processtitle"" style=""display:none"" />
            </div>
            <div class=""modal-body model_body_scroll"">
                <div class=""row"">
                    <div class=""col-sm-12 col-md-12 col-lg-12"">
                        ");
            EndContext();
            BeginContext(33249, 2370, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "88ee37d06edd4c0e944373fe4bf8fa3a", async() => {
                BeginContext(33345, 751, true);
                WriteLiteral(@"
                            <div class=""form-group"">
                                <label for=""nameField"" class=""col-xs-1  form_label"">Branch/ Unit</label>
                                <div class=""col-xs-3"">
                                    <select class=""form-control col-sm-3 col-lg-3 col-md-3"" name=""drpou_audit"" id=""drpou_audit""></select>
                                </div>
                                <label for=""nameField"" class=""col-xs-1 text-align-right"">System Name</label>
                                <div class=""col-xs-2"" id=""selectsys5"">
                                    <select class=""form-control col-sm-3 col-lg-3 col-md-3"" name=""system_audit"" id=""system_audit"">
                                        ");
                EndContext();
                BeginContext(34096, 46, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "40da1fd6a01a4e799d2e4189edf43b50", async() => {
                    BeginContext(34115, 18, true);
                    WriteLiteral("Select System Name");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(34142, 930, true);
                WriteLiteral(@"
                                    </select>
                                </div>
                                <div class=""col-xs-2"" id=""inputsystemname5"">
                                    <input type=""text"" class=""form-control col-sm-3 col-lg-3 col-md-3"" name=""add_systemname5"" id=""add_systemname5"">
                                </div>
                                <div class=""col-xs-1"">
                                    <input type=""checkbox"" class=""form-check-input"" id=""add_system_chk5"" name=""add_system_chk5"" style=""width:20px;height:25px;"">
                                </div>
                                <label for=""nameField"" class=""col-xs-1 text-align-right "">IP Address</label>
                                <div class=""col-xs-2"">
                                    <input type=""text"" class=""form-control col-sm-2 col-lg-2 col-md-2"" placeholder="""" name=""ip_audit"" id=""ip_audit"">
");
                EndContext();
                BeginContext(35280, 332, true);
                WriteLiteral(@"                                </div>
                                <div class=""col-xs-1"">
                                    <input type=""button"" class=""btn btn-primary"" value=""Show"" onclick=""ShowCsatAuditData(audit_type)"">
                                </div>
                            </div>
                        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(35619, 1464, true);
            WriteLiteral(@"
                    </div>
                </div>
                <div class=""row"">
                    <div class=""col-sm-12 col-md-12 col-lg-12 "" id=""tblprocesschart_div"">
                        <table id=""tblprocesschart"" class=""table table-striped table-bordered display nowrap"" width=""100%""></table>
                    </div>
                </div>

            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-primary"" onclick=""cleardata()"" data-dismiss=""modal"">Close</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>
<div class=""modal fade"" id=""software_authorise_popup"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"" data-backdrop=""static"" data-keyboard=""false"">
    <div class=""modal-dialog  modal-lg"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <button type=""button"" class=""close"" data-dismiss=""modal"" ar");
            WriteLiteral(@"ia-hidden=""true"" onclick=""cleardata()"">&times;</button>
                <h6 class="" modal-title"" id=""softheader"">
                    Details of Software
                </h6>
                <h6 id=""softtitle"" style=""display:none"" />
            </div>
            <div class=""modal-body model_body_scroll"">
                <div class=""row"">
                    <div class=""col-sm-12 col-md-12 col-lg-12"">
                        ");
            EndContext();
            BeginContext(37083, 1865, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "29893fd682b34ceda1c10b8053cb8493", async() => {
                BeginContext(37181, 721, true);
                WriteLiteral(@"
                            <div class=""form-group"">
                                <label for=""nameField"" class=""col-xs-1  form_label"">Branch/ Unit</label>
                                <div class=""col-xs-3"">
                                    <select class=""form-control col-sm-3 col-lg-3 col-md-3"" name=""drpou7"" id=""drpou7""></select>
                                </div>
                                <label for=""nameField"" class=""col-xs-1 text-align-right"">System Name</label>
                                <div class=""col-xs-2"">
                                    <select class=""form-control col-sm-3 col-lg-3 col-md-3"" name=""softsystem"" id=""softsystem"">
                                        ");
                EndContext();
                BeginContext(37902, 46, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "613096804aac4366b3835da3822298e7", async() => {
                    BeginContext(37921, 18, true);
                    WriteLiteral("Select System Name");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(37948, 403, true);
                WriteLiteral(@"

                                    </select>
                                </div>
                                <label for=""nameField"" class=""col-xs-1 text-align-right "">IP Address</label>
                                <div class=""col-xs-2"">
                                    <input type=""text"" class=""form-control col-sm-2 col-lg-2 col-md-2"" placeholder="""" name=""softip"" id=""softip"">
");
                EndContext();
                BeginContext(38615, 326, true);
                WriteLiteral(@"                                </div>
                                <div class=""col-xs-1"">
                                    <input type=""button"" class=""btn btn-primary"" value=""Show"" onclick=""ShowSoftwareChartData()"">
                                </div>
                            </div>
                        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(38948, 1024, true);
            WriteLiteral(@"
                    </div>
                </div>
                <div class=""row"">
                    <div class=""col-sm-12 col-md-12 col-lg-12"">
                        <div class=""table-responsive"" id=""tblsoftchart"">

                        </div>
                    </div>
                </div>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-primary"" onclick=""cleardata()"" data-dismiss=""modal"">Close</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>
<div class=""modal fade"" id=""user_authorise_popup"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"" data-backdrop=""static"" data-keyboard=""false"">
    <div class=""modal-dialog  modal-lg"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true"" onclick=""cleardata()"">&times;</button>
");
            EndContext();
            BeginContext(40095, 379, true);
            WriteLiteral(@"                <h6 class="" modal-title"" id=""userheader"">
                    Details of User
                </h6>
                <h6 id=""usertitle"" style=""display:none"" />
            </div>
            <div class=""modal-body model_body_scroll"">
                <div class=""row"">
                    <div class=""col-sm-12 col-md-12 col-lg-12"">
                        ");
            EndContext();
            BeginContext(40474, 1853, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "732b3b56a4044921a2f22ff7656053b9", async() => {
                BeginContext(40564, 721, true);
                WriteLiteral(@"
                            <div class=""form-group"">
                                <label for=""nameField"" class=""col-xs-1  form_label"">Branch/ Unit</label>
                                <div class=""col-xs-3"">
                                    <select class=""form-control col-sm-3 col-lg-3 col-md-3"" name=""drpou8"" id=""drpou8""></select>
                                </div>
                                <label for=""nameField"" class=""col-xs-1 text-align-right"">System Name</label>
                                <div class=""col-xs-2"">
                                    <select class=""form-control col-sm-3 col-lg-3 col-md-3"" name=""usersystem"" id=""usersystem"">
                                        ");
                EndContext();
                BeginContext(41285, 46, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3ee4d0e653e04917a9c5b7a9c1a6d853", async() => {
                    BeginContext(41304, 18, true);
                    WriteLiteral("Select System Name");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(41331, 403, true);
                WriteLiteral(@"

                                    </select>
                                </div>
                                <label for=""nameField"" class=""col-xs-1 text-align-right "">IP Address</label>
                                <div class=""col-xs-2"">
                                    <input type=""text"" class=""form-control col-sm-2 col-lg-2 col-md-2"" placeholder="""" name=""userip"" id=""userip"">
");
                EndContext();
                BeginContext(41998, 322, true);
                WriteLiteral(@"                                </div>
                                <div class=""col-xs-1"">
                                    <input type=""button"" class=""btn btn-primary"" value=""Show"" onclick=""ShowUserChartData()"">
                                </div>
                            </div>
                        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_19);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(42327, 651, true);
            WriteLiteral(@"
                    </div>
                </div>
                <div class=""row"">
                    <div class=""col-sm-12 col-md-12 col-lg-12"">
                        <div class=""table-responsive"" id=""tbluserchart"">

                        </div>
                    </div>
                </div>

            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-primary"" onclick=""cleardata()"" data-dismiss=""modal"">Close</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>
<!--Dashboard CSAT Audit chart  and popup end -->
");
            EndContext();
            BeginContext(43535, 159, true);
            WriteLiteral("\r\n<script>\r\n    function Dashboardcharts(days) {\r\n        // debugger;\r\n        $(\"#overlay\").show();\r\n        $(\"#overlay\").fadeIn(300);　\r\n        var url = \'");
            EndContext();
            BeginContext(43695, 65, false);
#line 730 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_main_dashboard\csat_main_dashboard.cshtml"
              Write(Url.Content("~/csat_main_dashboard/GetDashboardCharts?NoOfDays="));

#line default
#line hidden
            EndContext();
            BeginContext(43760, 869, true);
            WriteLiteral(@"' + days;
        $.ajax({
            type: ""POST"",
            url: url,
            success: function (data) {
                //debugger;
                piechart('dashboard_pc_connectivity', data.pcdata1);
                piechart('dashboard_poll_time', data.lastpolldata1);
                New_stackedchart('dashboard_csat_audit', data.stackedalert);
                stackedchart('dashboard_effected_pc_vlan', data.stacked1);
                piechart('dashboard_audit_trail', data.auditdata1);
                piechart('dashboard_policy_violation', data.policydata1);
            },
            error: function () {
                alert(""something went to wrong!"")
            }
        }).done(function () {
            setTimeout(function () {
                $(""#overlay"").fadeOut(300);
            }, 500);
        });
    }
    $.get('");
            EndContext();
            BeginContext(44630, 35, false);
#line 752 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_main_dashboard\csat_main_dashboard.cshtml"
      Write(Url.Content("~/csat_report/GetOU/"));

#line default
#line hidden
            EndContext();
            BeginContext(44665, 85, true);
            WriteLiteral("\', null, DataBind)\r\n    function DataBind(data) {\r\n\t //debugger;\r\n        var url = \'");
            EndContext();
            BeginContext(44751, 35, false);
#line 755 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_main_dashboard\csat_main_dashboard.cshtml"
              Write(Url.Content("~/csat_report/GetOU/"));

#line default
#line hidden
            EndContext();
            BeginContext(44786, 905, true);
            WriteLiteral(@"';
        $.ajax({
            type: ""POST"",
            url: url,
            success: function (data) {
                var SetData = $('#drpou,#drpou_count,#dropou_linkage,#drpou_audit,#drpou_policy');
                jQuery('#drpou,#drpou_count,#dropou_linkage,#drpou_audit,#drpou_policy').html('');
		        var oudata = ""<option value='-1'>Select Branch/ Unit</option>"";
		        for (var i = 0; i < data.ou.length; i++) {
		            oudata+=""<option value='""+ data.ou[i].ouid +""'>""+ data.ou[i].ouname +""</option>"";
                }
                SetData.append(oudata);
            },
            error: function () {
                alert(""something went to wrong!"")
            }
        });
    }
    var ouidvalue = """";
    $(""#drpou,#drpou_count,#dropou_linkage,#drpou_audit,#drpou_policy"").change(function () {
        ouidvalue = this.value;
        var url = '");
            EndContext();
            BeginContext(45692, 52, false);
#line 776 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_main_dashboard\csat_main_dashboard.cshtml"
              Write(Url.Content("~/csat_report/Get_syatemname_ip?ouid="));

#line default
#line hidden
            EndContext();
            BeginContext(45744, 1883, true);
            WriteLiteral(@"' + this.value;
        $.ajax({
        type: ""POST"",
        url: url,
        success: function (data) {
        // debugger;
            var SetDatadevice = $('#system,#system_count,#system_linkage,#system_audit,#system_policy');
            //var SetDataip = $('#ip,#ip_count,#ip_linkage,#ip_audit');
            jQuery('#system,#system_count,#system_linkage,#system_audit,#system_policy').html('');
            //jQuery('#ip,#ip_count,#ip_linkage,#ip_audit').html('');

        var devicedata = ""<option value='-1'>Select System Name</option>"";
        //var ipdata = ""<option value='-1'>Select IP Address</option>"";

        for (var i = 0; i < data.systemip.length; i++) {
           devicedata+=""<option value='""+ data.systemip[i].device_name +""'>""+ data.systemip[i].device_name +""</option>"";
           //ipdata+=""<option value='""+ data.systemip[i].ip +""'>""+ data.systemip[i].ip +""</option>"";
            }
            SetDatadevice.append(devicedata);
            //SetDataip.append(ipdata);
 ");
            WriteLiteral(@"           },
            error: function () {
                alert(""something went to wrong!"")
            }
        });
    });
    $(document).ready(function () {
        validateSingleForm(""#frm_policy"");
    });
    function Funpolicy(cattype) {
        var $valid = $('#frm_policy').valid();
        if (!$valid) {
            $validatorform.focusInvalid();
            return false;
        } else {
            //debugger;
            var ip = '';
            var device = '';
            ip = document.getElementById('ip_policy').value;
            //device = document.getElementById('system_policy').value;
            var device = document.getElementById('add_systemname').value;
            if (device == """") {
                device = document.getElementById(""add_systemname"").value;
            }
            var url = '");
            EndContext();
            BeginContext(47628, 62, false);
#line 820 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_main_dashboard\csat_main_dashboard.cshtml"
                  Write(Url.Content("~/csat_main_dashboard/Getpolicychartpopup?ouid="));

#line default
#line hidden
            EndContext();
            BeginContext(47690, 8258, true);
            WriteLiteral(@"' + ouidvalue + '&system=' + device + '&ip=' + ip + '&categorytype=' + cattype;
            $.ajax({
                type: ""POST"",
                url: url,
                success: function (data) {
                    //if (cattype == 112) { document.getElementById('chgmgmt1').innerText = titlevalue + ' [ Count: ' + data.getpolicydata.length + ' ]'; }
                    //if (cattype == 111) { document.getElementById('chgmgmt1').innerText = titlevalue + ' [ Count: ' + data.getpolicydata.length + ' ]'; }
                    //if (cattype == 122) { document.getElementById('chgmgmt1').innerText = titlevalue + ' [ Count: ' + data.getpolicydata.length + ' ]'; }
                    document.getElementById('chgmgmt1').innerText = titlevalue + ' [ Count: ' + data.getpolicydata.length + ' ]';
                    var dataclear = document.getElementById('policy_div');
                    dataclear.innerHTML = '&nbsp;';
                    $('#policy_div').append(""<table id='tblpolicymgmt' class='table tabl");
            WriteLiteral(@"e-striped table-bordered' width='100%'></table>"");
                    otable = document.getElementById('tblpolicymgmt');
                    var data1 = [];
                    //for (var i = 0; i < data.getpolicydata.length; i++) {
                    //    data1.push([data.getpolicydata[i].ouname,data.getpolicydata[i].servertime, data.getpolicydata[i].devicetimestamp,data.getpolicydata[i].devicename, data.getpolicydata[i].ipaddress, data.getpolicydata[i].message]);
                    //}
                    //var otable = $(""#tblpolicymgmt"").DataTable({
                    //    data: data1, scrollX: !0, searching: !1, dom: ""<'top'lB>rt<'bottom'ip><'clear'>"", buttons: [""colvis"", { text: ""PDF"", extend: ""pdfHtml5"", download: ""open"", filename: ""Policy Violation_"" + today, orientation: ""portrait"", pageSize: ""A4"", exportOptions: { columns: "":visible"", search: ""applied"", order: ""applied"" }, customize: function (t) { t.content.splice(0, 1); var e = new Date, n = e.getDate() + ""-"" + (e.getMonth() + 1) + ""-");
            WriteLiteral(@""" + e.getFullYear(); t.pageMargins = [20, 60, 20, 30], t.defaultStyle.fontSize = 7, t.styles.tableHeader.fontSize = 7, t.header = function () { return { columns: [{ margin: [0, -5, 30, 15], alignment: ""left"", width: 100, image: ""data:image/png;base64,"" + pdflogo }, { margin: [-10, 10, 10, 0], alignment: ""center"", width: 410, text: ""Policy Violation Report"", fontSize: 12 }, { alignment: ""right"", fontSize: 14, text: """" }], margin: 20 } }, t.footer = function (t, e) { return { columns: [{ alignment: ""left"", text: [""Created on: "", { text: n.toString() }] }, { alignment: ""right"", text: [""page "", { text: t.toString() }, "" of "", { text: e.toString() }] }], margin: 20 } }; var a = { hLineWidth: function (t) { return .5 }, vLineWidth: function (t) { return .5 }, hLineColor: function (t) { return ""#aaa"" }, vLineColor: function (t) { return ""#aaa"" }, paddingLeft: function (t) { return 4 }, paddingRight: function (t) { return 4 } }; t.content[0].layout = a } }, 'excel'],
                    //    columns: [{ title: ""Bra");
            WriteLiteral(@"nch/ Unit"" },{ title: ""Server Timestamp"" }, { title: ""Client Timestamp"" },{ title: ""System Name"" }, { title: ""IP Address"" }, { title: ""Details"" }]
                    //});
                    if (cattype == 10008) {
                        for (var i = 0; i < data.getpolicydata.length; i++) {
                            data1.push([data.getpolicydata[i].ouname, data.getpolicydata[i].devicename, data.getpolicydata[i].ipaddress, data.getpolicydata[i].domainName]);
                        }
                        var otable = $(""#tblpolicymgmt"").DataTable({
                            data: data1, scrollX: !0, searching: !1, dom: ""<'top'lB>rt<'bottom'ip><'clear'>"", buttons: [""colvis"", { text: ""PDF"", extend: ""pdfHtml5"", download: ""open"", filename: ""Policy Violation_"" + today, orientation: ""portrait"", pageSize: ""A4"", exportOptions: { columns: "":visible"", search: ""applied"", order: ""applied"" }, customize: function (t) { t.content.splice(0, 1); var e = new Date, n = e.getDate() + ""-"" + (e.getMonth() + 1) + """);
            WriteLiteral(@"-"" + e.getFullYear(); t.pageMargins = [20, 60, 20, 30], t.defaultStyle.fontSize = 7, t.styles.tableHeader.fontSize = 7, t.header = function () { return { columns: [{ margin: [0, -5, 30, 15], alignment: ""left"", width: 100, image: ""data:image/png;base64,"" + pdflogo }, { margin: [-10, 10, 10, 0], alignment: ""center"", width: 410, text: ""Policy Violation Report"", fontSize: 12 }, { alignment: ""right"", fontSize: 14, text: """" }], margin: 20 } }, t.footer = function (t, e) { return { columns: [{ alignment: ""left"", text: [""Created on: "", { text: n.toString() }] }, { alignment: ""right"", text: [""page "", { text: t.toString() }, "" of "", { text: e.toString() }] }], margin: 20 } }; var a = { hLineWidth: function (t) { return .5 }, vLineWidth: function (t) { return .5 }, hLineColor: function (t) { return ""#aaa"" }, vLineColor: function (t) { return ""#aaa"" }, paddingLeft: function (t) { return 4 }, paddingRight: function (t) { return 4 } }; t.content[0].layout = a } }, 'excel'],
                            columns: [{ title: """);
            WriteLiteral(@"Branch/ Unit"" }, { title: ""System Name"" }, { title: ""IP Address"" }, { title: ""Domain Name"" }]
                        });
                    }                    
                    else {
                        for (var i = 0; i < data.getpolicydata.length; i++) {
                            data1.push([data.getpolicydata[i].ouname, data.getpolicydata[i].devicename, data.getpolicydata[i].ipaddress]);
                        }
                        var otable = $(""#tblpolicymgmt"").DataTable({
                            data: data1, scrollX: !0, searching: !1, dom: ""<'top'lB>rt<'bottom'ip><'clear'>"", buttons: [""colvis"", { text: ""PDF"", extend: ""pdfHtml5"", download: ""open"", filename: ""Policy Violation_"" + today, orientation: ""portrait"", pageSize: ""A4"", exportOptions: { columns: "":visible"", search: ""applied"", order: ""applied"" }, customize: function (t) { t.content.splice(0, 1); var e = new Date, n = e.getDate() + ""-"" + (e.getMonth() + 1) + ""-"" + e.getFullYear(); t.pageMargins = [20, 60, 20, 30], t.d");
            WriteLiteral(@"efaultStyle.fontSize = 7, t.styles.tableHeader.fontSize = 7, t.header = function () { return { columns: [{ margin: [0, -5, 30, 15], alignment: ""left"", width: 100, image: ""data:image/png;base64,"" + pdflogo }, { margin: [-10, 10, 10, 0], alignment: ""center"", width: 410, text: ""Policy Violation Report"", fontSize: 12 }, { alignment: ""right"", fontSize: 14, text: """" }], margin: 20 } }, t.footer = function (t, e) { return { columns: [{ alignment: ""left"", text: [""Created on: "", { text: n.toString() }] }, { alignment: ""right"", text: [""page "", { text: t.toString() }, "" of "", { text: e.toString() }] }], margin: 20 } }; var a = { hLineWidth: function (t) { return .5 }, vLineWidth: function (t) { return .5 }, hLineColor: function (t) { return ""#aaa"" }, vLineColor: function (t) { return ""#aaa"" }, paddingLeft: function (t) { return 4 }, paddingRight: function (t) { return 4 } }; t.content[0].layout = a } }, 'excel'],
                            columns: [{ title: ""Branch/ Unit"" }, { title: ""System Name"" }, { title: ""IP Add");
            WriteLiteral(@"ress"" }]
                        });
                    }
                    $("".table"").css({ ""width"": ""100%"" });
                    $("".dataTables_scrollHeadInner "").css({ ""width"": ""100%"" });
                },
                error: function () {
                    alert(""something went to wrong!"")
                }
            });
        }
    };
    $(document).ready(function () {
        validateSingleForm(""#frm_das_Hardware"");
    });
    function Funchwaudittrail(cattype) {
        var $valid = $('#frm_das_Hardware').valid();
        if (!$valid) {
            $validatorform.focusInvalid();
            return false;
        } else {
            //debugger;
            var ip = '';
            var device = '';
            ip = document.getElementById('ip').value;
            //device = document.getElementById('system').value;
            var device = document.getElementById('add_systemname1').value;
            if (device == """") {
                device = document.getEl");
            WriteLiteral("ementById(\"system\").value;\r\n            }\r\n            var url = \'");
            EndContext();
            BeginContext(55949, 58, false);
#line 886 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_main_dashboard\csat_main_dashboard.cshtml"
                  Write(Url.Content("~/csat_main_dashboard/GetHWaudittrail?ouid="));

#line default
#line hidden
            EndContext();
            BeginContext(56007, 4625, true);
            WriteLiteral(@"' + ouidvalue + '&system=' + device + '&ip=' + ip + '&categorytype=' + cattype;
            $.ajax({
                type: ""POST"",
                url: url,
                success: function (data) {
                    if (cattype == 1) { document.getElementById('chgmgmt').innerText = titlevalue + ' [ Count: ' + data.gethwaudittraildata.length + ' ]'; }
                    if (cattype == 10) { document.getElementById('chgmgmt').innerText = titlevalue + ' [ Count: ' + data.gethwaudittraildata.length + ' ]'; }
                    if (cattype == 11) { document.getElementById('chgmgmt').innerText = titlevalue + ' [ Count: ' + data.gethwaudittraildata.length + ' ]'; }
                    if (cattype == 12) { document.getElementById('chgmgmt').innerText = titlevalue + ' [ Count: ' + data.gethwaudittraildata.length + ' ]'; }
                    if (cattype == 13) { document.getElementById('chgmgmt').innerText = titlevalue + ' [ Count: ' + data.gethwaudittraildata.length + ' ]'; }
                    if (c");
            WriteLiteral(@"attype == 14) { document.getElementById('chgmgmt').innerText = titlevalue + ' [ Count: ' + data.gethwaudittraildata.length + ' ]'; }
                    if (cattype == 15) { document.getElementById('chgmgmt').innerText = titlevalue + ' [ Count: ' + data.gethwaudittraildata.length + ' ]'; }
                    if (cattype == 19) { document.getElementById('chgmgmt').innerText = titlevalue + ' [ Count: ' + data.gethwaudittraildata.length + ' ]'; }
                    if (cattype == 20) { document.getElementById('chgmgmt').innerText = titlevalue + ' [ Count: ' + data.gethwaudittraildata.length + ' ]'; }
                    var dataclear = document.getElementById('changemgmt_div');
                    dataclear.innerHTML = '&nbsp;';
                    $('#changemgmt_div').append(""<table id='changemgmt' class='table table-striped table-bordered' width='100%'></table>"");
                    otable = document.getElementById('changemgmt');
                    var data1 = [];
                    for (var i = ");
            WriteLiteral(@"0; i < data.gethwaudittraildata.length; i++) {
                        data1.push([data.gethwaudittraildata[i].ouname,data.gethwaudittraildata[i].servertime, data.gethwaudittraildata[i].devicetimestamp,data.gethwaudittraildata[i].devicename, data.gethwaudittraildata[i].ipaddress, data.gethwaudittraildata[i].message, data.gethwaudittraildata[i].status]);
                    }
                    var otable = $(""#changemgmt"").DataTable({
                        data: data1, scrollX: !0, searching: !1, dom: ""<'top'lB>rt<'bottom'ip><'clear'>"", buttons: [""colvis"", { text: ""PDF"", extend: ""pdfHtml5"", download: ""open"", filename: ""Change Management_"" + today, orientation: ""portrait"", pageSize: ""A4"", exportOptions: { columns: "":visible"", search: ""applied"", order: ""applied"" }, customize: function (t) { t.content.splice(0, 1); var e = new Date, n = e.getDate() + ""-"" + (e.getMonth() + 1) + ""-"" + e.getFullYear(); t.pageMargins = [20, 60, 20, 30], t.defaultStyle.fontSize = 7, t.styles.tableHeader.fontSize = 7, t.header ");
            WriteLiteral(@"= function () { return { columns: [{ margin: [0, -5, 30, 15], alignment: ""left"", width: 100, image: ""data:image/png;base64,"" + pdflogo }, { margin: [-10, 10, 10, 0], alignment: ""center"", width: 410, text: ""Change Management Report"", fontSize: 12 }, { alignment: ""right"", fontSize: 14, text: """" }], margin: 20 } }, t.footer = function (t, e) { return { columns: [{ alignment: ""left"", text: [""Created on: "", { text: n.toString() }] }, { alignment: ""right"", text: [""page "", { text: t.toString() }, "" of "", { text: e.toString() }] }], margin: 20 } }; var a = { hLineWidth: function (t) { return .5 }, vLineWidth: function (t) { return .5 }, hLineColor: function (t) { return ""#aaa"" }, vLineColor: function (t) { return ""#aaa"" }, paddingLeft: function (t) { return 4 }, paddingRight: function (t) { return 4 } }; t.content[0].layout = a } }, 'excel'],
                        columns: [{ title: ""Branch/ Unit"" },{ title: ""Server Timestamp"" }, { title: ""Client Timestamp"" },{ title: ""System Name"" }, { title: ""IP Address"" }, { ti");
            WriteLiteral(@"tle: ""Details"" }, { title: ""Status"" }]
                    });
                    $("".table"").css({ ""width"": ""100%"" });
                    $("".dataTables_scrollHeadInner "").css({ ""width"": ""100%"" });
                },
                error: function () {
                    alert(""something went to wrong!"")
                }

            });
        }
    };
    var ouid = """";
    var OU = """";
    function show_dlou(ouname) {
        //debugger;
        ouname = $('#ouheader').html();
        var url1 = '");
            EndContext();
            BeginContext(60633, 52, false);
#line 927 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_main_dashboard\csat_main_dashboard.cshtml"
               Write(Url.Content("~/csat_main_dashboard/GetOUID?ouname="));

#line default
#line hidden
            EndContext();
            BeginContext(60685, 395, true);
            WriteLiteral(@"' + ouname;
        $.ajax({
            type: ""POST"",
            url: url1,
            success: function (data) {
                ouid = data.ouid;
                show_dl_systemname(ouid);
            },
            error: function () {
                alert(""something went to wrong!"")
            }
        })
    }
    function show_dl_systemname(ouid) {
       var url2 = '");
            EndContext();
            BeginContext(61081, 52, false);
#line 941 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_main_dashboard\csat_main_dashboard.cshtml"
              Write(Url.Content("~/csat_report/Get_syatemname_ip?ouid="));

#line default
#line hidden
            EndContext();
            BeginContext(61133, 1085, true);
            WriteLiteral(@"' + ouid;
        $.ajax({
        type: ""POST"",
        url: url2,
        success: function (data) {
            var SetdlDatadevice = $('#dlsystem');
            //var SetdlDataip = $('#dlip');
            jQuery('#dlsystem').html('');
            //jQuery('#dlip').html('');

            var dldevicedata = ""<option value='-1'>Select System Name</option>"";
            //var dlipdata = ""<option value='-1'>Select IP Address</option>"";
            for (var i = 0; i < data.systemip.length; i++) {
                dldevicedata+=""<option value='""+ data.systemip[i].device_name +""'>""+ data.systemip[i].device_name +""</option>"";
                //dlipdata+=""<option value='""+ data.systemip[i].ip +""'>""+ data.systemip[i].ip +""</option>"";
            }
            SetdlDatadevice.append(dldevicedata);
            //SetdlDataip.append(dlipdata);
            show_pr_printer();
            },
            error: function () {
                alert(""something went to wrong!"")
            }
        });
 ");
            WriteLiteral("   }\r\n     function show_pr_printer() {\r\n        var url3 = \'");
            EndContext();
            BeginContext(62219, 34, false);
#line 967 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_main_dashboard\csat_main_dashboard.cshtml"
               Write(Url.Content("~/csat_report/GetOU"));

#line default
#line hidden
            EndContext();
            BeginContext(62253, 1659, true);
            WriteLiteral(@"';
        $.ajax({
            type: ""POST"",
            url:url3,
            success: function (data) {
                var SetPrinterData = $('#printer');
                jQuery('#printer').html('');
                var Printerdata = ""<option value='-1'>Select Printer</option>"";
                for (var i = 0; i < data.printer.length; i++) {
                    Printerdata += ""<option>"" + data.printer[i].printer + ""</option>"";
                }
                SetPrinterData.append(Printerdata);
            },
            error: function () {
                alert(""something went to wrong!"")
            }
        });
    }
    var charttype = """";
    var ouname = """";
    $(document).ready(function () {
        validateSingleForm(""#frm_das_DataLeakage"");
    });
    function showdataleakagedata(charttype, labels) {
        var $valid = $('#frm_das_DataLeakage').valid();
        //alert($valid);
        if (!$valid) {
            $validatorform.focusInvalid();
            return ");
            WriteLiteral(@"false;
        }
        else {
            //debugger;
            var charttype = charttype;
            var ouname = labels;
            show_dlou(ouname)
            //debugger;
            //alert(charttype);
            if (charttype == 0) {
                var ip = document.getElementById('dlip').value;
                //var device = document.getElementById('dlsystem').value;
                var device = document.getElementById('add_systemname2').value;
                if (device == """") {
                    device = document.getElementById(""dlsystem"").value;
                }
                var url3 = '");
            EndContext();
            BeginContext(63913, 58, false);
#line 1011 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_main_dashboard\csat_main_dashboard.cshtml"
                       Write(Url.Content("~/csat_main_dashboard/GetRawDataLeakage?ip="));

#line default
#line hidden
            EndContext();
            BeginContext(63971, 4056, true);
            WriteLiteral(@"' + ip + '&system=' + device + '&ouid=' + ouname;
                $.ajax({
                    type: ""POST"",
                    url: url3,
                    success: function (data) {
                        document.getElementById('dlheader').innerText = 'Dataleakage Details [ Count: ' + data.getdataleakagedata.length + ' ]';
                        var dataclear = document.getElementById('tbldataleakage_div');
                        dataclear.innerHTML = '&nbsp;';
                        $('#tbldataleakage_div').append(""<table id='tbldataleakage' class='table table-striped table-bordered' width='100%'></table>"");
                        otable = document.getElementById('tbldataleakage');
                        var data1 = [];
                        for (var i = 0; i < data.getdataleakagedata.length; i++) {
                            //data1.push([data.getdataleakagedata[i].timeStamp, data.getdataleakagedata[i].systemName, data.getdataleakagedata[i].ip, data.getdataleakagedata[i].filetype,");
            WriteLiteral(@" data.getdataleakagedata[i].media, data.getdataleakagedata[i].source_path, data.getdataleakagedata[i].destination_path, data.getdataleakagedata[i].size]);
                            data1.push([data.getdataleakagedata[i].timeStamp, data.getdataleakagedata[i].systemName, data.getdataleakagedata[i].ip, data.getdataleakagedata[i].filetype, data.getdataleakagedata[i].type1, data.getdataleakagedata[i].filepath,  data.getdataleakagedata[i].size]);
                        }
                        var otable = $(""#tbldataleakage"").DataTable({
                            data: data1, scrollX: !0, searching: !1, dom: ""<'top'lB>rt<'bottom'ip><'clear'>"", buttons: [""colvis"", { text: ""PDF"", extend: ""pdfHtml5"", download: ""open"", filename: ""Data leakage Chart_"" + today, orientation: ""portrait"", pageSize: ""A4"", exportOptions: { columns: "":visible"", search: ""applied"", order: ""applied"" }, customize: function (t) { t.content.splice(0, 1); var e = new Date, n = e.getDate() + ""-"" + (e.getMonth() + 1) + ""-"" + e.getFullYear();");
            WriteLiteral(@" t.pageMargins = [20, 60, 20, 30], t.defaultStyle.fontSize = 7, t.styles.tableHeader.fontSize = 7, t.header = function () { return { columns: [{ margin: [0, -5, 30, 15], alignment: ""left"", width: 100, image: ""data:image/png;base64,"" + pdflogo }, { margin: [-10, 10, 10, 0], alignment: ""center"", width: 410, text: ""Data Leakage Chart Report"", fontSize: 12 }, { alignment: ""right"", fontSize: 14, text: """" }], margin: 20 } }, t.footer = function (t, e) { return { columns: [{ alignment: ""left"", text: [""Created on: "", { text: n.toString() }] }, { alignment: ""right"", text: [""page "", { text: t.toString() }, "" of "", { text: e.toString() }] }], margin: 20 } }; var a = { hLineWidth: function (t) { return .5 }, vLineWidth: function (t) { return .5 }, hLineColor: function (t) { return ""#aaa"" }, vLineColor: function (t) { return ""#aaa"" }, paddingLeft: function (t) { return 4 }, paddingRight: function (t) { return 4 } }; t.content[0].layout = a } }, 'excel'],
                            columns: [{ title: ""Timestamp"" }, { tit");
            WriteLiteral(@"le: ""System Name"" }, { title: ""IP Address"" }, { title: ""File Type"" }, { title: ""Media"" }, { title: ""File Path"" }, { title: ""Size(kb)"" }]
                        });
                        $("".table"").css({ ""width"": ""100%"" });
                        $("".dataTables_scrollHeadInner "").css({ ""width"": ""100%"" });
                    },
                    error: function () {
                        alert(""something went to wrong!"")
                    }
                });
            }
            if (charttype == 1) {
                var ip = document.getElementById('dlip').value;
                //var device = document.getElementById('dlsystem').value;
                var device = document.getElementById('add_systemname2').value;
                if (device == """") {
                    device = document.getElementById(""dlsystem"").value;
                }
                var Printer = document.getElementById('printer').value;
                var url4 = '");
            EndContext();
            BeginContext(68028, 56, false);
#line 1046 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_main_dashboard\csat_main_dashboard.cshtml"
                       Write(Url.Content("~/csat_main_dashboard/GetPrinterUsage?ip="));

#line default
#line hidden
            EndContext();
            BeginContext(68084, 3607, true);
            WriteLiteral(@"' + ip + '&system=' + device + '&ouid=' + ouname + '&printer=' + Printer;
                $.ajax({
                    type: ""POST"",
                    url: url4,
                    success: function (data) {
                        document.getElementById('dlheader').innerText = 'Printer Detail [ Count: ' + data.printerusagedata.length + ' ]';
                        var dataclear = document.getElementById('tbldataleakage_div');
                        dataclear.innerHTML = '&nbsp;';
                        $('#tbldataleakage_div').append(""<table id='tbldataleakage' class='table table-striped table-bordered' width='100%'></table>"");
                        otable = document.getElementById('tbldataleakage');
                        var data1 = [];
                        for (var i = 0; i < data.printerusagedata.length; i++) {
                            data1.push([data.printerusagedata[i].device_timestamp, data.printerusagedata[i].device_name, data.printerusagedata[i].ip, data.printerusagedata");
            WriteLiteral(@"[i].user_name, data.printerusagedata[i].printer_name, data.printerusagedata[i].doc]);
                        }
                        var otable = $(""#tbldataleakage"").DataTable({
                            data: data1, scrollX: !0, searching: !1, dom: ""<'top'lB>rt<'bottom'ip><'clear'>"", buttons: [""colvis"", { text: ""PDF"", extend: ""pdfHtml5"", download: ""open"", filename: ""Printer Usages Chart_"" + today, orientation: ""portrait"", pageSize: ""A4"", exportOptions: { columns: "":visible"", search: ""applied"", order: ""applied"" }, customize: function (t) { t.content.splice(0, 1); var e = new Date, n = e.getDate() + ""-"" + (e.getMonth() + 1) + ""-"" + e.getFullYear(); t.pageMargins = [20, 60, 20, 30], t.defaultStyle.fontSize = 7, t.styles.tableHeader.fontSize = 7, t.header = function () { return { columns: [{ margin: [0, -5, 30, 15], alignment: ""left"", width: 100, image: ""data:image/png;base64,"" + pdflogo }, { margin: [-10, 10, 10, 0], alignment: ""center"", width: 410, text: ""Printer Usages Chart Report"", fontSize: 12 }, ");
            WriteLiteral(@"{ alignment: ""right"", fontSize: 14, text: """" }], margin: 20 } }, t.footer = function (t, e) { return { columns: [{ alignment: ""left"", text: [""Created on: "", { text: n.toString() }] }, { alignment: ""right"", text: [""page "", { text: t.toString() }, "" of "", { text: e.toString() }] }], margin: 20 } }; var a = { hLineWidth: function (t) { return .5 }, vLineWidth: function (t) { return .5 }, hLineColor: function (t) { return ""#aaa"" }, vLineColor: function (t) { return ""#aaa"" }, paddingLeft: function (t) { return 4 }, paddingRight: function (t) { return 4 } }; t.content[0].layout = a } }, 'excel'],
                            columns: [{ title: ""Timestamp"" }, { title: ""System Name"" }, { title: ""IP Address"" }, { title: ""Username"" }, { title: ""Printer Name"" }, { title: ""Document"" }]
                        });
                        $("".table"").css({ ""width"": ""100%"" });
                        $("".dataTables_scrollHeadInner "").css({ ""width"": ""100%"" });
                    },
                    error: function (");
            WriteLiteral(@") {
                        alert(""something went to wrong!"")
                    }
                });
            }
            if (charttype == 2) {
                var ip = document.getElementById('dlip').value;
                //var device = document.getElementById('dlsystem').value;
                var device = document.getElementById('add_systemname2').value;
                if (device == """") {
                    device = document.getElementById(""dlsystem"").value;
                }
                var url4 = '");
            EndContext();
            BeginContext(71692, 58, false);
#line 1079 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_main_dashboard\csat_main_dashboard.cshtml"
                       Write(Url.Content("~/csat_main_dashboard/GetRemovableMedia?ip="));

#line default
#line hidden
            EndContext();
            BeginContext(71750, 3694, true);
            WriteLiteral(@"' + ip + '&system=' + device + '&ouid=' + ouname;
                $.ajax({
                    type: ""POST"",
                    url: url4,
                    success: function (data) {
                        document.getElementById('dlheader').innerText = 'Removable Media Detail [ Count: ' + data.removabledata.length + ' ]';
                        var dataclear = document.getElementById('tbldataleakage_div');
                        dataclear.innerHTML = '&nbsp;';
                        $('#tbldataleakage_div').append(""<table id='tbldataleakage' class='table table-striped table-bordered' width='100%'></table>"");
                        otable = document.getElementById('tbldataleakage');
                        var data1 = [];
                        for (var i = 0; i < data.removabledata.length; i++) {
                            data1.push([data.removabledata[i].device_name, data.removabledata[i].ip, data.removabledata[i].login_user, data.removabledata[i].e110deviceused, data.removabledata[i");
            WriteLiteral(@"].e110activity, data.removabledata[i].e110starttime, data.removabledata[i].e110endtime, data.removabledata[i].duration]);
                        }
                        var otable = $(""#tbldataleakage"").DataTable({
                            data: data1, scrollX: !0, searching: !1, dom: ""<'top'lB>rt<'bottom'ip><'clear'>"", buttons: [""colvis"", { text: ""PDF"", extend: ""pdfHtml5"", download: ""open"", filename: ""Removable Media Chart_"" + today, orientation: ""portrait"", pageSize: ""A4"", exportOptions: { columns: "":visible"", search: ""applied"", order: ""applied"" }, customize: function (t) { t.content.splice(0, 1); var e = new Date, n = e.getDate() + ""-"" + (e.getMonth() + 1) + ""-"" + e.getFullYear(); t.pageMargins = [20, 60, 20, 30], t.defaultStyle.fontSize = 7, t.styles.tableHeader.fontSize = 7, t.header = function () { return { columns: [{ margin: [0, -5, 30, 15], alignment: ""left"", width: 100, image: ""data:image/png;base64,"" + pdflogo }, { margin: [-10, 10, 10, 0], alignment: ""center"", width: 410, text: ""Removable");
            WriteLiteral(@" Media Chart Report"", fontSize: 12 }, { alignment: ""right"", fontSize: 14, text: """" }], margin: 20 } }, t.footer = function (t, e) { return { columns: [{ alignment: ""left"", text: [""Created on: "", { text: n.toString() }] }, { alignment: ""right"", text: [""page "", { text: t.toString() }, "" of "", { text: e.toString() }] }], margin: 20 } }; var a = { hLineWidth: function (t) { return .5 }, vLineWidth: function (t) { return .5 }, hLineColor: function (t) { return ""#aaa"" }, vLineColor: function (t) { return ""#aaa"" }, paddingLeft: function (t) { return 4 }, paddingRight: function (t) { return 4 } }; t.content[0].layout = a } }, 'excel'],
                            columns: [{ title: ""System Name"" }, { title: ""IP Address"" }, { title: ""Login By"" }, { title: ""Device Used"" }, { title: ""Description"" }, { title: ""Start time"" }, { title: ""End time"" }, { title: ""Duration"" }]
                        });
                        $("".table"").css({ ""width"": ""100%"" });
                        $("".dataTables_scrollHeadInner "").c");
            WriteLiteral(@"ss({ ""width"": ""100%"" });
                    },
                    error: function () {
                        alert(""something went to wrong!"")
                    }
                });
            }
            if (charttype == 3) {
                var ip = document.getElementById('dlip').value;
                //var device = document.getElementById('dlsystem').value;
                var device = document.getElementById('add_systemname2').value;
                if (device == """") {
                    device = document.getElementById(""dlsystem"").value;
                }
                var url4 = '");
            EndContext();
            BeginContext(75445, 54, false);
#line 1112 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_main_dashboard\csat_main_dashboard.cshtml"
                       Write(Url.Content("~/csat_main_dashboard/GetModemUsage?ip="));

#line default
#line hidden
            EndContext();
            BeginContext(75499, 3267, true);
            WriteLiteral(@"' + ip + '&system=' + device + '&ouid=' + ouname;
                $.ajax({
                    type: ""POST"",
                    url: url4,
                    success: function (data) {
                        document.getElementById('dlheader').innerText = 'Internal Modem Usage Detail [ Count: ' + data.modemusagedata.length + ' ]';
                        var dataclear = document.getElementById('tbldataleakage_div');
                        dataclear.innerHTML = '&nbsp;';
                        $('#tbldataleakage_div').append(""<table id='tbldataleakage' class='table table-striped table-bordered' width='100%'></table>"");
                        otable = document.getElementById('tbldataleakage');
                        var data1 = [];
                        for (var i = 0; i < data.modemusagedata.length; i++) {
                            data1.push([data.modemusagedata[i].ip, data.modemusagedata[i].user_name, data.modemusagedata[i].printer_name, data.modemusagedata[i].doc, data.modemusagedata[");
            WriteLiteral(@"i].doc, data.modemusagedata[i].total_pages]);
                        }
                        var otable = $(""#tbldataleakage"").DataTable({
                            data: data1, scrollX: !0, searching: !1, dom: ""<'top'lB>rt<'bottom'ip><'clear'>"", buttons: [""colvis"", { text: ""PDF"", extend: ""pdfHtml5"", download: ""open"", filename: ""Modem Usages Chart_"" + today, orientation: ""portrait"", pageSize: ""A4"", exportOptions: { columns: "":visible"", search: ""applied"", order: ""applied"" }, customize: function (t) { t.content.splice(0, 1); var e = new Date, n = e.getDate() + ""-"" + (e.getMonth() + 1) + ""-"" + e.getFullYear(); t.pageMargins = [20, 60, 20, 30], t.defaultStyle.fontSize = 7, t.styles.tableHeader.fontSize = 7, t.header = function () { return { columns: [{ margin: [0, -5, 30, 15], alignment: ""left"", width: 100, image: ""data:image/png;base64,"" + pdflogo }, { margin: [-10, 10, 10, 0], alignment: ""center"", width: 410, text: ""Modem Usages Chart Report"", fontSize: 12 }, { alignment: ""right"", fontSize: 14, text: """"");
            WriteLiteral(@" }], margin: 20 } }, t.footer = function (t, e) { return { columns: [{ alignment: ""left"", text: [""Created on: "", { text: n.toString() }] }, { alignment: ""right"", text: [""page "", { text: t.toString() }, "" of "", { text: e.toString() }] }], margin: 20 } }; var a = { hLineWidth: function (t) { return .5 }, vLineWidth: function (t) { return .5 }, hLineColor: function (t) { return ""#aaa"" }, vLineColor: function (t) { return ""#aaa"" }, paddingLeft: function (t) { return 4 }, paddingRight: function (t) { return 4 } }; t.content[0].layout = a } }, 'excel'],
                            columns: [{ title: ""IP Address"" }, { title: ""Username"" }, { title: ""Modem Name"" }, { title: ""Start time"" }, { title: ""End time"" }, { title: ""Duration"" }]
                        });
                        $("".table"").css({ ""width"": ""100%"" });
                        $("".dataTables_scrollHeadInner "").css({ ""width"": ""100%"" });
                    },
                    error: function () {
                        alert(""something we");
            WriteLiteral("nt to wrong!\")\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    // Presently Linked PC\r\n\r\n    var pcheader;\r\n    function bind_systemlist() {\r\n        var url = \'");
            EndContext();
            BeginContext(78767, 60, false);
#line 1144 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_main_dashboard\csat_main_dashboard.cshtml"
              Write(Url.Content("~/csat_report/Get_systemname_ip_NotMonitoring"));

#line default
#line hidden
            EndContext();
            BeginContext(78827, 3142, true);
            WriteLiteral(@"';
        $.ajax({
            type: ""POST"",
            url: url,
            success: function (data) {
                var SetDatadevice4 = $('#system_linkage');
                //var SetDataip4 = $('#ip_linkage');
                jQuery('#system_linkage').html('');
                //jQuery('#ip_linkage').html('');

                var devicedata4 = ""<option value='-1'>Select System Name</option>"";
                //var ipdata4 = ""<option value='-1'>Select IP Address</option>"";

                for (var i = 0; i < data.systemip.length; i++) {
                    devicedata4 += ""<option value='"" + data.systemip[i].device_name + ""'>"" + data.systemip[i].device_name + ""</option>"";
                    //ipdata4 += ""<option value='"" + data.systemip[i].ip + ""'>"" + data.systemip[i].ip + ""</option>"";
                }
                SetDatadevice4.append(devicedata4);
                //SetDataip4.append(ipdata4);
            },
            error: function () {
                alert(""something");
            WriteLiteral(@" went to wrong!"")
            }
        });
    }
    var pcstatus = '';
    $(document).ready(function () {
        validateSingleForm(""#das_PCConnectivity"");
    });
    function PCConnectivity()
    {
        var $valid = $('#das_PCConnectivity').valid();
        if (!$valid) {
            $validatorform.focusInvalid();
            return false;
        }
        else {
            var ouid = document.getElementById('dropou_linkage').value;
            var ip = document.getElementById('ip_linkage').value;
            //var device = document.getElementById('system_linkage').value;
            var systemvalue = document.getElementById('add_systemname4').value;
            if (systemvalue == """") {
                systemvalue = document.getElementById(""system_linkage"").value;
            }
            //debugger;
            pcheader = $('#pctitle').html();
            //alert(pcheader);
            if (pcheader == 'Linked Equipment' || pcheader == 'Details of system not linked' || pc");
            WriteLiteral(@"header == 'Not Linked Detail' || pcheader == 'Today Connected Device') {
                if (pcheader == 'Linked Equipment') {
                    document.getElementById('pctitle').innerText = 'Linked Equipment';
                    document.getElementById('pcheader').innerText = 'Linked Equipment';
                    var title = 'Linked Equipment Report';
                }
                if (pcheader == 'Today Connected Device') {
                    document.getElementById('pctitle').innerText = 'Today Connected Device';
                    document.getElementById('pcheader').innerText = 'Today Connected Device';
                    var title = 'Today Connected Device';
                }
                if (pcheader == 'Details of system not linked' || pcheader == 'Not Linked Detail') {
                    document.getElementById('pctitle').innerText = 'Not Linked Detail';
                    document.getElementById('pcheader').innerText = 'Not Linked Detail';
                    var title ");
            WriteLiteral("= \'Not Linked Report\';\r\n                }\r\n                var url = \'");
            EndContext();
            BeginContext(81970, 67, false);
#line 1207 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_main_dashboard\csat_main_dashboard.cshtml"
                      Write(Url.Content("~/csat_main_dashboard/GetPCConnectivitychartdata?ip="));

#line default
#line hidden
            EndContext();
            BeginContext(82037, 3343, true);
            WriteLiteral(@"' + ip + '&system=' + systemvalue + '&ouid=' + ouid + '&status=' + document.getElementById('pcheader').innerText;
                $.ajax({
                    type: ""POST"",
                    url: url,
                    success: function (data) {
                        //debugger;
                        var dataclear = document.getElementById('tblpcconnectivity_div');
                        dataclear.innerHTML = '&nbsp;';
                        $('#tblpcconnectivity_div').append(""<table id='tblpcconnectivity' class='table table-striped table-bordered' width='100%'></table>"");
                        otable = document.getElementById('tblpcconnectivity');
                        var data1 = [];
                        for (var i = 0; i < data.getpcconnectivitydata.length; i++) {
                            data1.push([data.getpcconnectivitydata[i].ou_longname,data.getpcconnectivitydata[i].datetime,data.getpcconnectivitydata[i].device_name, data.getpcconnectivitydata[i].ip, data.getpcconnectiv");
            WriteLiteral(@"itydata[i].os_name]);
                        }
                        var otable = $(""#tblpcconnectivity"").DataTable({
                            data: data1, scrollX: !0, searching: !1, dom: ""<'top'lB>rt<'bottom'ip><'clear'>"", buttons: [""colvis"", { text: ""PDF"", extend: ""pdfHtml5"", download: ""open"", filename: """" + title + ""_"" + today, orientation: ""portrait"", pageSize: ""A4"", exportOptions: { columns: "":visible"", search: ""applied"", order: ""applied"" }, customize: function (t) { t.content.splice(0, 1); var e = new Date, n = e.getDate() + ""-"" + (e.getMonth() + 1) + ""-"" + e.getFullYear(); t.pageMargins = [20, 60, 20, 30], t.defaultStyle.fontSize = 7, t.styles.tableHeader.fontSize = 7, t.header = function () { return { columns: [{ margin: [0, -5, 30, 15], alignment: ""left"", width: 100, image: ""data:image/png;base64,"" + pdflogo }, { margin: [-10, 10, 10, 0], alignment: ""center"", width: 410, text: """" + title + """", fontSize: 12 }, { alignment: ""right"", fontSize: 14, text: """" }], margin: 20 } }, t.footer = functi");
            WriteLiteral(@"on (t, e) { return { columns: [{ alignment: ""left"", text: [""Created on: "", { text: n.toString() }] }, { alignment: ""right"", text: [""page "", { text: t.toString() }, "" of "", { text: e.toString() }] }], margin: 20 } }; var a = { hLineWidth: function (t) { return .5 }, vLineWidth: function (t) { return .5 }, hLineColor: function (t) { return ""#aaa"" }, vLineColor: function (t) { return ""#aaa"" }, paddingLeft: function (t) { return 4 }, paddingRight: function (t) { return 4 } }; t.content[0].layout = a } }, 'excel'],
                            columns: [{ title: ""Branch/ Unit"" },{ title: ""Timestamp"" },{ title: ""System Name"" }, { title: ""IP Address"" }, { title: ""Operating System Name"" }]
                        });
                        $("".table"").css({ ""width"": ""100%"" });
                        $("".dataTables_scrollHeadInner "").css({ ""width"": ""100%"" });
                    },
                    error: function () {
                        alert(""something went to wrong!"")
                    }
       ");
            WriteLiteral(@"         });
            }
            else {
                document.getElementById('pctitle').innerText = 'Not Monitoring Device Detail';
                document.getElementById('pcheader').innerText = 'Not Monitoring Device Detail';
                //var url = '");
            EndContext();
            BeginContext(85381, 67, false);
#line 1236 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_main_dashboard\csat_main_dashboard.cshtml"
                        Write(Url.Content("~/csat_main_dashboard/GetPCConnectivitychartdata?ip="));

#line default
#line hidden
            EndContext();
            BeginContext(85448, 137, true);
            WriteLiteral("\' + ip + \'&system=\' + device + \'&ouid=\' + ouid + \'&status=\' + document.getElementById(\'pcheader\').innerText;\r\n                var url = \'");
            EndContext();
            BeginContext(85586, 67, false);
#line 1237 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_main_dashboard\csat_main_dashboard.cshtml"
                      Write(Url.Content("~/csat_main_dashboard/GetPCConnectivitychartdata?ip="));

#line default
#line hidden
            EndContext();
            BeginContext(85653, 3788, true);
            WriteLiteral(@"' + ip + '&system=' + systemvalue + '&ouid=' + ouid + '&status=' + document.getElementById('pcheader').innerText;
                $.ajax({
                    type: ""POST"",
                    url: url,
                    success: function (data) {
                        var dataclear = document.getElementById('tblpcconnectivity_div');
                        dataclear.innerHTML = '&nbsp;';
                        $('#tblpcconnectivity_div').append(""<table id='tblpcconnectivity' class='table table-striped table-bordered' width='100%'></table>"");
                        otable = document.getElementById('tblpcconnectivity');
                        var data1 = [];
                        for (var i = 0; i < data.getpcconnectivitydata.length; i++) {
                            data1.push([data.getpcconnectivitydata[i].device_name, data.getpcconnectivitydata[i].ip]);
                        }
                        var otable = $(""#tblpcconnectivity"").DataTable({
                            data:");
            WriteLiteral(@" data1, scrollX: !0, searching: !1, dom: ""<'top'lB>rt<'bottom'ip><'clear'>"", buttons: [""colvis"", { text: ""PDF"", extend: ""pdfHtml5"", download: ""open"", filename: ""Not Monitoring Device Detail_"" + today, orientation: ""portrait"", pageSize: ""A4"", exportOptions: { columns: "":visible"", search: ""applied"", order: ""applied"" }, customize: function (t) { t.content.splice(0, 1); var e = new Date, n = e.getDate() + ""-"" + (e.getMonth() + 1) + ""-"" + e.getFullYear(); t.pageMargins = [20, 60, 20, 30], t.defaultStyle.fontSize = 7, t.styles.tableHeader.fontSize = 7, t.header = function () { return { columns: [{ margin: [0, -5, 30, 15], alignment: ""left"", width: 100, image: ""data:image/png;base64,"" + pdflogo }, { margin: [-10, 10, 10, 0], alignment: ""center"", width: 410, text: ""Not Monitoring Device  Report"", fontSize: 12 }, { alignment: ""right"", fontSize: 14, text: """" }], margin: 20 } }, t.footer = function (t, e) { return { columns: [{ alignment: ""left"", text: [""Created on: "", { text: n.toString() }] }, { alignment: ""right"", te");
            WriteLiteral(@"xt: [""page "", { text: t.toString() }, "" of "", { text: e.toString() }] }], margin: 20 } }; var a = { hLineWidth: function (t) { return .5 }, vLineWidth: function (t) { return .5 }, hLineColor: function (t) { return ""#aaa"" }, vLineColor: function (t) { return ""#aaa"" }, paddingLeft: function (t) { return 4 }, paddingRight: function (t) { return 4 } }; t.content[0].layout = a } }, 'excel'],
                            columns: [{ title: ""System Name"" }, { title: ""IP Address"" }]
                        });
                        $("".table"").css({ ""width"": ""100%"" });
                        $("".dataTables_scrollHeadInner "").css({ ""width"": ""100%"" });
                    },
                    error: function () {
                        alert(""something went to wrong!"")
                    }
                });
            }
        }
    }


    // Last Poll time
    $(document).ready(function () {
        validateSingleForm(""#das_details_sys"");
    });
    var days;
    var title;
    functio");
            WriteLiteral(@"n LastPollTime() {
        var $valid = $('#das_details_sys').valid();
        if (!$valid) {
            $validatorform.focusInvalid();
            return false;
        }
        else {
            // debugger;
            days = $('#systemheader').html();
            title = $('#systemtitle').html();
            $('#systemtitle').html('');
            var ip = document.getElementById('ip_count').value;
            //var device = document.getElementById('system_count').value;
            var device = document.getElementById('add_systemname3').value;
            if (device == """") {
                device = document.getElementById(""system_count"").value;
            }
            var url = '");
            EndContext();
            BeginContext(89442, 65, false);
#line 1289 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_main_dashboard\csat_main_dashboard.cshtml"
                  Write(Url.Content("~/csat_main_dashboard/GetLastPollTimechartdata?ip="));

#line default
#line hidden
            EndContext();
            BeginContext(89507, 4029, true);
            WriteLiteral(@"' + ip + '&system=' + device + '&lastpolldays=' + days;
            $.ajax({
                type: ""POST"",
                url: url,
                success: function (data) {
                    document.getElementById('systemtitle').innerText = 'System Detail [ Count: ' + data.getlastpolltimedata.length + ' ]';
                    var dataclear = document.getElementById('tbllastpolltime_div');
                    dataclear.innerHTML = '&nbsp;';
                    $('#tbllastpolltime_div').append(""<table id='tbllastpolltime' class='table table-striped table-bordered' width='100%'></table>"");
                    otable = document.getElementById('tbllastpolltime');
                    var data1 = [];
                    for (var i = 0; i < data.getlastpolltimedata.length; i++) {
                        data1.push([data.getlastpolltimedata[i].ou_longname, data.getlastpolltimedata[i].device_name, data.getlastpolltimedata[i].ip, data.getlastpolltimedata[i].date, data.getlastpolltimedata[i].data1 + "" ");
            WriteLiteral(@""" + data.getlastpolltimedata[i].ostype]);
                    }
                    var otable = $(""#tbllastpolltime"").DataTable({
                        data: data1, scrollX: !0, searching: !1, dom: ""<'top'lB>rt<'bottom'ip><'clear'>"", buttons: [""colvis"", { text: ""PDF"", extend: ""pdfHtml5"", download: ""open"", filename: ""Last Poll Time Chart_"" + today, orientation: ""portrait"", pageSize: ""A4"", exportOptions: { columns: "":visible"", search: ""applied"", order: ""applied"" }, customize: function (t) { t.content.splice(0, 1); var e = new Date, n = e.getDate() + ""-"" + (e.getMonth() + 1) + ""-"" + e.getFullYear(); t.pageMargins = [20, 60, 20, 30], t.defaultStyle.fontSize = 7, t.styles.tableHeader.fontSize = 7, t.header = function () { return { columns: [{ margin: [0, -5, 30, 15], alignment: ""left"", width: 100, image: ""data:image/png;base64,"" + pdflogo }, { margin: [-10, 10, 10, 0], alignment: ""center"", width: 410, text: ""Last Poll Time Chart Report"", fontSize: 12 }, { alignment: ""right"", fontSize: 14, text: """" }], margin");
            WriteLiteral(@": 20 } }, t.footer = function (t, e) { return { columns: [{ alignment: ""left"", text: [""Created on: "", { text: n.toString() }] }, { alignment: ""right"", text: [""page "", { text: t.toString() }, "" of "", { text: e.toString() }] }], margin: 20 } }; var a = { hLineWidth: function (t) { return .5 }, vLineWidth: function (t) { return .5 }, hLineColor: function (t) { return ""#aaa"" }, vLineColor: function (t) { return ""#aaa"" }, paddingLeft: function (t) { return 4 }, paddingRight: function (t) { return 4 } }; t.content[0].layout = a } }, 'excel'],
                        columns: [{ title: ""Branch/ Unit"" }, { title: ""System Name"" }, { title: ""IP Address"" }, { title: ""Last Poll Time"" }, { title: ""Operating System Name"" }]
                    });
                    $("".table"").css({ ""width"": ""100%"" });
                    $("".dataTables_scrollHeadInner "").css({ ""width"": ""100%"" });
                },
                error: function () {
                    alert(""something went to wrong!"")
                }
     ");
            WriteLiteral(@"       });
        }
    }
    // CSAT Audit
    $(document).ready(function () {
        validateSingleForm(""#das_Details_Process"");
    });
    var title;
    var audit_type = """";
    function ShowCsatAuditData(labels) {
        var $valid = $('#das_Details_Process').valid();
        if (!$valid) {
            $validatorform.focusInvalid();
            return false;
        }
        else {
            //debugger;
            audit_type = labels;
            var ouid_audit = document.getElementById('drpou_audit').value;
            var ip = document.getElementById('ip_audit').value;
            //var device = document.getElementById('system_audit').value;
            var device = document.getElementById('add_systemname5').value;
            if (device == """") {
                device = document.getElementById(""system_audit"").value;
            }

            if (audit_type === ""Process"") {
                var url = '");
            EndContext();
            BeginContext(93537, 69, false);
#line 1340 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_main_dashboard\csat_main_dashboard.cshtml"
                      Write(Url.Content("~/csat_main_dashboard/GetCSATAuditProcesschartdata?ip="));

#line default
#line hidden
            EndContext();
            BeginContext(93606, 3484, true);
            WriteLiteral(@"' + ip + '&system=' + device + '&ouid=' + ouid_audit + '&status=' + $('#processtitle').html();
                $.ajax({
                    type: ""POST"",
                    url: url,
                    success: function (data) {
                        document.getElementById('processheader').innerText = 'Process Detail  [ Count :' + data.getcsatauditprocesschartdata.length + ' ] ';
                        var dataclear = document.getElementById('tblprocesschart_div');
                        dataclear.innerHTML = '&nbsp;';
                        $('#tblprocesschart_div').append(""<table id='tblprocesschart' class='table table-striped table-bordered' width='100%'></table>"");
                        otable = document.getElementById('tblprocesschart');
                        var data1 = [];
                        for (var i = 0; i < data.getcsatauditprocesschartdata.length; i++) {
                            data1.push([data.getcsatauditprocesschartdata[i].ou_longname, data.getcsatauditprocessch");
            WriteLiteral(@"artdata[i].device_name, data.getcsatauditprocesschartdata[i].ip, data.getcsatauditprocesschartdata[i].process_name, data.getcsatauditprocesschartdata[i].process_exec_path, data.getcsatauditprocesschartdata[i].process_desc, data.getcsatauditprocesschartdata[i].status]);
                        }
                        var otable = $(""#tblprocesschart"").DataTable({
                            data: data1, scrollX: !0, searching: !1, dom: ""<'top'lB>rt<'bottom'ip><'clear'>"", buttons: [""colvis"", { text: ""PDF"", extend: ""pdfHtml5"", download: ""open"", filename: ""Process Details_"" + today, orientation: ""portrait"", pageSize: ""A4"", exportOptions: { columns: "":visible"", search: ""applied"", order: ""applied"" }, customize: function (t) { t.content.splice(0, 1); var e = new Date, n = e.getDate() + ""-"" + (e.getMonth() + 1) + ""-"" + e.getFullYear(); t.pageMargins = [20, 60, 20, 30], t.defaultStyle.fontSize = 7, t.styles.tableHeader.fontSize = 7, t.header = function () { return { columns: [{ margin: [0, -5, 30, 15], alignment:");
            WriteLiteral(@" ""left"", width: 100, image: ""data:image/png;base64,"" + pdflogo }, { margin: [-10, 10, 10, 0], alignment: ""center"", width: 410, text: ""Process Details Report"", fontSize: 12 }, { alignment: ""right"", fontSize: 14, text: """" }], margin: 20 } }, t.footer = function (t, e) { return { columns: [{ alignment: ""left"", text: [""Created on: "", { text: n.toString() }] }, { alignment: ""right"", text: [""page "", { text: t.toString() }, "" of "", { text: e.toString() }] }], margin: 20 } }; var a = { hLineWidth: function (t) { return .5 }, vLineWidth: function (t) { return .5 }, hLineColor: function (t) { return ""#aaa"" }, vLineColor: function (t) { return ""#aaa"" }, paddingLeft: function (t) { return 4 }, paddingRight: function (t) { return 4 } }; t.content[0].layout = a } }, 'excel'],
                            columns: [{ title: ""Branch/ Unit"" }, { title: ""System Name"" }, { title: ""IP Address"" }, { title: ""Process Name"" }, { title: ""Process Path"" }, { title: ""Process Description"" }, { title: ""Status"" }]
                        ");
            WriteLiteral(@"});
                        $("".table"").css({ ""width"": ""100%"" });
                        $("".dataTables_scrollHeadInner "").css({ ""width"": ""100%"" });
                    },
                    error: function () {
                        alert(""something went to wrong!"")
                    }

                });
            }
            if (audit_type === ""Software"") {
                var url = '");
            EndContext();
            BeginContext(97091, 70, false);
#line 1368 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_main_dashboard\csat_main_dashboard.cshtml"
                      Write(Url.Content("~/csat_main_dashboard/GetCSATAuditSoftwarechartdata?ip="));

#line default
#line hidden
            EndContext();
            BeginContext(97161, 3468, true);
            WriteLiteral(@"' + ip + '&system=' + device + '&ouid=' + ouid_audit + '&status=' + $('#processtitle').html();
                $.ajax({
                    type: ""POST"",
                    url: url,
                    success: function (data) {
                        document.getElementById('processheader').innerText = 'Software Detail  [ Count :' + data.getcsatauditsoftwarechartdata.length + ' ] ';
                        var dataclear = document.getElementById('tblprocesschart_div');
                        dataclear.innerHTML = '&nbsp;';
                        $('#tblprocesschart_div').append(""<table id='tblprocesschart' class='table table-striped table-bordered' width='100%'></table>"");
                        otable = document.getElementById('tblprocesschart');
                        var data1 = [];
                        for (var i = 0; i < data.getcsatauditsoftwarechartdata.length; i++) {
                            data1.push([data.getcsatauditsoftwarechartdata[i].ou_longname, data.getcsatauditsoftw");
            WriteLiteral(@"arechartdata[i].device_name, data.getcsatauditsoftwarechartdata[i].ip, data.getcsatauditsoftwarechartdata[i].software, data.getcsatauditsoftwarechartdata[i].publisher, data.getcsatauditsoftwarechartdata[i].date, data.getcsatauditsoftwarechartdata[i].status]);
                        }
                        var otable = $(""#tblprocesschart"").DataTable({
                            data: data1, scrollX: !0, searching: !1, dom: ""<'top'lB>rt<'bottom'ip><'clear'>"", buttons: [""colvis"", { text: ""PDF"", extend: ""pdfHtml5"", download: ""open"", filename: ""Software Details_"" + today, orientation: ""portrait"", pageSize: ""A4"", exportOptions: { columns: "":visible"", search: ""applied"", order: ""applied"" }, customize: function (t) { t.content.splice(0, 1); var e = new Date, n = e.getDate() + ""-"" + (e.getMonth() + 1) + ""-"" + e.getFullYear(); t.pageMargins = [20, 60, 20, 30], t.defaultStyle.fontSize = 7, t.styles.tableHeader.fontSize = 7, t.header = function () { return { columns: [{ margin: [0, -5, 30, 15], alignment: ""left"", ");
            WriteLiteral(@"width: 100, image: ""data:image/png;base64,"" + pdflogo }, { margin: [-10, 10, 10, 0], alignment: ""center"", width: 410, text: ""Software Details Report"", fontSize: 12 }, { alignment: ""right"", fontSize: 14, text: """" }], margin: 20 } }, t.footer = function (t, e) { return { columns: [{ alignment: ""left"", text: [""Created on: "", { text: n.toString() }] }, { alignment: ""right"", text: [""page "", { text: t.toString() }, "" of "", { text: e.toString() }] }], margin: 20 } }; var a = { hLineWidth: function (t) { return .5 }, vLineWidth: function (t) { return .5 }, hLineColor: function (t) { return ""#aaa"" }, vLineColor: function (t) { return ""#aaa"" }, paddingLeft: function (t) { return 4 }, paddingRight: function (t) { return 4 } }; t.content[0].layout = a } }, 'excel'],
                            columns: [{ title: ""Branch/ Unit"" }, { title: ""System Name"" }, { title: ""IP Address"" }, { title: ""Software Name"" }, { title: ""Publisher"" }, { title: ""Installation Date"" }, { title: ""Status"" }]
                        });
       ");
            WriteLiteral(@"                 $("".table"").css({ ""width"": ""100%"" });
                        $("".dataTables_scrollHeadInner "").css({ ""width"": ""100%"" });
                    },
                    error: function () {
                        alert(""something went to wrong!"")
                    }

                });
            }
            if (audit_type === ""User"") {
                var url = '");
            EndContext();
            BeginContext(100630, 66, false);
#line 1396 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_main_dashboard\csat_main_dashboard.cshtml"
                      Write(Url.Content("~/csat_main_dashboard/GetCSATAuditUserchartdata?ip="));

#line default
#line hidden
            EndContext();
            BeginContext(100696, 11809, true);
            WriteLiteral(@"' + ip + '&system=' + device + '&ouid=' + ouid_audit + '&status=' + $('#processtitle').html();
                $.ajax({
                    type: ""POST"",
                    url: url,
                    success: function (data) {
                        document.getElementById('processheader').innerText = 'User Detail  [ Count :' + data.getcsataudituserchartdata.length + ' ] ';
                        var dataclear = document.getElementById('tblprocesschart_div');
                        dataclear.innerHTML = '&nbsp;';
                        $('#tblprocesschart_div').append(""<table id='tblprocesschart' class='table table-striped table-bordered' width='100%'></table>"");
                        otable = document.getElementById('tblprocesschart');
                        var data1 = [];
                        for (var i = 0; i < data.getcsataudituserchartdata.length; i++) {
                            data1.push([data.getcsataudituserchartdata[i].ou_longname, data.getcsataudituserchartdata[i].devi");
            WriteLiteral(@"ce_name, data.getcsataudituserchartdata[i].ip, data.getcsataudituserchartdata[i].username, data.getcsataudituserchartdata[i].domain_name, data.getcsataudituserchartdata[i].status, data.getcsataudituserchartdata[i].description, data.getcsataudituserchartdata[i].usertype]);
                        }
                        var otable = $(""#tblprocesschart"").DataTable({
                            data: data1, scrollX: !0, searching: !1, dom: ""<'top'lB>rt<'bottom'ip><'clear'>"", buttons: [""colvis"", { text: ""PDF"", extend: ""pdfHtml5"", download: ""open"", filename: ""User Details_"" + today, orientation: ""portrait"", pageSize: ""A4"", exportOptions: { columns: "":visible"", search: ""applied"", order: ""applied"" }, customize: function (t) { t.content.splice(0, 1); var e = new Date, n = e.getDate() + ""-"" + (e.getMonth() + 1) + ""-"" + e.getFullYear(); t.pageMargins = [20, 60, 20, 30], t.defaultStyle.fontSize = 7, t.styles.tableHeader.fontSize = 7, t.header = function () { return { columns: [{ margin: [0, -5, 30, 15], alignment:");
            WriteLiteral(@" ""left"", width: 100, image: ""data:image/png;base64,"" + pdflogo }, { margin: [-10, 10, 10, 0], alignment: ""center"", width: 410, text: ""User Details Report"", fontSize: 12 }, { alignment: ""right"", fontSize: 14, text: """" }], margin: 20 } }, t.footer = function (t, e) { return { columns: [{ alignment: ""left"", text: [""Created on: "", { text: n.toString() }] }, { alignment: ""right"", text: [""page "", { text: t.toString() }, "" of "", { text: e.toString() }] }], margin: 20 } }; var a = { hLineWidth: function (t) { return .5 }, vLineWidth: function (t) { return .5 }, hLineColor: function (t) { return ""#aaa"" }, vLineColor: function (t) { return ""#aaa"" }, paddingLeft: function (t) { return 4 }, paddingRight: function (t) { return 4 } }; t.content[0].layout = a } }, 'excel'],
                            columns: [{ title: ""Branch/ Unit"" }, { title: ""System Name"" }, { title: ""IP Address"" }, { title: ""User Name"" }, { title: ""Domain Name"" }, { title: ""Status"" }, { title: ""Description"" }, { title: ""User Type"" }]
               ");
            WriteLiteral(@"         });
                        $("".table"").css({ ""width"": ""100%"" });
                        $("".dataTables_scrollHeadInner "").css({ ""width"": ""100%"" });
                    },
                    error: function () {
                        alert(""something went to wrong!"")
                    }

                });
            }
        }
    }


    function cleardata() {
        var dataclear = document.getElementById('tbldataleakage_div');
        dataclear.innerHTML = '&nbsp;';
        $('#tbldataleakage_div').append(""<table id='tbldataleakage' class='table table-striped table-bordered' width='100%'></table>"");
        otable = document.getElementById('tbldataleakage');

        var dataclear = document.getElementById('tbldataleakage_div');
        dataclear.innerHTML = '&nbsp;';
        $('#tbldataleakage_div').append(""<table id='tbldataleakage' class='table table-striped table-bordered' width='100%'></table>"");
        otable = document.getElementById('tbldataleakage');

");
            WriteLiteral(@"        var dataclear = document.getElementById('tbldataleakage_div');
        dataclear.innerHTML = '&nbsp;';
        $('#tbldataleakage_div').append(""<table id='tbldataleakage' class='table table-striped table-bordered' width='100%'></table>"");
        otable = document.getElementById('tbldataleakage');

        var dataclear = document.getElementById('tbldataleakage_div');
        dataclear.innerHTML = '&nbsp;';
        $('#tbldataleakage_div').append(""<table id='tbldataleakage' class='table table-striped table-bordered' width='100%'></table>"");
        otable = document.getElementById('tbldataleakage');

        var dataclear = document.getElementById('tblpcconnectivity_div');
        dataclear.innerHTML = '&nbsp;';
        $('#tblpcconnectivity_div').append(""<table id='tblpcconnectivity' class='table table-striped table-bordered' width='100%'></table>"");
        otable = document.getElementById('tblpcconnectivity');

        var dataclear = document.getElementById('tbllastpolltime_div');
");
            WriteLiteral(@"        dataclear.innerHTML = '&nbsp;';
        $('#tbllastpolltime_div').append(""<table id='tbllastpolltime' class='table table-striped table-bordered' width='100%'></table>"");
        otable = document.getElementById('tbllastpolltime');
        var dataclear = document.getElementById('changemgmt_div');
        dataclear.innerHTML = '&nbsp;';
        $('#changemgmt_div').append(""<table id='changemgmt' class='table table-striped table-bordered' width='100%'></table>"");
        otable = document.getElementById('changemgmt');

        var dataclear = document.getElementById('tblprocesschart_div');
        dataclear.innerHTML = '&nbsp;';
        $('#tblprocesschart_div').append(""<table id='tblprocesschart' class='table table-striped table-bordered' width='100%'></table>"");
        otable = document.getElementById('tblprocesschart');
        var dataclear = document.getElementById('tblprocesschart_div');
        dataclear.innerHTML = '&nbsp;';
        $('#tblprocesschart_div').append(""<table id='tbl");
            WriteLiteral(@"processchart' class='table table-striped table-bordered' width='100%'></table>"");
        otable = document.getElementById('tblprocesschart');
        var dataclear = document.getElementById('tblprocesschart_div');
        dataclear.innerHTML = '&nbsp;';
        $('#tblprocesschart_div').append(""<table id='tblprocesschart' class='table table-striped table-bordered' width='100%'></table>"");
        otable = document.getElementById('tblprocesschart');

        document.getElementById('pcheader').innerText = '';
        document.getElementById('drpou').value = '-1';
        document.getElementById('ip').value = '';
        document.getElementById('system').value = '-1';
        document.getElementById('dropou_linkage').value = '-1';
        document.getElementById('ip_linkage').value = '';
        document.getElementById('system_linkage').value = '-1';
        //CAST Audit process_authorise_popup
        document.getElementById('drpou_audit').value = '-1';
        document.getElementById('ip_audi");
            WriteLiteral(@"t').value = '';
        document.getElementById('system_audit').value = '-1';
        //policy chart popup
        var dataclear = document.getElementById('policy_div');
        dataclear.innerHTML = '&nbsp;';
        $('#policy_div').append(""<table id='tblpolicymgmt' class='table table-striped table-bordered' width='100%'></table>"");
        otable = document.getElementById('tblpolicymgmt');
        document.getElementById('drpou_policy').value = '-1';
        document.getElementById('ip_policy').value = '';
        document.getElementById('system_policy').value = '-1';

        document.getElementById(""add_system_chk"").checked = false;
        document.getElementById('add_systemname').value = '-1';
        $('#selectsys').show();
        $('#inputsystemname').hide();

        document.getElementById(""add_system_chk1"").checked = false;
        document.getElementById('add_systemname1').value = '-1';
        $('#selectsys1').show();
        $('#inputsystemname1').hide();

        document");
            WriteLiteral(@".getElementById(""add_system_chk2"").checked = false;
        document.getElementById('add_systemname2').value = '-1';
        $('#selectsys2').show();
        $('#inputsystemname2').hide();

        document.getElementById(""add_system_chk3"").checked = false;
        document.getElementById('add_systemname3').value = '-1';
        $('#selectsys3').show();
        $('#inputsystemname3').hide();

        document.getElementById(""add_system_chk4"").checked = false;
        document.getElementById('add_systemname4').value = '-1';
        $('#selectsys4').show();
        $('#inputsystemname4').hide();

        document.getElementById(""add_system_chk5"").checked = false;
        document.getElementById('add_systemname5').value = '-1';
        $('#selectsys5').show();
        $('#inputsystemname5').hide();
    }

</script>
<script>
    //checkbox input hide & show
    $('#inputsystemname').hide();
    $('#add_system_chk').on('click', function () {
        if ($(this).is(':checked')) {
        ");
            WriteLiteral(@"    $('#selectsys').hide();
            $('#inputsystemname').show();
        }
        else {
            $('#selectsys').show();
            $('#inputsystemname').hide();
            document.getElementById('add_systemname').value = """";
        }
    });
</script>
<script>
    //checkbox input hide & show
    $('#inputsystemname1').hide();
    $('#add_system_chk1').on('click', function () {
        if ($(this).is(':checked')) {
            $('#selectsys1').hide();
            $('#inputsystemname1').show();
        }
        else {
            $('#selectsys1').show();
            $('#inputsystemname1').hide();
            document.getElementById('add_systemname1').value = """";
        }
    });
</script>
<script>
    //checkbox input hide & show
    $('#inputsystemname2').hide();
    $('#add_system_chk2').on('click', function () {
        if ($(this).is(':checked')) {
            $('#selectsys2').hide();
            $('#inputsystemname2').show();
        }
        else {
    ");
            WriteLiteral(@"        $('#selectsys2').show();
            $('#inputsystemname2').hide();
            document.getElementById('add_systemname2').value = """";
        }
    });
</script>
<script>
    //checkbox input hide & show
    $('#inputsystemname3').hide();
    $('#add_system_chk3').on('click', function () {
        if ($(this).is(':checked')) {
            $('#selectsys3').hide();
            $('#inputsystemname3').show();
        }
        else {
            $('#selectsys3').show();
            $('#inputsystemname3').hide();
            document.getElementById('add_systemname3').value = """";
        }
    });
</script>
<script>
    //checkbox input hide & show
    $('#inputsystemname4').hide();
    $('#add_system_chk4').on('click', function () {
        if ($(this).is(':checked')) {
            $('#selectsys4').hide();
            $('#inputsystemname4').show();
        }
        else {
            $('#selectsys4').show();
            $('#inputsystemname4').hide();
            document.g");
            WriteLiteral(@"etElementById('add_systemname4').value = """";
        }
    });
</script>
<script>
    //checkbox input hide & show
    $('#inputsystemname5').hide();
    $('#add_system_chk5').on('click', function () {
        if ($(this).is(':checked')) {
            $('#selectsys5').hide();
            $('#inputsystemname5').show();
        }
        else {
            $('#selectsys5').show();
            $('#inputsystemname5').hide();
            document.getElementById('add_systemname5').value = """";
        }
    });
</script>



");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591

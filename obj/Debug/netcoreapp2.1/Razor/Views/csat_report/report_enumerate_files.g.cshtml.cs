#pragma checksum "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_enumerate_files.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4d40a290723180527b38bcfc65f41f1f89d876c3"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_csat_report_report_enumerate_files), @"mvc.1.0.view", @"/Views/csat_report/report_enumerate_files.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/csat_report/report_enumerate_files.cshtml", typeof(AspNetCore.Views_csat_report_report_enumerate_files))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\_ViewImports.cshtml"
using OwnYITCSAT;

#line default
#line hidden
#line 2 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\_ViewImports.cshtml"
using OwnYITCSAT.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4d40a290723180527b38bcfc65f41f1f89d876c3", @"/Views/csat_report/report_enumerate_files.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fbc54f8cb37d807092c8e3ca3f38d3620e0913e8", @"/Views/_ViewImports.cshtml")]
    public class Views_csat_report_report_enumerate_files : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("frm_enumfile_report"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("frm_enumfile_report"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("frm_settingenumfiles_report"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("frm_settingenumfiles_report"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_enumerate_files.cshtml"
  
    ViewData["Title"] = "report_enumerate_files";
    Layout = "~/Views/Shared/ownyit_main_page.cshtml";

#line default
#line hidden
            BeginContext(116, 1758, true);
            WriteLiteral(@"<script>
    var start_date;
    var end_date;
    $(function () {
        $('input[name=""scandate""]').daterangepicker({
            autoUpdateInput: true,
            timePicker: true,   
            startDate: moment().add(-24, 'hour'),
            endDate: moment(),
            locale: {
                cancelLabel: 'Clear',
                format: 'DD/MM/YYYY  hh:mm A'
            }
        })
        $('input[name=""scandate""]').on('apply.daterangepicker', function (ev, picker) {        
            $(this).val(picker.startDate.format('DD/MM/YYYY') + ' - ' + picker.endDate.format('DD/MM/YYYY'));
            start_date = picker.startDate.format('DD/MM/YYYY');
            end_date = picker.endDate.format('DD/MM/YYYY');
        });

        $('input[name=""scandate""]').on('cancel.daterangepicker', function (ev, picker) {
            $(this).val('');
        });

        $(window).bind('scroll', function () {
            $("".daterangepicker"").hide();
        });
    });
   
</scrip");
            WriteLiteral(@"t>

<script>
    $(document).ready(function () {
        $(""#add_extension"").click(function () {
            $(""#add_extension_form_show"").toggle();
            document.getElementById('Addnewextention').value = '';
        });
    });
</script>

<div class=""row"">
   
        <div class=""ibox float-e-margins "">
            <div class=""ibox-content"" style=""padding:4px;"">
                <div class=""pull-right form_label btn_top_margin"">
                    <button class=""btn btn-primary btn-md day"" data-toggle=""modal"" onclick=""opensettingpopup()"">Scan Settings</button>
                </div>
                <ul class=""breadcrumb"" style=""margin-bottom:0px;"">
                    <li>
                        ");
            EndContext();
            BeginContext(1875, 69, false);
#line 55 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_enumerate_files.cshtml"
                   Write(Html.ActionLink("Reports", "report_agent_information", "csat_report"));

#line default
#line hidden
            EndContext();
            BeginContext(1944, 371, true);
            WriteLiteral(@"
                        <i class=""icon-angle-right""></i>
                    </li>
                    <li> Enumerate Files </li>
                </ul>
            </div>
        </div>
  
    <!--side menu-->
    <div class=""col-sm-2 col-md-2 col-lg-2 no_padding"">
        <div class=""ibox float-e-margins "">
            <div class=""ibox-content sidemenu"">
");
            EndContext();
            BeginContext(2356, 32, false);
#line 68 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_enumerate_files.cshtml"
               Write(Html.Partial("csat_report_menu"));

#line default
#line hidden
            EndContext();
#line 68 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_enumerate_files.cshtml"
                                                     ;
                

#line default
#line hidden
            BeginContext(2410, 468, true);
            WriteLiteral(@"            </div>
        </div>
    </div>
    <!--side menu end-->

    <div class=""col-sm-10 col-md-10 col-lg-10"">
        <div class=""ibox float-e-margins"" style=""margin-bottom: 10px;"">
            <div class=""ibox-content"">
                <div class=""row"">
                    <div class=""col-sm-12 col-md-12 col-lg-12"">

                        <div class=""row"">
                            <div class=""col-xs-12"">
                                ");
            EndContext();
            BeginContext(2878, 541, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "13771aacb6874021a470c0db7e9feb61", async() => {
                BeginContext(2922, 490, true);
                WriteLiteral(@"
                                    <div class=""form-group"">
                                        <label for=""nameField"" style=""margin-top: -5px;background-color: #fff;text-align: center;color: #3D93C8;width: 120px;"" class=""col-xs-2 form_label"">&nbsp;&nbsp;Advance Search&nbsp;&nbsp;</label>
                                        <div class=""col-xs-10"">
                                        </div>
                                    </div>

                                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(3419, 228, true);
            WriteLiteral("\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-xs-12\">\r\n                        ");
            EndContext();
            BeginContext(3647, 3236, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a63269d70a7247ae826fc88e6589859b", async() => {
                BeginContext(3743, 729, true);
                WriteLiteral(@"
                            <div class=""form-group"">
                                <label for=""nameField"" class=""col-xs-1  form_label"">Branch/ Unit</label>
                                <div class=""col-xs-4"">
                                    <select class=""form-control col-sm-3 col-lg-3 col-md-3"" name=""Branch/Unit"" id=""drpou""></select>
                                </div>
                                <label for=""nameField"" class=""col-xs-1 form_label"">System Name</label>
                                <div class=""col-xs-2"" id=""selectsys"">
                                    <select class=""form-control col-sm-3 col-lg-3 col-md-3"" name=""Device"" id=""drpDevice"">
                                        ");
                EndContext();
                BeginContext(4472, 35, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2a9f2fbba20d49daad1e7ed09d20dbd6", async() => {
                    BeginContext(4480, 18, true);
                    WriteLiteral("Select System Name");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(4507, 939, true);
                WriteLiteral(@"
                                    </select>
                                </div>
                                <div class=""col-xs-2"" id=""inputsystemname"">
                                    <input type=""text"" class=""form-control col-sm-3 col-lg-3 col-md-3"" name=""add_systemname"" id=""add_systemname"">
                                </div>
                                <div class=""col-xs-1"">
                                    <input type=""checkbox"" class=""form-check-input"" id=""add_system_chk"" name=""add_system_chk"" style=""width:20px;height:25px;"">
                                </div>
                                <label for=""nameField"" class=""col-xs-1 form_label"" style=""margin-left:-48px;"">IP Address</label>
                                <div class=""col-xs-2"">
                                    <input type=""text"" class=""form-control col-sm-3 col-lg-3 col-md-3"" placeholder="""" name=""drpIP"" id=""drpIP"">
");
                EndContext();
                BeginContext(5640, 814, true);
                WriteLiteral(@"                                </div>
                            </div>


                            <div class=""form-group"">

                                <label for=""nameField"" class=""col-xs-1 form_label"">Date Range</label>
                                <div class=""col-xs-4"">
                                    <input type=""text"" name=""scandate"" class=""form-control"" placeholder=""DD/MM/YYYY hh:mm A "" id=""enumerate_files"">
                                </div>

                                <label for=""nameField"" class=""col-xs-1 form_label""> Extension</label>
                                <div class=""col-xs-2"">
                                    <select class=""form-control col-sm-2 col-lg-2 col-md-2"" name=""Extension"" id=""drpExtension"">
                                        ");
                EndContext();
                BeginContext(6454, 39, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "86ed516c6958408e8ccfaa575387ef01", async() => {
                    BeginContext(6462, 22, true);
                    WriteLiteral("Select File Extension ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(6493, 383, true);
                WriteLiteral(@"
                                    </select>
                                </div>
                                <div class=""pull-left col-xs-1"">
                                    <input type=""button"" class=""btn btn-primary"" value=""Show"" onclick=""ShowExceptionResult()"">
                                </div>
                            </div>
                        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(6883, 1267, true);
            WriteLiteral(@"
                    </div>
                </div>
            </div>
        </div>

        <!--enum file  Details Datatable start-->
        <div class=""row ibox2"">
            <div class=""col-sm-12 col-md-12 col-lg-12 ibox2-content"">
                <div class=""table-responsive"" id=""divEnumResult"">

                </div>
            </div>
        </div>
        <!-- enum file Details end-->
    </div>
    <div class=""space_bottom"">&nbsp;</div>
</div>

<!-- scan settings model box Content-->
<div class=""modal fade scan_settings_popup1"" id=""scan_settings_popup"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog  modal-md"" style=""margin-top: 82px;"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true"" onclick=""cancelException()"">&times;</button>
                <h6 class="" modal-title"">
                    Settin");
            WriteLiteral("gs Enumerate Files\r\n                </h6>\r\n            </div>\r\n            <div class=\"modal-body model_body_scroll\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12 col-md-12 col-lg-12\">\r\n                        ");
            EndContext();
            BeginContext(8150, 4708, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8bba84a2c80a4c36abf1231ee9ff7ecd", async() => {
                BeginContext(8262, 401, true);
                WriteLiteral(@"

                            <div class=""form-group"">
                                <label for=""nameField"" class=""col-xs-2  form_label"">Branch/ Unit Name </label>
                                <div class=""col-xs-6"">
                                    <select class=""form-control col-sm-3 col-lg-3 col-md-3"" name=""Branch/Unit Name "" id=""drpoupopup"">
                                        ");
                EndContext();
                BeginContext(8663, 42, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "66e30dc5f1af43a6a21532bffd010bb6", async() => {
                    BeginContext(8671, 25, true);
                    WriteLiteral("Select Branch/ Unit Name ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(8705, 4146, true);
                WriteLiteral(@"
                                    </select>
                                </div>
                            </div>
                            <div class=""form-group"">
                                <label for=""nameField"" class=""col-xs-2  form_label"">System Name </label>
                                <div class=""col-xs-6"">
                                    <input type=""text"" class=""form-control"" id=""add_scanset_systemname"" name=""add_scanset_systemname"" placeholder=""Enter System Name"" />
                                </div>
                            </div>
                            <div class=""form-group"">
                                <label for=""nameField"" class=""col-xs-2  form_label"">IP Address</label>
                                <div class=""col-xs-2"">
                                    <input type=""text"" class=""form-control"" id=""add_scanset_apadd"" name=""add_scanset_apadd"" placeholder=""Enter IP Address"" />
                                </div>
                        ");
                WriteLiteral(@"        <div class=""col-xs-4""><button type=""button"" class=""btn btn-primary"" onclick=""BindDevice();"">Show Device</button></div>
                            </div>
                            <div class=""form-group"">
                                <label for=""nameField"" class=""col-xs-2"">File Extension </label>
                                <div class=""col-xs-6"">
                                    <div id=""add_extension_form_show"" style=""display:none;"">
                                        <div class=""form-group"">
                                            <label for=""nameField"" class=""col-xs-2 form_label"" style=""margin-left: 12px;""> Add New </label>
                                            <div class=""col-xs-7"">
                                                <input type=""text"" class=""form-control"" id=""Addnewextention"" placeholder=""Add New"" name=""Addnewextention"" />
                                            </div>
                                            <div class=""col-xs-2"">
      ");
                WriteLiteral(@"                                          <button type=""button"" class=""btn btn-primary btn-md"" onclick=""AddException();"" style=""margin-left: -8px;"">Add New </button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class=""col-sm-12 col-md-12 col-lg-12"">
                                        <div style=""margin-left: -4px;"">
                                            <button type=""button"" class=""btn btn-primary"" id=""add_extension""> Add Extension</button>
                                            <button type=""button"" class=""btn btn-primary"" id=""remove_extension"" onclick=""removeException();""> Remove</button>
                                        </div>
                                        <div class=""table-responsive"" id=""chkextention"">
                                        </div>
                                    </div>
                                </d");
                WriteLiteral(@"iv>
                            </div>

                            <!--Enumerate Files Datatable start-->
                            <div class=""row"">
                                <div class=""col-sm-12 col-md-12 col-lg-12"">
                                    <div class=""table-responsive"" id=""divdevicepopup"">
                                    </div>
                                </div>
                            </div>   <!--Enumerate Files Datatable end-->
                            <div class=""form-group"" id=""btnscan"" style=""display:none"">
                                <div class=""col-xs-5"" style=""margin-top: -56px; margin-left: 14px;"">
                                    <input type=""submit"" class=""btn btn-primary"" name=""save"" value=""Apply"" onclick=""ApplyException();"" />
                                    <input type=""button"" class=""btn btn-primary"" name=""close"" value=""Cancel"" onclick=""cancelException();"" data-dismiss=""modal"" />
                                </div>
          ");
                WriteLiteral("                  </div>\r\n                        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(12858, 2348, true);
            WriteLiteral(@"
                    </div>
                </div>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-primary"" name=""close"" onclick=""cancelException();"" data-dismiss=""modal"">Close</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>
<!-- End scan settings model box Content -->
<!-- manage_branch_Unit_popup  model box Content-->
<div class=""modal fade"" id=""results_popup"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"" data-backdrop=""static"" data-keyboard=""false"">
    <div class=""modal-dialog  modal-lg"" style=""margin-top: 82px;"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true"">&times;</button>
                <h6 class="" modal-title"">
                    Show Results
                </h6>
            </div>
            <div class=""");
            WriteLiteral(@"modal-body"">
                <div class=""row"">
                    <div class=""col-sm-12 col-md-12 col-lg-12 "" id=""divscanresultdevice_div"">
                        <table id=""divscanresultdevice"" class=""table table-striped table-bordered display nowrap"" width=""100%""></table>
                    </div>
                </div>
               
                <div class=""row"">
                    <div class=""col-sm-12 col-md-12 col-lg-12 "" id=""scanresultdata_div"">
                        <table id=""scanresultdata"" class=""table table-striped table-bordered display nowrap"" width=""100%""></table>
                    </div>
                </div>               
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-primary"" data-dismiss=""modal"">Close</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>
<!-- End manage_branch_Unit_popup model box Content -->
<script>
    $(document).ready");
            WriteLiteral(@"(function () {
        
        validateSingleForm(""#frm_enumfile_report"");
        validateSingleForm(""#frm_settingenumfiles_report"");
    });
</script>
<script>
    var ou_id;
    var device_name;
    var ip_address;
    var start_date;
    var end_date;
    var ouidvalue;
    $.get('");
            EndContext();
            BeginContext(15207, 35, false);
#line 291 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_enumerate_files.cshtml"
      Write(Url.Content("~/csat_report/GetOU/"));

#line default
#line hidden
            EndContext();
            BeginContext(15242, 158, true);
            WriteLiteral("\', null, DataBind)\r\n    function DataBind(data) {\r\n        $(\"#overlay\").show();\r\n        $(\"#overlay\").fadeIn(300);\r\n        //debugger;\r\n        var url = \'");
            EndContext();
            BeginContext(15401, 35, false);
#line 296 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_enumerate_files.cshtml"
              Write(Url.Content("~/csat_report/GetOU/"));

#line default
#line hidden
            EndContext();
            BeginContext(15436, 3523, true);
            WriteLiteral(@"';
        $.ajax({
            type: ""POST"",   
            url: url,
            success: function (data) {
                    var SetData = $('#drpou');
                    var SetDataPopup = $('#drpoupopup');
                    jQuery('#drpou').html('');
                    jQuery('#drpoupopup').html('');

                    var oudata = ""<option value='-1'>Select Branch/ Unit</option>"";
                    for (var i = 0; i < data.ou.length; i++) {
                        oudata += ""<option value='"" + data.ou[i].ouid + ""'>"" + data.ou[i].ouname + ""</option>"";
                    }
                    SetData.append(oudata);
                    SetDataPopup.append(oudata);

                    var SetExtension = $('#drpExtension');
                    jQuery('#drpExtension').html('');
                    var SetExtensioncheck = $('#chkextention');
                    jQuery('#chkextention').html('');
                    var extentiondata = ""<option value='-1'>Select Extention</optio");
            WriteLiteral(@"n>"";
                            var extentiondatacheck = ""<table class='table table-striped table-bordered tblsimple' style='width:100%'><thead><tr><th class='select noExport' data-orderable='false'><input type='checkbox' class='parent' data-group='.group3' id='checkallextention' onclick='checkallitems(this,this.id);' /></th><th class='col-sm-5'>File Extension</th></tr></thead><tbody>"";
                            for (var i = 0; i < data.extention.length; i++) {
                        extentiondata += ""<option value='"" + data.extention[i].extentionname + ""'>"" + data.extention[i].extentionname + ""</option>"";            
                        extentiondatacheck += ""<tr><td class='select'><input type='checkbox' class='group3'  name='check[]' id='checkallextention' onchange='getcheckedvalue()' value='"" + data.extention[i].extentionname + ""' /></td><td class='col-sm-12'>"" + data.extention[i].extentionname + ""</td></tr>"";
                    }
                    SetExtension.append(extentiondata);
    ");
            WriteLiteral(@"                SetExtensioncheck.append(extentiondatacheck);
                        datatable_simple();                      
                    $("".parent"").each(function (index) {
                        var group = $(this).data(""group"");
                        var parent = $(this);

                        parent.prop('checked', false);
                        if ($(group + ':checked').length == $(group).length && $(group).length != ""0"") {
                            parent.prop('checked', true);
                        }
                        parent.change(function () {  //""select all"" change
                            $(group).prop('checked', parent.prop(""checked""));
                            //checkallextention(source, parentid);
                            getcheckedvalue();
                        });
                        $(group).change(function () {
                            parent.prop('checked', false);
                            if ($(group + ':checked').length == ");
            WriteLiteral(@"$(group).length) {
                                parent.prop('checked', true);
                            }
                        });
                    });
            }
            }).done(function () {
                setTimeout(function () {
                    $(""#overlay"").fadeOut(300);
                }, 500);
            });
    }
    $(""#drpou"").change(function () {

        ouidvalue = this.value;
        var url = '");
            EndContext();
            BeginContext(18960, 52, false);
#line 356 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_enumerate_files.cshtml"
              Write(Url.Content("~/csat_report/Get_syatemname_ip?ouid="));

#line default
#line hidden
            EndContext();
            BeginContext(19012, 1092, true);
            WriteLiteral(@"' + this.value;
        $.ajax({
        type: ""POST"",
        url: url,
        success: function (data) {
        // debugger;
        var SetDatadevice = $('#drpDevice');
            //var SetDataip = $('#drpIP');
        jQuery('#drpDevice').html('');
            //jQuery('#drpIP').html('');
        var devicedata = ""<option value='-1'>Select System Name</option>"";
        //var ipdata = ""<option value='-1'>Select IP Address</option>"";
        for (var i = 0; i < data.systemip.length; i++) {
           devicedata+=""<option value='""+ data.systemip[i].device_name +""'>""+ data.systemip[i].device_name +""</option>"";
           //ipdata+=""<option value='""+ data.systemip[i].ip +""'>""+ data.systemip[i].ip +""</option>"";
            }
            SetDatadevice.append(devicedata);
            //SetDataip.append(ipdata);

        }

        });

    });
    $(""#drpoupopup"").change(function () {

        ouidvalue = this.value;
        BindDevice();
    });
    function BindDevice() {
     ");
            WriteLiteral("   //alert(111);\r\n        //alert(ouidvalue);\r\n        //var url = \'");
            EndContext();
            BeginContext(20105, 52, false);
#line 388 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_enumerate_files.cshtml"
                Write(Url.Content("~/csat_report/Get_syatemname_ip?ouid="));

#line default
#line hidden
            EndContext();
            BeginContext(20157, 191, true);
            WriteLiteral("\' + this.value;\r\n        var sysname = document.getElementById(\'add_scanset_systemname\').value;\r\n        var ipadd = document.getElementById(\'add_scanset_apadd\').value;\r\n\r\n        var url = \'");
            EndContext();
            BeginContext(20349, 62, false);
#line 392 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_enumerate_files.cshtml"
              Write(Url.Content("~/csat_report/Get_syatemname_ip_file_enum?ouid="));

#line default
#line hidden
            EndContext();
            BeginContext(20411, 3104, true);
            WriteLiteral(@"' + ouidvalue + '&devicename=' + sysname + '&ipaddress=' + ipadd;
        //alert(url);
        $.ajax({
        type: ""POST"",
        url: url,
        success: function (data) {
        //debugger;
            var SetDatadevice = $('#divdevicepopup');
            jQuery('#divdevicepopup').html('');
            var devicedata = ""<table class='table table-striped table-bordered tblpaging' style='width:100%'><thead><tr><th class='col-xs-1 select' data-orderable='false'><input type='checkbox' class='parent' data-group='.group111' id='chkpopupdeviceid' onclick='getcheckeddevice()'   /></th><th class='col-xs-3'>System Name</th><th class='col-xs-2'>IP Address</th><th class='col-xs-6'>Branch/ Unit Name</th></tr></thead><tbody>"";
            for (var i = 0; i < data.systemip.length; i++) {
                devicedata += ""<tr><td class='col-xs-1 select'><input type='checkbox' class='group111' name='check[]' id='chkpopupdeviceid' value='"" + data.systemip[i].device_id +""' /></td>"";
                devicedata");
            WriteLiteral(@" += ""<td class='col-xs-3'>"" + data.systemip[i].device_name + ""</td>"";
                devicedata += ""<td class='col-xs-2'>"" + data.systemip[i].ip + ""</td>"";
                devicedata += ""<td class='col-xs-6'>"" + data.systemip[i].ou_longname + ""</td>"";
            }
            devicedata += ""</tbody></table>"";
            SetDatadevice.append(devicedata);
            if (data.systemip.length > 0)
                $(""#btnscan"").show();
                //Setgriddata.append(""<div class='form-group'><div class='col-xs-5'><input type='button' class='btn btn-primary' name='save' value='Apply' onclick='ApplyException();' /></div></div>"");
            datatable_paging();
            $("".parent"").each(function (index) {
                var group = $(this).data(""group"");
                var parent = $(this);

                parent.prop('checked', false);
                if ($(group + ':checked').length == $(group).length && $(group).length != ""0"") {
                    parent.prop('checked', true);
  ");
            WriteLiteral(@"              }
                parent.change(function () {  //""select all"" change
                    $(group).prop('checked', parent.prop(""checked""));
                    getcheckeddevice();
                });
                $(group).change(function () {
                    parent.prop('checked', false);
                    if ($(group + ':checked').length == $(group).length) {
                        parent.prop('checked', true);
                    }
                });
            });
        }
        });
    }
    $(""#drpDevice"").change(function () {

        device_name = this.value;
    });
    //$(""#drpIP"").change(function () {

    //    ip_address = this.value;
    //});
</script>
<script>   
    function AddException() {
        var $valid = $('#frm_settingenumfiles_report').valid();
        if (!$valid) {
            $validatorform.focusInvalid();
            return false;
        } else {
            var extentionname = document.getElementById('Addnewextention')");
            WriteLiteral(".value;\r\n            var url = \'");
            EndContext();
            BeginContext(23516, 66, false);
#line 453 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_enumerate_files.cshtml"
                  Write(Url.Content("~/csat_report/add_fileextension_data?extentionname="));

#line default
#line hidden
            EndContext();
            BeginContext(23582, 2220, true);
            WriteLiteral(@"' + extentionname;
            $.ajax({
                type: ""POST"",
                url: url,
                success: function (data) {
                    //debugger;
                    var SetExtensioncheck = $('#chkextention');
                    jQuery('#chkextention').html('');
                    var extentiondatacheck = ""<table class='table table-striped table-bordered tblsimple' style='width:100%'><thead><tr><th class='select noExport' data-orderable='false'><input type='checkbox' class='parent' data-group='.group11' id='checkallextention' onclick='fetchdata(this)' /></th><th class='col-sm-5'>File Extension</th></tr></thead><tbody>"";
                    for (var i = 0; i < data.fileextensiondata.length; i++) {
                        extentiondatacheck += ""<tr><td class='select'><input type='checkbox' class='group11' name='check[]' id='checkallextention'  value='"" + data.fileextensiondata[i].extentionname + ""' /></td><td class='col-sm-12'>"" + data.fileextensiondata[i].extentionname + ""<");
            WriteLiteral(@"/td></tr>"";
                    }
                    SetExtensioncheck.append(extentiondatacheck);
                    document.getElementById('Addnewextention').value = '';
                    datatable_simple();
                    $("".parent"").each(function (index) {
                        var group = $(this).data(""group"");
                        var parent = $(this);

                        parent.change(function () {  //""select all"" change
                            $(group).prop('checked', parent.prop(""checked""));
                            //  UncheckMain1();
                            getcheckedvalue();
                        });
                        $(group).change(function () {
                            parent.prop('checked', false);
                            if ($(group + ':checked').length == $(group).length) {
                                parent.prop('checked', true);

                            }
                        });
                    });

     ");
            WriteLiteral("           }\r\n            });\r\n        }\r\n    }\r\n</script>\r\n<script>\r\n    function removeException() {\r\n        //debugger;\r\n        getcheckedvalue();\r\n        var url = \'");
            EndContext();
            BeginContext(25803, 69, false);
#line 495 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_enumerate_files.cshtml"
              Write(Url.Content("~/csat_report/remove_fileextension_data?extentionname="));

#line default
#line hidden
            EndContext();
            BeginContext(25872, 3973, true);
            WriteLiteral(@"'+ checkedextention;
        $.ajax({
            type: ""POST"",
            url: url,
            success: function (data) {
                //debugger;
                var SetExtensioncheck = $('#chkextention');
                jQuery('#chkextention').html('');
                var extentiondatacheck = ""<table class='table table-striped table-bordered tblsimple' style='width:100%'><thead><tr><th class='select noExport' data-orderable='false'><input type='checkbox' class='parent' data-group='.group2' id='checkallextention' onclick='fetchdata(this)' /></th><th class='col-sm-5'>File Extension</th></tr></thead><tbody>"";
                for (var i = 0; i < data.fileextensiondata.length; i++) {
                    extentiondatacheck += ""<tr><td class='select'><input type='checkbox' class='group2' name='check[]' id='checkallextention'  value='"" + data.fileextensiondata[i].extentionname + ""' /></td><td class='col-sm-12'>"" + data.fileextensiondata[i].extentionname + ""</td></tr>"";
                }
        ");
            WriteLiteral(@"        SetExtensioncheck.append(extentiondatacheck);
                datatable_simple();        
                $("".parent"").each(function (index) {
                    var group = $(this).data(""group"");
                    var parent = $(this);

                    parent.change(function () {  //""select all"" change
                        $(group).prop('checked', parent.prop(""checked""));
                        //  UncheckMain1();
                        getcheckedvalue();
                    });
                    $(group).change(function () {
                        parent.prop('checked', false);
                        if ($(group + ':checked').length == $(group).length) {
                            parent.prop('checked', true);

                        }
                    });
                });

            }
        });
    }
   
    var checkedextention = """";
    var checkedextention1 = """";
    var checkedextentioncount = 0;
    function checkallitems(source, parentid)");
            WriteLiteral(@" {
        //debugger;
        checkedextention = """";
        checkedextention1 = """";
        checkedextentioncount = 0;
        var checkboxes = document.querySelectorAll('input[id=""' + parentid + '""]');
        for (var i = 1; i < checkboxes.length; i++) {
            if (checkboxes[i] != source)
                checkboxes[i].checked = source.checked;
        }
    }

    var checkedextention = """";
    var checkedextention1 = """";
    var checkedextentioncount = 0;
    function getcheckedvalue() {
        //debugger;
        checkedextention = """";
        checkedextention1 = """";
        checkedextentioncount = 0;
        var checkboxes = document.querySelectorAll('input[id=""checkallextention""]');
        for (var i = 1; i < checkboxes.length; i++) {
            if (checkboxes[i].checked == true) {      
                checkedextention += "",'"" + checkboxes[i].value + ""'"";
                checkedextention1 += "","" + checkboxes[i].value;
                checkedextentioncount++;
       ");
            WriteLiteral(@"     }
            else {
            }
        }
    }

    var checkeddevice = """";
    function getcheckeddevice() {
        //debugger;
        checkeddevice = """";
        var checkboxes = document.querySelectorAll('input[id=""chkpopupdeviceid""]');
        for (var i = 0; i < checkboxes.length; i++) {
            if (checkboxes[i].checked == true) {
                checkeddevice += "","" + checkboxes[i].value;
            }
            else {}
        }
    }

    function ApplyException() {
        //debugger;
        var SystemChecked = $('input[id=""chkpopupdeviceid""]:checked').length > 0;
        var fileextensionChecked = $('input[id=""checkallextention""]:checked').length > 0;

        if (SystemChecked == true && fileextensionChecked == true) {
            // return true;
            getcheckedvalue();
            getcheckeddevice();
            var url = '");
            EndContext();
            BeginContext(29846, 68, false);
#line 588 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_enumerate_files.cshtml"
                  Write(Url.Content("~/csat_report/apply_fileextension_data?extentionname="));

#line default
#line hidden
            EndContext();
            BeginContext(29914, 2249, true);
            WriteLiteral(@"' + checkedextention + '&deviceidlist=' + checkeddevice + '&extentionnamecount=' + checkedextentioncount + '&extentionname1=' + checkedextention1;
             $.ajax({
            type: ""POST"",
            url: url,
            success: function (data) {
                alert(data);
            }
        });
        }
        else {
            alert(""Select any one File Extension n System Name !"");
            return false;
        }
        //getcheckedvalue();
        //getcheckeddevice();
        
    }
    function cancelException() {
        document.getElementById(""drpoupopup"").value = '-1';
        $(""#add_extension_form_show"").hide();
        document.getElementById('Addnewextention').value = '';
        checkedextention = """";
        checkedextention1 = """";
        checkedextentioncount = 0;
        var checkboxesext = document.querySelectorAll('input[id=""checkallextention""]');
        for (var i = 0; i < checkboxesext.length; i++) {
            checkboxesext[i].checked = ");
            WriteLiteral(@"false;
        }
        var checkboxesdevice = document.querySelectorAll('input[id=""chkpopupdeviceid""]');
        for (var i = 0; i < checkboxesdevice.length; i++) {
            checkboxesdevice[i].checked = false;
        }
        $(""#btnscan"").hide();

    }

    function ShowExceptionResult() {
        var $valid = $('#frm_enumfile_report').valid();
        if (!$valid) {
            $validatorform.focusInvalid();
            return false;
        } else {
            //debugger;
            $(""#overlay"").show();
            $(""#overlay"").fadeIn(300);
            var ip_address = document.getElementById('drpIP').value;
            start_date = $('#enumerate_files').data('daterangepicker').startDate.format('DD/MM/YYYY');
            end_date = $('#enumerate_files').data('daterangepicker').endDate.format('DD/MM/YYYY');
            getcheckedvalue();
            getcheckeddevice();
            var device_name = document.getElementById('add_systemname').value;
            if (device_");
            WriteLiteral("name == \"\") {\r\n                device_name = document.getElementById(\"drpDevice\").value;\r\n            }\r\n            var fileex = document.getElementById(\'drpExtension\').value;\r\n            var url = \'");
            EndContext();
            BeginContext(32164, 66, false);
#line 643 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_enumerate_files.cshtml"
                  Write(Url.Content("~/csat_report/report_fileextension_scanresult?ouid="));

#line default
#line hidden
            EndContext();
            BeginContext(32230, 2594, true);
            WriteLiteral(@"' + ouidvalue + '&ip=' + ip_address + '&device=' + device_name + '&fileex=' + fileex + '&sdate=' + start_date + '&edate=' + end_date;
            $.ajax({
                type: ""POST"",
                url: url,
                success: function (data) {
                    var SetExtensioncheck = $('#divEnumResult');
                    jQuery('#divEnumResult').html('');
                    var extentiondatacheck = ""<table class='table table-striped table-bordered tbl_pdfexport_date' style='width:100%'><thead><tr><th class='col-sm-3'>Branch/ Unit</th><th class='col-sm-2'>System Name</th><th class='col-sm-2'>IP Address</th><th class='col-sm-2'>File Extention</th><th class='col-sm-2'>Scan Timestamp</th>"" +
                        //""<th class='col-sm-2'>Status</th>"" +
                        ""<th class='icon noExport' data-orderable='false'>Results</th></tr></thead> <tbody>"";
                    for (var i = 0; i < data.fileextensionscanresult.length; i++) {
                        extentiondatacheck");
            WriteLiteral(@" += ""<tr><td class='col-sm-3'>"" + data.fileextensionscanresult[i].ou_longname + ""</td><td class='col-sm-2'>"" + data.fileextensionscanresult[i].device_name + ""</td><td class='col-sm-2'>"" + data.fileextensionscanresult[i].ip + ""</td><td class='col-sm-2'>"" + data.fileextensionscanresult[i].file_extention + ""</td><td class='col-sm-2'>"" + data.fileextensionscanresult[i].file_enum_time + ""</td>"";
                        //extentiondatacheck += ""<td class='col-sm-2'>"" + data.fileextensionscanresult[i].status + ""</td>"";
                        extentiondatacheck += ""<td class='col-sm-1 icon'><i class='glyphicon glyphicon-list-alt manage_icon' type='button' data-toggle='modal' onclick='showresultdata("" + data.fileextensionscanresult[i].file_enum_id + "", "" + data.fileextensionscanresult[i].device_id + "")' title='Results Detail'></i></td></tr > "";
                    }
                    extentiondatacheck += ""</tbody></table>"";
                    SetExtensioncheck.append(extentiondatacheck);

                 ");
            WriteLiteral(@"   reportdate = document.getElementById('enumerate_files').value;
                    reportname = ""Enumerate Files Report"";
                    datatable_pdfexport_date(reportname, reportdate);

                }
            }).done(function () {
                setTimeout(function () {
                    $(""#overlay"").fadeOut(300);
                }, 500);
            });
        }
    }
    function showresultdata(file_enum_id, device_id) {
        //debugger;
        $(""#results_popup"").modal('show');
        var url = '");
            EndContext();
            BeginContext(34825, 79, false);
#line 676 "C:\Users\USER\Desktop\OwnYITCSAT_V3\Views\csat_report\report_enumerate_files.cshtml"
              Write(Url.Content("~/csat_report/report_fileextension_scanresult_data?file_enum_id="));

#line default
#line hidden
            EndContext();
            BeginContext(34904, 5197, true);
            WriteLiteral(@"' + file_enum_id + '&deviceid=' + device_id;
        $.ajax({
            type: ""POST"",
            url: url,
            success: function (data) {
                var dataclear = document.getElementById('divscanresultdevice_div');
                dataclear.innerHTML = '&nbsp;';
                $('#divscanresultdevice_div').append(""<table id='divscanresultdevice' class='table table-striped table-bordered' width='100%'></table>"");
                otable = document.getElementById('divscanresultdevice');
                var data1 = [];
                for (var i = 0; i < data.fileextensionscanresultdevice.length; i++) {
                    data1.push([data.fileextensionscanresultdevice[i].ou_longname, data.fileextensionscanresultdevice[i].device_name, data.fileextensionscanresultdevice[i].ip, data.fileextensionscanresultdevice[i].file_enum_time]);
                }
                var otable = $(""#divscanresultdevice"").DataTable({
                    data: data1, scrollX: !0, searching: !1,
     ");
            WriteLiteral(@"               columns: [{ title: ""Branch/ Unit"" }, { title: ""System Name"" }, { title: ""IP Address"" }, { title: ""Scan Timestamp"" }]
                });
                $("".table"").css({ ""width"": ""100%"" });
                $("".dataTables_scrollHeadInner "").css({ ""width"": ""100%"" });    

                var dataclear = document.getElementById('scanresultdata_div');
                dataclear.innerHTML = '&nbsp;';
                $('#scanresultdata_div').append(""<table id='scanresultdata' class='table table-striped table-bordered' width='100%'></table>"");
                otable = document.getElementById('scanresultdata');
                var data1 = [];
                for (var i = 0; i < data.fileextensionscanresultdata.length; i++) {
                    data1.push([data.fileextensionscanresultdata[i].e111extension, data.fileextensionscanresultdata[i].e111filename, data.fileextensionscanresultdata[i].e111size]);
                }
                var otable = $(""#scanresultdata"").DataTable({
       ");
            WriteLiteral(@"             data: data1, scrollX: !0, searching: !1, dom: ""<'top'lB>rt<'bottom'ip><'clear'>"", buttons: [""colvis"", { text: ""PDF"", extend: ""pdfHtml5"", download: ""open"", filename: ""Event Monitoring_"" + today, orientation: ""portrait"", pageSize: ""A4"", exportOptions: { columns: "":visible"", search: ""applied"", order: ""applied"" }, customize: function (t) { t.content.splice(0, 1); var e = new Date, n = e.getDate() + ""-"" + (e.getMonth() + 1) + ""-"" + e.getFullYear(); t.pageMargins = [20, 60, 20, 30], t.defaultStyle.fontSize = 7, t.styles.tableHeader.fontSize = 7, t.header = function () { return { columns: [{ margin: [0, -5, 30, 15], alignment: ""left"", width: 100, image: ""data:image/png;base64,"" + pdflogo }, { margin: [-10, 10, 10, 0], alignment: ""center"", width: 410, text: ""Event Monitoring Report"", fontSize: 12 }, { alignment: ""right"", fontSize: 14, text: """" }], margin: 20 } }, t.footer = function (t, e) { return { columns: [{ alignment: ""left"", text: [""Created on: "", { text: n.toString() }] }, { alignment: ""right"", te");
            WriteLiteral(@"xt: [""page "", { text: t.toString() }, "" of "", { text: e.toString() }] }], margin: 20 } }; var a = { hLineWidth: function (t) { return .5 }, vLineWidth: function (t) { return .5 }, hLineColor: function (t) { return ""#aaa"" }, vLineColor: function (t) { return ""#aaa"" }, paddingLeft: function (t) { return 4 }, paddingRight: function (t) { return 4 } }; t.content[0].layout = a } }, 'excel'],
                    columns: [{ title: ""File Type"" }, { title: ""File Name"" }, { title: ""File Size [KB]"" }]
                });
                $("".table"").css({ ""width"": ""100%"" });
                $("".dataTables_scrollHeadInner "").css({ ""width"": ""100%"" });
            }
        });
    }
    function cleardata() {
        var dataclear = document.getElementById('divscanresultdevice_div');
        dataclear.innerHTML = '&nbsp;';
        $('#divscanresultdevice_div').append(""<table id='divscanresultdevice' class='table table-striped table-bordered' width='100%'></table>"");
        otable = document.getElementById('di");
            WriteLiteral(@"vscanresultdevice');

        var dataclear = document.getElementById('scanresultdata_div');
        dataclear.innerHTML = '&nbsp;';
        $('#scanresultdata_div').append(""<table id='scanresultdata' class='table table-striped table-bordered' width='100%'></table>"");
        otable = document.getElementById('scanresultdata');
    }
</script>
<script>
    function opensettingpopup() {
        var SetDatadevice = $('#divdevicepopup');
        jQuery('#divdevicepopup').html('');
        var devicedata = """";
        SetDatadevice.append(devicedata);
        $("".scan_settings_popup1"").modal('show');       
    }

 
</script>
<script>
    //checkbox input hide & show
    $('#inputsystemname').hide();
    $('#add_system_chk').on('click', function () {
        if ($(this).is(':checked')) {
            $('#selectsys').hide();
            $('#inputsystemname').show();
        }
        else {
            $('#selectsys').show();
            $('#inputsystemname').hide();
            documen");
            WriteLiteral("t.getElementById(\'add_systemname\').value = \"\";\r\n        }\r\n    });\r\n</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
